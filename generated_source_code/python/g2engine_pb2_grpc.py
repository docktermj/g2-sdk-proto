# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import g2engine_pb2 as g2engine__pb2


class G2DiagnosticStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddRecord = channel.unary_unary(
                '/g2engine.G2Diagnostic/AddRecord',
                request_serializer=g2engine__pb2.AddRecordRequestRequest.SerializeToString,
                response_deserializer=g2engine__pb2.AddRecordResponseResponse.FromString,
                )
        self.AddRecordWithInfo = channel.unary_unary(
                '/g2engine.G2Diagnostic/AddRecordWithInfo',
                request_serializer=g2engine__pb2.AddRecordWithInfoRequest.SerializeToString,
                response_deserializer=g2engine__pb2.AddRecordWithInfoResponse.FromString,
                )
        self.AddRecordWithInfoWithReturnedRecordID = channel.unary_unary(
                '/g2engine.G2Diagnostic/AddRecordWithInfoWithReturnedRecordID',
                request_serializer=g2engine__pb2.AddRecordWithInfoWithReturnedRecordIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.AddRecordWithInfoWithReturnedRecordIDResponse.FromString,
                )
        self.AddRecordWithReturnedRecordID = channel.unary_unary(
                '/g2engine.G2Diagnostic/AddRecordWithReturnedRecordID',
                request_serializer=g2engine__pb2.AddRecordWithReturnedRecordIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.AddRecordWithReturnedRecordIDResponse.FromString,
                )
        self.CheckRecord = channel.unary_unary(
                '/g2engine.G2Diagnostic/CheckRecord',
                request_serializer=g2engine__pb2.CheckRecordRequest.SerializeToString,
                response_deserializer=g2engine__pb2.CheckRecordResponse.FromString,
                )
        self.ClearLastException = channel.unary_unary(
                '/g2engine.G2Diagnostic/ClearLastException',
                request_serializer=g2engine__pb2.ClearLastExceptionRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ClearLastExceptionResponse.FromString,
                )
        self.CloseExport = channel.unary_unary(
                '/g2engine.G2Diagnostic/CloseExport',
                request_serializer=g2engine__pb2.CloseExportRequest.SerializeToString,
                response_deserializer=g2engine__pb2.CloseExportResponse.FromString,
                )
        self.CountRedoRecords = channel.unary_unary(
                '/g2engine.G2Diagnostic/CountRedoRecords',
                request_serializer=g2engine__pb2.CountRedoRecordsRequest.SerializeToString,
                response_deserializer=g2engine__pb2.CountRedoRecordsResponse.FromString,
                )
        self.DeleteRecord = channel.unary_unary(
                '/g2engine.G2Diagnostic/DeleteRecord',
                request_serializer=g2engine__pb2.DeleteRecordRequest.SerializeToString,
                response_deserializer=g2engine__pb2.DeleteRecordResponse.FromString,
                )
        self.DeleteRecordWithInfo = channel.unary_unary(
                '/g2engine.G2Diagnostic/DeleteRecordWithInfo',
                request_serializer=g2engine__pb2.DeleteRecordWithInfoRequest.SerializeToString,
                response_deserializer=g2engine__pb2.DeleteRecordWithInfoResponse.FromString,
                )
        self.Destroy = channel.unary_unary(
                '/g2engine.G2Diagnostic/Destroy',
                request_serializer=g2engine__pb2.DestroyRequest.SerializeToString,
                response_deserializer=g2engine__pb2.DestroyResponse.FromString,
                )
        self.ExportConfig = channel.unary_unary(
                '/g2engine.G2Diagnostic/ExportConfig',
                request_serializer=g2engine__pb2.ExportConfigRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ExportConfigResponse.FromString,
                )
        self.ExportConfigAndConfigID = channel.unary_unary(
                '/g2engine.G2Diagnostic/ExportConfigAndConfigID',
                request_serializer=g2engine__pb2.ExportConfigAndConfigIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ExportConfigAndConfigIDResponse.FromString,
                )
        self.ExportCSVEntityReport = channel.unary_unary(
                '/g2engine.G2Diagnostic/ExportCSVEntityReport',
                request_serializer=g2engine__pb2.ExportCSVEntityReportRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ExportCSVEntityReportResponse.FromString,
                )
        self.ExportJSONEntityReport = channel.unary_unary(
                '/g2engine.G2Diagnostic/ExportJSONEntityReport',
                request_serializer=g2engine__pb2.ExportJSONEntityReportRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ExportJSONEntityReportResponse.FromString,
                )
        self.FetchNext = channel.unary_unary(
                '/g2engine.G2Diagnostic/FetchNext',
                request_serializer=g2engine__pb2.FetchNextRequest.SerializeToString,
                response_deserializer=g2engine__pb2.FetchNextResponse.FromString,
                )
        self.FindInterestingEntitiesByEntityID = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindInterestingEntitiesByEntityID',
                request_serializer=g2engine__pb2.FindInterestingEntitiesByEntityIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.FindInterestingEntitiesByEntityIDResponse.FromString,
                )
        self.FindInterestingEntitiesByRecordID = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindInterestingEntitiesByRecordID',
                request_serializer=g2engine__pb2.FindInterestingEntitiesByRecordIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.FindInterestingEntitiesByRecordIDResponse.FromString,
                )
        self.FindNetworkByEntityID = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindNetworkByEntityID',
                request_serializer=g2engine__pb2.FindNetworkByEntityIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.FindNetworkByEntityIDResponse.FromString,
                )
        self.FindNetworkByEntityID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindNetworkByEntityID_V2',
                request_serializer=g2engine__pb2.FindNetworkByEntityID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.FindNetworkByEntityID_V2Response.FromString,
                )
        self.FindNetworkByRecordID = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindNetworkByRecordID',
                request_serializer=g2engine__pb2.FindNetworkByRecordIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.FindNetworkByRecordIDResponse.FromString,
                )
        self.FindNetworkByRecordID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindNetworkByRecordID_V2',
                request_serializer=g2engine__pb2.FindNetworkByRecordID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.FindNetworkByRecordID_V2Response.FromString,
                )
        self.FindPathByEntityID = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindPathByEntityID',
                request_serializer=g2engine__pb2.FindPathByEntityIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.FindPathByEntityIDResponse.FromString,
                )
        self.FindPathByEntityID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindPathByEntityID_V2',
                request_serializer=g2engine__pb2.FindPathByEntityID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.FindPathByEntityID_V2Response.FromString,
                )
        self.FindPathByRecordID = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindPathByRecordID',
                request_serializer=g2engine__pb2.FindPathByRecordIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.FindPathByRecordIDResponse.FromString,
                )
        self.FindPathByRecordID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindPathByRecordID_V2',
                request_serializer=g2engine__pb2.FindPathByRecordID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.FindPathByRecordID_V2Response.FromString,
                )
        self.FindPathExcludingByEntityID = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindPathExcludingByEntityID',
                request_serializer=g2engine__pb2.FindPathExcludingByEntityIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.FindPathExcludingByEntityIDResponse.FromString,
                )
        self.FindPathExcludingByEntityID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindPathExcludingByEntityID_V2',
                request_serializer=g2engine__pb2.FindPathExcludingByEntityID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.FindPathExcludingByEntityID_V2Response.FromString,
                )
        self.FindPathExcludingByRecordID = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindPathExcludingByRecordID',
                request_serializer=g2engine__pb2.FindPathExcludingByRecordIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.FindPathExcludingByRecordIDResponse.FromString,
                )
        self.FindPathExcludingByRecordID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindPathExcludingByRecordID_V2',
                request_serializer=g2engine__pb2.FindPathExcludingByRecordID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.FindPathExcludingByRecordID_V2Response.FromString,
                )
        self.FindPathIncludingSourceByEntityID = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindPathIncludingSourceByEntityID',
                request_serializer=g2engine__pb2.FindPathIncludingSourceByEntityIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.FindPathIncludingSourceByEntityIDResponse.FromString,
                )
        self.FindPathIncludingSourceByEntityID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindPathIncludingSourceByEntityID_V2',
                request_serializer=g2engine__pb2.FindPathIncludingSourceByEntityID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.FindPathIncludingSourceByEntityID_V2Response.FromString,
                )
        self.FindPathIncludingSourceByRecordID = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindPathIncludingSourceByRecordID',
                request_serializer=g2engine__pb2.FindPathIncludingSourceByRecordIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.FindPathIncludingSourceByRecordIDResponse.FromString,
                )
        self.FindPathIncludingSourceByRecordID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/FindPathIncludingSourceByRecordID_V2',
                request_serializer=g2engine__pb2.FindPathIncludingSourceByRecordID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.FindPathIncludingSourceByRecordID_V2Response.FromString,
                )
        self.GetActiveConfigID = channel.unary_unary(
                '/g2engine.G2Diagnostic/GetActiveConfigID',
                request_serializer=g2engine__pb2.GetActiveConfigIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.GetActiveConfigIDResponse.FromString,
                )
        self.GetEntityByEntityID = channel.unary_unary(
                '/g2engine.G2Diagnostic/GetEntityByEntityID',
                request_serializer=g2engine__pb2.GetEntityByEntityIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.GetEntityByEntityIDResponse.FromString,
                )
        self.GetEntityByEntityID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/GetEntityByEntityID_V2',
                request_serializer=g2engine__pb2.GetEntityByEntityID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.GetEntityByEntityID_V2Response.FromString,
                )
        self.GetEntityByRecordID = channel.unary_unary(
                '/g2engine.G2Diagnostic/GetEntityByRecordID',
                request_serializer=g2engine__pb2.GetEntityByRecordIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.GetEntityByRecordIDResponse.FromString,
                )
        self.GetEntityByRecordID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/GetEntityByRecordID_V2',
                request_serializer=g2engine__pb2.GetEntityByRecordID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.GetEntityByRecordID_V2Response.FromString,
                )
        self.GetLastException = channel.unary_unary(
                '/g2engine.G2Diagnostic/GetLastException',
                request_serializer=g2engine__pb2.GetLastExceptionRequest.SerializeToString,
                response_deserializer=g2engine__pb2.GetLastExceptionResponse.FromString,
                )
        self.GetLastExceptionCode = channel.unary_unary(
                '/g2engine.G2Diagnostic/GetLastExceptionCode',
                request_serializer=g2engine__pb2.GetLastExceptionCodeRequest.SerializeToString,
                response_deserializer=g2engine__pb2.GetLastExceptionCodeResponse.FromString,
                )
        self.GetRecord = channel.unary_unary(
                '/g2engine.G2Diagnostic/GetRecord',
                request_serializer=g2engine__pb2.GetRecordRequest.SerializeToString,
                response_deserializer=g2engine__pb2.GetRecordResponse.FromString,
                )
        self.GetRecord_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/GetRecord_V2',
                request_serializer=g2engine__pb2.GetRecord_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.GetRecord_V2Response.FromString,
                )
        self.GetRedoRecord = channel.unary_unary(
                '/g2engine.G2Diagnostic/GetRedoRecord',
                request_serializer=g2engine__pb2.GetRedoRecordRequest.SerializeToString,
                response_deserializer=g2engine__pb2.GetRedoRecordResponse.FromString,
                )
        self.GetRepositoryLastModifiedTime = channel.unary_unary(
                '/g2engine.G2Diagnostic/GetRepositoryLastModifiedTime',
                request_serializer=g2engine__pb2.GetRepositoryLastModifiedTimeRequest.SerializeToString,
                response_deserializer=g2engine__pb2.GetRepositoryLastModifiedTimeResponse.FromString,
                )
        self.GetVirtualEntityByRecordID = channel.unary_unary(
                '/g2engine.G2Diagnostic/GetVirtualEntityByRecordID',
                request_serializer=g2engine__pb2.GetVirtualEntityByRecordIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.GetVirtualEntityByRecordIDResponse.FromString,
                )
        self.GetVirtualEntityByRecordID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/GetVirtualEntityByRecordID_V2',
                request_serializer=g2engine__pb2.GetVirtualEntityByRecordID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.GetVirtualEntityByRecordID_V2Response.FromString,
                )
        self.HowEntityByEntityID = channel.unary_unary(
                '/g2engine.G2Diagnostic/HowEntityByEntityID',
                request_serializer=g2engine__pb2.HowEntityByEntityIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.HowEntityByEntityIDResponse.FromString,
                )
        self.HowEntityByEntityID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/HowEntityByEntityID_V2',
                request_serializer=g2engine__pb2.HowEntityByEntityID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.HowEntityByEntityID_V2Response.FromString,
                )
        self.Init = channel.unary_unary(
                '/g2engine.G2Diagnostic/Init',
                request_serializer=g2engine__pb2.InitRequest.SerializeToString,
                response_deserializer=g2engine__pb2.InitResponse.FromString,
                )
        self.InitWithConfigID = channel.unary_unary(
                '/g2engine.G2Diagnostic/InitWithConfigID',
                request_serializer=g2engine__pb2.InitWithConfigIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.InitWithConfigIDResponse.FromString,
                )
        self.PrimeEngine = channel.unary_unary(
                '/g2engine.G2Diagnostic/PrimeEngine',
                request_serializer=g2engine__pb2.PrimeEngineRequest.SerializeToString,
                response_deserializer=g2engine__pb2.PrimeEngineResponse.FromString,
                )
        self.Process = channel.unary_unary(
                '/g2engine.G2Diagnostic/Process',
                request_serializer=g2engine__pb2.ProcessRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ProcessResponse.FromString,
                )
        self.ProcessRedoRecord = channel.unary_unary(
                '/g2engine.G2Diagnostic/ProcessRedoRecord',
                request_serializer=g2engine__pb2.ProcessRedoRecordRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ProcessRedoRecordResponse.FromString,
                )
        self.ProcessRedoRecordWithInfo = channel.unary_unary(
                '/g2engine.G2Diagnostic/ProcessRedoRecordWithInfo',
                request_serializer=g2engine__pb2.ProcessRedoRecordWithInfoRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ProcessRedoRecordWithInfoResponse.FromString,
                )
        self.ProcessWithInfo = channel.unary_unary(
                '/g2engine.G2Diagnostic/ProcessWithInfo',
                request_serializer=g2engine__pb2.ProcessWithInfoRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ProcessWithInfoResponse.FromString,
                )
        self.ProcessWithResponse = channel.unary_unary(
                '/g2engine.G2Diagnostic/ProcessWithResponse',
                request_serializer=g2engine__pb2.ProcessWithResponseRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ProcessWithResponseResponse.FromString,
                )
        self.ProcessWithResponseResize = channel.unary_unary(
                '/g2engine.G2Diagnostic/ProcessWithResponseResize',
                request_serializer=g2engine__pb2.ProcessWithResponseResizeRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ProcessWithResponseResizeResponse.FromString,
                )
        self.PurgeRepository = channel.unary_unary(
                '/g2engine.G2Diagnostic/PurgeRepository',
                request_serializer=g2engine__pb2.PurgeRepositoryRequest.SerializeToString,
                response_deserializer=g2engine__pb2.PurgeRepositoryResponse.FromString,
                )
        self.ReevaluateEntity = channel.unary_unary(
                '/g2engine.G2Diagnostic/ReevaluateEntity',
                request_serializer=g2engine__pb2.ReevaluateEntityRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ReevaluateEntityResponse.FromString,
                )
        self.ReevaluateEntityWithInfo = channel.unary_unary(
                '/g2engine.G2Diagnostic/ReevaluateEntityWithInfo',
                request_serializer=g2engine__pb2.ReevaluateEntityWithInfoRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ReevaluateEntityWithInfoResponse.FromString,
                )
        self.ReevaluateRecord = channel.unary_unary(
                '/g2engine.G2Diagnostic/ReevaluateRecord',
                request_serializer=g2engine__pb2.ReevaluateRecordRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ReevaluateRecordResponse.FromString,
                )
        self.ReevaluateRecordWithInfo = channel.unary_unary(
                '/g2engine.G2Diagnostic/ReevaluateRecordWithInfo',
                request_serializer=g2engine__pb2.ReevaluateRecordWithInfoRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ReevaluateRecordWithInfoResponse.FromString,
                )
        self.Reinit = channel.unary_unary(
                '/g2engine.G2Diagnostic/Reinit',
                request_serializer=g2engine__pb2.ReinitRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ReinitResponse.FromString,
                )
        self.ReplaceRecord = channel.unary_unary(
                '/g2engine.G2Diagnostic/ReplaceRecord',
                request_serializer=g2engine__pb2.ReplaceRecordRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ReplaceRecordResponse.FromString,
                )
        self.ReplaceRecordWithInfo = channel.unary_unary(
                '/g2engine.G2Diagnostic/ReplaceRecordWithInfo',
                request_serializer=g2engine__pb2.ReplaceRecordWithInfoRequest.SerializeToString,
                response_deserializer=g2engine__pb2.ReplaceRecordWithInfoResponse.FromString,
                )
        self.SearchByAttributes = channel.unary_unary(
                '/g2engine.G2Diagnostic/SearchByAttributes',
                request_serializer=g2engine__pb2.SearchByAttributesRequest.SerializeToString,
                response_deserializer=g2engine__pb2.SearchByAttributesResponse.FromString,
                )
        self.SearchByAttributes_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/SearchByAttributes_V2',
                request_serializer=g2engine__pb2.SearchByAttributes_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.SearchByAttributes_V2Response.FromString,
                )
        self.Stats = channel.unary_unary(
                '/g2engine.G2Diagnostic/Stats',
                request_serializer=g2engine__pb2.StatsRequest.SerializeToString,
                response_deserializer=g2engine__pb2.StatsResponse.FromString,
                )
        self.WhyEntities = channel.unary_unary(
                '/g2engine.G2Diagnostic/WhyEntities',
                request_serializer=g2engine__pb2.WhyEntitiesRequest.SerializeToString,
                response_deserializer=g2engine__pb2.WhyEntitiesResponse.FromString,
                )
        self.WhyEntities_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/WhyEntities_V2',
                request_serializer=g2engine__pb2.WhyEntities_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.WhyEntities_V2Response.FromString,
                )
        self.WhyEntityByEntityID = channel.unary_unary(
                '/g2engine.G2Diagnostic/WhyEntityByEntityID',
                request_serializer=g2engine__pb2.WhyEntityByEntityIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.WhyEntityByEntityIDResponse.FromString,
                )
        self.WhyEntityByEntityID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/WhyEntityByEntityID_V2',
                request_serializer=g2engine__pb2.WhyEntityByEntityID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.WhyEntityByEntityID_V2Response.FromString,
                )
        self.WhyEntityByRecordID = channel.unary_unary(
                '/g2engine.G2Diagnostic/WhyEntityByRecordID',
                request_serializer=g2engine__pb2.WhyEntityByRecordIDRequest.SerializeToString,
                response_deserializer=g2engine__pb2.WhyEntityByRecordIDResponse.FromString,
                )
        self.WhyEntityByRecordID_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/WhyEntityByRecordID_V2',
                request_serializer=g2engine__pb2.WhyEntityByRecordID_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.WhyEntityByRecordID_V2Response.FromString,
                )
        self.WhyRecords = channel.unary_unary(
                '/g2engine.G2Diagnostic/WhyRecords',
                request_serializer=g2engine__pb2.WhyRecordsRequest.SerializeToString,
                response_deserializer=g2engine__pb2.WhyRecordsResponse.FromString,
                )
        self.WhyRecords_V2 = channel.unary_unary(
                '/g2engine.G2Diagnostic/WhyRecords_V2',
                request_serializer=g2engine__pb2.WhyRecords_V2Request.SerializeToString,
                response_deserializer=g2engine__pb2.WhyRecords_V2Response.FromString,
                )


class G2DiagnosticServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRecordWithInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRecordWithInfoWithReturnedRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRecordWithReturnedRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearLastException(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseExport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CountRedoRecords(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRecordWithInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Destroy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportConfigAndConfigID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportCSVEntityReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportJSONEntityReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchNext(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindInterestingEntitiesByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindInterestingEntitiesByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindNetworkByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindNetworkByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindNetworkByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindNetworkByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindPathByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindPathByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindPathByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindPathByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindPathExcludingByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindPathExcludingByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindPathExcludingByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindPathExcludingByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindPathIncludingSourceByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindPathIncludingSourceByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindPathIncludingSourceByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindPathIncludingSourceByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActiveConfigID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntityByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntityByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntityByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntityByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLastException(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLastExceptionCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRecord_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRedoRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRepositoryLastModifiedTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirtualEntityByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirtualEntityByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HowEntityByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HowEntityByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitWithConfigID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrimeEngine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Process(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessRedoRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessRedoRecordWithInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessWithInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessWithResponse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessWithResponseResize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PurgeRepository(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReevaluateEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReevaluateEntityWithInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReevaluateRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReevaluateRecordWithInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reinit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplaceRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplaceRecordWithInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchByAttributes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchByAttributes_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WhyEntities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WhyEntities_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WhyEntityByEntityID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WhyEntityByEntityID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WhyEntityByRecordID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WhyEntityByRecordID_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WhyRecords(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WhyRecords_V2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_G2DiagnosticServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRecord,
                    request_deserializer=g2engine__pb2.AddRecordRequestRequest.FromString,
                    response_serializer=g2engine__pb2.AddRecordResponseResponse.SerializeToString,
            ),
            'AddRecordWithInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRecordWithInfo,
                    request_deserializer=g2engine__pb2.AddRecordWithInfoRequest.FromString,
                    response_serializer=g2engine__pb2.AddRecordWithInfoResponse.SerializeToString,
            ),
            'AddRecordWithInfoWithReturnedRecordID': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRecordWithInfoWithReturnedRecordID,
                    request_deserializer=g2engine__pb2.AddRecordWithInfoWithReturnedRecordIDRequest.FromString,
                    response_serializer=g2engine__pb2.AddRecordWithInfoWithReturnedRecordIDResponse.SerializeToString,
            ),
            'AddRecordWithReturnedRecordID': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRecordWithReturnedRecordID,
                    request_deserializer=g2engine__pb2.AddRecordWithReturnedRecordIDRequest.FromString,
                    response_serializer=g2engine__pb2.AddRecordWithReturnedRecordIDResponse.SerializeToString,
            ),
            'CheckRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckRecord,
                    request_deserializer=g2engine__pb2.CheckRecordRequest.FromString,
                    response_serializer=g2engine__pb2.CheckRecordResponse.SerializeToString,
            ),
            'ClearLastException': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearLastException,
                    request_deserializer=g2engine__pb2.ClearLastExceptionRequest.FromString,
                    response_serializer=g2engine__pb2.ClearLastExceptionResponse.SerializeToString,
            ),
            'CloseExport': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseExport,
                    request_deserializer=g2engine__pb2.CloseExportRequest.FromString,
                    response_serializer=g2engine__pb2.CloseExportResponse.SerializeToString,
            ),
            'CountRedoRecords': grpc.unary_unary_rpc_method_handler(
                    servicer.CountRedoRecords,
                    request_deserializer=g2engine__pb2.CountRedoRecordsRequest.FromString,
                    response_serializer=g2engine__pb2.CountRedoRecordsResponse.SerializeToString,
            ),
            'DeleteRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRecord,
                    request_deserializer=g2engine__pb2.DeleteRecordRequest.FromString,
                    response_serializer=g2engine__pb2.DeleteRecordResponse.SerializeToString,
            ),
            'DeleteRecordWithInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRecordWithInfo,
                    request_deserializer=g2engine__pb2.DeleteRecordWithInfoRequest.FromString,
                    response_serializer=g2engine__pb2.DeleteRecordWithInfoResponse.SerializeToString,
            ),
            'Destroy': grpc.unary_unary_rpc_method_handler(
                    servicer.Destroy,
                    request_deserializer=g2engine__pb2.DestroyRequest.FromString,
                    response_serializer=g2engine__pb2.DestroyResponse.SerializeToString,
            ),
            'ExportConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportConfig,
                    request_deserializer=g2engine__pb2.ExportConfigRequest.FromString,
                    response_serializer=g2engine__pb2.ExportConfigResponse.SerializeToString,
            ),
            'ExportConfigAndConfigID': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportConfigAndConfigID,
                    request_deserializer=g2engine__pb2.ExportConfigAndConfigIDRequest.FromString,
                    response_serializer=g2engine__pb2.ExportConfigAndConfigIDResponse.SerializeToString,
            ),
            'ExportCSVEntityReport': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportCSVEntityReport,
                    request_deserializer=g2engine__pb2.ExportCSVEntityReportRequest.FromString,
                    response_serializer=g2engine__pb2.ExportCSVEntityReportResponse.SerializeToString,
            ),
            'ExportJSONEntityReport': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportJSONEntityReport,
                    request_deserializer=g2engine__pb2.ExportJSONEntityReportRequest.FromString,
                    response_serializer=g2engine__pb2.ExportJSONEntityReportResponse.SerializeToString,
            ),
            'FetchNext': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchNext,
                    request_deserializer=g2engine__pb2.FetchNextRequest.FromString,
                    response_serializer=g2engine__pb2.FetchNextResponse.SerializeToString,
            ),
            'FindInterestingEntitiesByEntityID': grpc.unary_unary_rpc_method_handler(
                    servicer.FindInterestingEntitiesByEntityID,
                    request_deserializer=g2engine__pb2.FindInterestingEntitiesByEntityIDRequest.FromString,
                    response_serializer=g2engine__pb2.FindInterestingEntitiesByEntityIDResponse.SerializeToString,
            ),
            'FindInterestingEntitiesByRecordID': grpc.unary_unary_rpc_method_handler(
                    servicer.FindInterestingEntitiesByRecordID,
                    request_deserializer=g2engine__pb2.FindInterestingEntitiesByRecordIDRequest.FromString,
                    response_serializer=g2engine__pb2.FindInterestingEntitiesByRecordIDResponse.SerializeToString,
            ),
            'FindNetworkByEntityID': grpc.unary_unary_rpc_method_handler(
                    servicer.FindNetworkByEntityID,
                    request_deserializer=g2engine__pb2.FindNetworkByEntityIDRequest.FromString,
                    response_serializer=g2engine__pb2.FindNetworkByEntityIDResponse.SerializeToString,
            ),
            'FindNetworkByEntityID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.FindNetworkByEntityID_V2,
                    request_deserializer=g2engine__pb2.FindNetworkByEntityID_V2Request.FromString,
                    response_serializer=g2engine__pb2.FindNetworkByEntityID_V2Response.SerializeToString,
            ),
            'FindNetworkByRecordID': grpc.unary_unary_rpc_method_handler(
                    servicer.FindNetworkByRecordID,
                    request_deserializer=g2engine__pb2.FindNetworkByRecordIDRequest.FromString,
                    response_serializer=g2engine__pb2.FindNetworkByRecordIDResponse.SerializeToString,
            ),
            'FindNetworkByRecordID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.FindNetworkByRecordID_V2,
                    request_deserializer=g2engine__pb2.FindNetworkByRecordID_V2Request.FromString,
                    response_serializer=g2engine__pb2.FindNetworkByRecordID_V2Response.SerializeToString,
            ),
            'FindPathByEntityID': grpc.unary_unary_rpc_method_handler(
                    servicer.FindPathByEntityID,
                    request_deserializer=g2engine__pb2.FindPathByEntityIDRequest.FromString,
                    response_serializer=g2engine__pb2.FindPathByEntityIDResponse.SerializeToString,
            ),
            'FindPathByEntityID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.FindPathByEntityID_V2,
                    request_deserializer=g2engine__pb2.FindPathByEntityID_V2Request.FromString,
                    response_serializer=g2engine__pb2.FindPathByEntityID_V2Response.SerializeToString,
            ),
            'FindPathByRecordID': grpc.unary_unary_rpc_method_handler(
                    servicer.FindPathByRecordID,
                    request_deserializer=g2engine__pb2.FindPathByRecordIDRequest.FromString,
                    response_serializer=g2engine__pb2.FindPathByRecordIDResponse.SerializeToString,
            ),
            'FindPathByRecordID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.FindPathByRecordID_V2,
                    request_deserializer=g2engine__pb2.FindPathByRecordID_V2Request.FromString,
                    response_serializer=g2engine__pb2.FindPathByRecordID_V2Response.SerializeToString,
            ),
            'FindPathExcludingByEntityID': grpc.unary_unary_rpc_method_handler(
                    servicer.FindPathExcludingByEntityID,
                    request_deserializer=g2engine__pb2.FindPathExcludingByEntityIDRequest.FromString,
                    response_serializer=g2engine__pb2.FindPathExcludingByEntityIDResponse.SerializeToString,
            ),
            'FindPathExcludingByEntityID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.FindPathExcludingByEntityID_V2,
                    request_deserializer=g2engine__pb2.FindPathExcludingByEntityID_V2Request.FromString,
                    response_serializer=g2engine__pb2.FindPathExcludingByEntityID_V2Response.SerializeToString,
            ),
            'FindPathExcludingByRecordID': grpc.unary_unary_rpc_method_handler(
                    servicer.FindPathExcludingByRecordID,
                    request_deserializer=g2engine__pb2.FindPathExcludingByRecordIDRequest.FromString,
                    response_serializer=g2engine__pb2.FindPathExcludingByRecordIDResponse.SerializeToString,
            ),
            'FindPathExcludingByRecordID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.FindPathExcludingByRecordID_V2,
                    request_deserializer=g2engine__pb2.FindPathExcludingByRecordID_V2Request.FromString,
                    response_serializer=g2engine__pb2.FindPathExcludingByRecordID_V2Response.SerializeToString,
            ),
            'FindPathIncludingSourceByEntityID': grpc.unary_unary_rpc_method_handler(
                    servicer.FindPathIncludingSourceByEntityID,
                    request_deserializer=g2engine__pb2.FindPathIncludingSourceByEntityIDRequest.FromString,
                    response_serializer=g2engine__pb2.FindPathIncludingSourceByEntityIDResponse.SerializeToString,
            ),
            'FindPathIncludingSourceByEntityID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.FindPathIncludingSourceByEntityID_V2,
                    request_deserializer=g2engine__pb2.FindPathIncludingSourceByEntityID_V2Request.FromString,
                    response_serializer=g2engine__pb2.FindPathIncludingSourceByEntityID_V2Response.SerializeToString,
            ),
            'FindPathIncludingSourceByRecordID': grpc.unary_unary_rpc_method_handler(
                    servicer.FindPathIncludingSourceByRecordID,
                    request_deserializer=g2engine__pb2.FindPathIncludingSourceByRecordIDRequest.FromString,
                    response_serializer=g2engine__pb2.FindPathIncludingSourceByRecordIDResponse.SerializeToString,
            ),
            'FindPathIncludingSourceByRecordID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.FindPathIncludingSourceByRecordID_V2,
                    request_deserializer=g2engine__pb2.FindPathIncludingSourceByRecordID_V2Request.FromString,
                    response_serializer=g2engine__pb2.FindPathIncludingSourceByRecordID_V2Response.SerializeToString,
            ),
            'GetActiveConfigID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActiveConfigID,
                    request_deserializer=g2engine__pb2.GetActiveConfigIDRequest.FromString,
                    response_serializer=g2engine__pb2.GetActiveConfigIDResponse.SerializeToString,
            ),
            'GetEntityByEntityID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntityByEntityID,
                    request_deserializer=g2engine__pb2.GetEntityByEntityIDRequest.FromString,
                    response_serializer=g2engine__pb2.GetEntityByEntityIDResponse.SerializeToString,
            ),
            'GetEntityByEntityID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntityByEntityID_V2,
                    request_deserializer=g2engine__pb2.GetEntityByEntityID_V2Request.FromString,
                    response_serializer=g2engine__pb2.GetEntityByEntityID_V2Response.SerializeToString,
            ),
            'GetEntityByRecordID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntityByRecordID,
                    request_deserializer=g2engine__pb2.GetEntityByRecordIDRequest.FromString,
                    response_serializer=g2engine__pb2.GetEntityByRecordIDResponse.SerializeToString,
            ),
            'GetEntityByRecordID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntityByRecordID_V2,
                    request_deserializer=g2engine__pb2.GetEntityByRecordID_V2Request.FromString,
                    response_serializer=g2engine__pb2.GetEntityByRecordID_V2Response.SerializeToString,
            ),
            'GetLastException': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLastException,
                    request_deserializer=g2engine__pb2.GetLastExceptionRequest.FromString,
                    response_serializer=g2engine__pb2.GetLastExceptionResponse.SerializeToString,
            ),
            'GetLastExceptionCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLastExceptionCode,
                    request_deserializer=g2engine__pb2.GetLastExceptionCodeRequest.FromString,
                    response_serializer=g2engine__pb2.GetLastExceptionCodeResponse.SerializeToString,
            ),
            'GetRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecord,
                    request_deserializer=g2engine__pb2.GetRecordRequest.FromString,
                    response_serializer=g2engine__pb2.GetRecordResponse.SerializeToString,
            ),
            'GetRecord_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecord_V2,
                    request_deserializer=g2engine__pb2.GetRecord_V2Request.FromString,
                    response_serializer=g2engine__pb2.GetRecord_V2Response.SerializeToString,
            ),
            'GetRedoRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRedoRecord,
                    request_deserializer=g2engine__pb2.GetRedoRecordRequest.FromString,
                    response_serializer=g2engine__pb2.GetRedoRecordResponse.SerializeToString,
            ),
            'GetRepositoryLastModifiedTime': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRepositoryLastModifiedTime,
                    request_deserializer=g2engine__pb2.GetRepositoryLastModifiedTimeRequest.FromString,
                    response_serializer=g2engine__pb2.GetRepositoryLastModifiedTimeResponse.SerializeToString,
            ),
            'GetVirtualEntityByRecordID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVirtualEntityByRecordID,
                    request_deserializer=g2engine__pb2.GetVirtualEntityByRecordIDRequest.FromString,
                    response_serializer=g2engine__pb2.GetVirtualEntityByRecordIDResponse.SerializeToString,
            ),
            'GetVirtualEntityByRecordID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVirtualEntityByRecordID_V2,
                    request_deserializer=g2engine__pb2.GetVirtualEntityByRecordID_V2Request.FromString,
                    response_serializer=g2engine__pb2.GetVirtualEntityByRecordID_V2Response.SerializeToString,
            ),
            'HowEntityByEntityID': grpc.unary_unary_rpc_method_handler(
                    servicer.HowEntityByEntityID,
                    request_deserializer=g2engine__pb2.HowEntityByEntityIDRequest.FromString,
                    response_serializer=g2engine__pb2.HowEntityByEntityIDResponse.SerializeToString,
            ),
            'HowEntityByEntityID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.HowEntityByEntityID_V2,
                    request_deserializer=g2engine__pb2.HowEntityByEntityID_V2Request.FromString,
                    response_serializer=g2engine__pb2.HowEntityByEntityID_V2Response.SerializeToString,
            ),
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=g2engine__pb2.InitRequest.FromString,
                    response_serializer=g2engine__pb2.InitResponse.SerializeToString,
            ),
            'InitWithConfigID': grpc.unary_unary_rpc_method_handler(
                    servicer.InitWithConfigID,
                    request_deserializer=g2engine__pb2.InitWithConfigIDRequest.FromString,
                    response_serializer=g2engine__pb2.InitWithConfigIDResponse.SerializeToString,
            ),
            'PrimeEngine': grpc.unary_unary_rpc_method_handler(
                    servicer.PrimeEngine,
                    request_deserializer=g2engine__pb2.PrimeEngineRequest.FromString,
                    response_serializer=g2engine__pb2.PrimeEngineResponse.SerializeToString,
            ),
            'Process': grpc.unary_unary_rpc_method_handler(
                    servicer.Process,
                    request_deserializer=g2engine__pb2.ProcessRequest.FromString,
                    response_serializer=g2engine__pb2.ProcessResponse.SerializeToString,
            ),
            'ProcessRedoRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessRedoRecord,
                    request_deserializer=g2engine__pb2.ProcessRedoRecordRequest.FromString,
                    response_serializer=g2engine__pb2.ProcessRedoRecordResponse.SerializeToString,
            ),
            'ProcessRedoRecordWithInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessRedoRecordWithInfo,
                    request_deserializer=g2engine__pb2.ProcessRedoRecordWithInfoRequest.FromString,
                    response_serializer=g2engine__pb2.ProcessRedoRecordWithInfoResponse.SerializeToString,
            ),
            'ProcessWithInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessWithInfo,
                    request_deserializer=g2engine__pb2.ProcessWithInfoRequest.FromString,
                    response_serializer=g2engine__pb2.ProcessWithInfoResponse.SerializeToString,
            ),
            'ProcessWithResponse': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessWithResponse,
                    request_deserializer=g2engine__pb2.ProcessWithResponseRequest.FromString,
                    response_serializer=g2engine__pb2.ProcessWithResponseResponse.SerializeToString,
            ),
            'ProcessWithResponseResize': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessWithResponseResize,
                    request_deserializer=g2engine__pb2.ProcessWithResponseResizeRequest.FromString,
                    response_serializer=g2engine__pb2.ProcessWithResponseResizeResponse.SerializeToString,
            ),
            'PurgeRepository': grpc.unary_unary_rpc_method_handler(
                    servicer.PurgeRepository,
                    request_deserializer=g2engine__pb2.PurgeRepositoryRequest.FromString,
                    response_serializer=g2engine__pb2.PurgeRepositoryResponse.SerializeToString,
            ),
            'ReevaluateEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.ReevaluateEntity,
                    request_deserializer=g2engine__pb2.ReevaluateEntityRequest.FromString,
                    response_serializer=g2engine__pb2.ReevaluateEntityResponse.SerializeToString,
            ),
            'ReevaluateEntityWithInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ReevaluateEntityWithInfo,
                    request_deserializer=g2engine__pb2.ReevaluateEntityWithInfoRequest.FromString,
                    response_serializer=g2engine__pb2.ReevaluateEntityWithInfoResponse.SerializeToString,
            ),
            'ReevaluateRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.ReevaluateRecord,
                    request_deserializer=g2engine__pb2.ReevaluateRecordRequest.FromString,
                    response_serializer=g2engine__pb2.ReevaluateRecordResponse.SerializeToString,
            ),
            'ReevaluateRecordWithInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ReevaluateRecordWithInfo,
                    request_deserializer=g2engine__pb2.ReevaluateRecordWithInfoRequest.FromString,
                    response_serializer=g2engine__pb2.ReevaluateRecordWithInfoResponse.SerializeToString,
            ),
            'Reinit': grpc.unary_unary_rpc_method_handler(
                    servicer.Reinit,
                    request_deserializer=g2engine__pb2.ReinitRequest.FromString,
                    response_serializer=g2engine__pb2.ReinitResponse.SerializeToString,
            ),
            'ReplaceRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplaceRecord,
                    request_deserializer=g2engine__pb2.ReplaceRecordRequest.FromString,
                    response_serializer=g2engine__pb2.ReplaceRecordResponse.SerializeToString,
            ),
            'ReplaceRecordWithInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplaceRecordWithInfo,
                    request_deserializer=g2engine__pb2.ReplaceRecordWithInfoRequest.FromString,
                    response_serializer=g2engine__pb2.ReplaceRecordWithInfoResponse.SerializeToString,
            ),
            'SearchByAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchByAttributes,
                    request_deserializer=g2engine__pb2.SearchByAttributesRequest.FromString,
                    response_serializer=g2engine__pb2.SearchByAttributesResponse.SerializeToString,
            ),
            'SearchByAttributes_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchByAttributes_V2,
                    request_deserializer=g2engine__pb2.SearchByAttributes_V2Request.FromString,
                    response_serializer=g2engine__pb2.SearchByAttributes_V2Response.SerializeToString,
            ),
            'Stats': grpc.unary_unary_rpc_method_handler(
                    servicer.Stats,
                    request_deserializer=g2engine__pb2.StatsRequest.FromString,
                    response_serializer=g2engine__pb2.StatsResponse.SerializeToString,
            ),
            'WhyEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.WhyEntities,
                    request_deserializer=g2engine__pb2.WhyEntitiesRequest.FromString,
                    response_serializer=g2engine__pb2.WhyEntitiesResponse.SerializeToString,
            ),
            'WhyEntities_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.WhyEntities_V2,
                    request_deserializer=g2engine__pb2.WhyEntities_V2Request.FromString,
                    response_serializer=g2engine__pb2.WhyEntities_V2Response.SerializeToString,
            ),
            'WhyEntityByEntityID': grpc.unary_unary_rpc_method_handler(
                    servicer.WhyEntityByEntityID,
                    request_deserializer=g2engine__pb2.WhyEntityByEntityIDRequest.FromString,
                    response_serializer=g2engine__pb2.WhyEntityByEntityIDResponse.SerializeToString,
            ),
            'WhyEntityByEntityID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.WhyEntityByEntityID_V2,
                    request_deserializer=g2engine__pb2.WhyEntityByEntityID_V2Request.FromString,
                    response_serializer=g2engine__pb2.WhyEntityByEntityID_V2Response.SerializeToString,
            ),
            'WhyEntityByRecordID': grpc.unary_unary_rpc_method_handler(
                    servicer.WhyEntityByRecordID,
                    request_deserializer=g2engine__pb2.WhyEntityByRecordIDRequest.FromString,
                    response_serializer=g2engine__pb2.WhyEntityByRecordIDResponse.SerializeToString,
            ),
            'WhyEntityByRecordID_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.WhyEntityByRecordID_V2,
                    request_deserializer=g2engine__pb2.WhyEntityByRecordID_V2Request.FromString,
                    response_serializer=g2engine__pb2.WhyEntityByRecordID_V2Response.SerializeToString,
            ),
            'WhyRecords': grpc.unary_unary_rpc_method_handler(
                    servicer.WhyRecords,
                    request_deserializer=g2engine__pb2.WhyRecordsRequest.FromString,
                    response_serializer=g2engine__pb2.WhyRecordsResponse.SerializeToString,
            ),
            'WhyRecords_V2': grpc.unary_unary_rpc_method_handler(
                    servicer.WhyRecords_V2,
                    request_deserializer=g2engine__pb2.WhyRecords_V2Request.FromString,
                    response_serializer=g2engine__pb2.WhyRecords_V2Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'g2engine.G2Diagnostic', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class G2Diagnostic(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/AddRecord',
            g2engine__pb2.AddRecordRequestRequest.SerializeToString,
            g2engine__pb2.AddRecordResponseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddRecordWithInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/AddRecordWithInfo',
            g2engine__pb2.AddRecordWithInfoRequest.SerializeToString,
            g2engine__pb2.AddRecordWithInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddRecordWithInfoWithReturnedRecordID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/AddRecordWithInfoWithReturnedRecordID',
            g2engine__pb2.AddRecordWithInfoWithReturnedRecordIDRequest.SerializeToString,
            g2engine__pb2.AddRecordWithInfoWithReturnedRecordIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddRecordWithReturnedRecordID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/AddRecordWithReturnedRecordID',
            g2engine__pb2.AddRecordWithReturnedRecordIDRequest.SerializeToString,
            g2engine__pb2.AddRecordWithReturnedRecordIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/CheckRecord',
            g2engine__pb2.CheckRecordRequest.SerializeToString,
            g2engine__pb2.CheckRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearLastException(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ClearLastException',
            g2engine__pb2.ClearLastExceptionRequest.SerializeToString,
            g2engine__pb2.ClearLastExceptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseExport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/CloseExport',
            g2engine__pb2.CloseExportRequest.SerializeToString,
            g2engine__pb2.CloseExportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CountRedoRecords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/CountRedoRecords',
            g2engine__pb2.CountRedoRecordsRequest.SerializeToString,
            g2engine__pb2.CountRedoRecordsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/DeleteRecord',
            g2engine__pb2.DeleteRecordRequest.SerializeToString,
            g2engine__pb2.DeleteRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRecordWithInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/DeleteRecordWithInfo',
            g2engine__pb2.DeleteRecordWithInfoRequest.SerializeToString,
            g2engine__pb2.DeleteRecordWithInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Destroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/Destroy',
            g2engine__pb2.DestroyRequest.SerializeToString,
            g2engine__pb2.DestroyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ExportConfig',
            g2engine__pb2.ExportConfigRequest.SerializeToString,
            g2engine__pb2.ExportConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportConfigAndConfigID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ExportConfigAndConfigID',
            g2engine__pb2.ExportConfigAndConfigIDRequest.SerializeToString,
            g2engine__pb2.ExportConfigAndConfigIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportCSVEntityReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ExportCSVEntityReport',
            g2engine__pb2.ExportCSVEntityReportRequest.SerializeToString,
            g2engine__pb2.ExportCSVEntityReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportJSONEntityReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ExportJSONEntityReport',
            g2engine__pb2.ExportJSONEntityReportRequest.SerializeToString,
            g2engine__pb2.ExportJSONEntityReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchNext(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FetchNext',
            g2engine__pb2.FetchNextRequest.SerializeToString,
            g2engine__pb2.FetchNextResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindInterestingEntitiesByEntityID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindInterestingEntitiesByEntityID',
            g2engine__pb2.FindInterestingEntitiesByEntityIDRequest.SerializeToString,
            g2engine__pb2.FindInterestingEntitiesByEntityIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindInterestingEntitiesByRecordID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindInterestingEntitiesByRecordID',
            g2engine__pb2.FindInterestingEntitiesByRecordIDRequest.SerializeToString,
            g2engine__pb2.FindInterestingEntitiesByRecordIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindNetworkByEntityID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindNetworkByEntityID',
            g2engine__pb2.FindNetworkByEntityIDRequest.SerializeToString,
            g2engine__pb2.FindNetworkByEntityIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindNetworkByEntityID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindNetworkByEntityID_V2',
            g2engine__pb2.FindNetworkByEntityID_V2Request.SerializeToString,
            g2engine__pb2.FindNetworkByEntityID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindNetworkByRecordID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindNetworkByRecordID',
            g2engine__pb2.FindNetworkByRecordIDRequest.SerializeToString,
            g2engine__pb2.FindNetworkByRecordIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindNetworkByRecordID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindNetworkByRecordID_V2',
            g2engine__pb2.FindNetworkByRecordID_V2Request.SerializeToString,
            g2engine__pb2.FindNetworkByRecordID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindPathByEntityID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindPathByEntityID',
            g2engine__pb2.FindPathByEntityIDRequest.SerializeToString,
            g2engine__pb2.FindPathByEntityIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindPathByEntityID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindPathByEntityID_V2',
            g2engine__pb2.FindPathByEntityID_V2Request.SerializeToString,
            g2engine__pb2.FindPathByEntityID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindPathByRecordID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindPathByRecordID',
            g2engine__pb2.FindPathByRecordIDRequest.SerializeToString,
            g2engine__pb2.FindPathByRecordIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindPathByRecordID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindPathByRecordID_V2',
            g2engine__pb2.FindPathByRecordID_V2Request.SerializeToString,
            g2engine__pb2.FindPathByRecordID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindPathExcludingByEntityID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindPathExcludingByEntityID',
            g2engine__pb2.FindPathExcludingByEntityIDRequest.SerializeToString,
            g2engine__pb2.FindPathExcludingByEntityIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindPathExcludingByEntityID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindPathExcludingByEntityID_V2',
            g2engine__pb2.FindPathExcludingByEntityID_V2Request.SerializeToString,
            g2engine__pb2.FindPathExcludingByEntityID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindPathExcludingByRecordID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindPathExcludingByRecordID',
            g2engine__pb2.FindPathExcludingByRecordIDRequest.SerializeToString,
            g2engine__pb2.FindPathExcludingByRecordIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindPathExcludingByRecordID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindPathExcludingByRecordID_V2',
            g2engine__pb2.FindPathExcludingByRecordID_V2Request.SerializeToString,
            g2engine__pb2.FindPathExcludingByRecordID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindPathIncludingSourceByEntityID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindPathIncludingSourceByEntityID',
            g2engine__pb2.FindPathIncludingSourceByEntityIDRequest.SerializeToString,
            g2engine__pb2.FindPathIncludingSourceByEntityIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindPathIncludingSourceByEntityID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindPathIncludingSourceByEntityID_V2',
            g2engine__pb2.FindPathIncludingSourceByEntityID_V2Request.SerializeToString,
            g2engine__pb2.FindPathIncludingSourceByEntityID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindPathIncludingSourceByRecordID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindPathIncludingSourceByRecordID',
            g2engine__pb2.FindPathIncludingSourceByRecordIDRequest.SerializeToString,
            g2engine__pb2.FindPathIncludingSourceByRecordIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindPathIncludingSourceByRecordID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/FindPathIncludingSourceByRecordID_V2',
            g2engine__pb2.FindPathIncludingSourceByRecordID_V2Request.SerializeToString,
            g2engine__pb2.FindPathIncludingSourceByRecordID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActiveConfigID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/GetActiveConfigID',
            g2engine__pb2.GetActiveConfigIDRequest.SerializeToString,
            g2engine__pb2.GetActiveConfigIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEntityByEntityID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/GetEntityByEntityID',
            g2engine__pb2.GetEntityByEntityIDRequest.SerializeToString,
            g2engine__pb2.GetEntityByEntityIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEntityByEntityID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/GetEntityByEntityID_V2',
            g2engine__pb2.GetEntityByEntityID_V2Request.SerializeToString,
            g2engine__pb2.GetEntityByEntityID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEntityByRecordID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/GetEntityByRecordID',
            g2engine__pb2.GetEntityByRecordIDRequest.SerializeToString,
            g2engine__pb2.GetEntityByRecordIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEntityByRecordID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/GetEntityByRecordID_V2',
            g2engine__pb2.GetEntityByRecordID_V2Request.SerializeToString,
            g2engine__pb2.GetEntityByRecordID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLastException(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/GetLastException',
            g2engine__pb2.GetLastExceptionRequest.SerializeToString,
            g2engine__pb2.GetLastExceptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLastExceptionCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/GetLastExceptionCode',
            g2engine__pb2.GetLastExceptionCodeRequest.SerializeToString,
            g2engine__pb2.GetLastExceptionCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/GetRecord',
            g2engine__pb2.GetRecordRequest.SerializeToString,
            g2engine__pb2.GetRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRecord_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/GetRecord_V2',
            g2engine__pb2.GetRecord_V2Request.SerializeToString,
            g2engine__pb2.GetRecord_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRedoRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/GetRedoRecord',
            g2engine__pb2.GetRedoRecordRequest.SerializeToString,
            g2engine__pb2.GetRedoRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRepositoryLastModifiedTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/GetRepositoryLastModifiedTime',
            g2engine__pb2.GetRepositoryLastModifiedTimeRequest.SerializeToString,
            g2engine__pb2.GetRepositoryLastModifiedTimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVirtualEntityByRecordID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/GetVirtualEntityByRecordID',
            g2engine__pb2.GetVirtualEntityByRecordIDRequest.SerializeToString,
            g2engine__pb2.GetVirtualEntityByRecordIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVirtualEntityByRecordID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/GetVirtualEntityByRecordID_V2',
            g2engine__pb2.GetVirtualEntityByRecordID_V2Request.SerializeToString,
            g2engine__pb2.GetVirtualEntityByRecordID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HowEntityByEntityID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/HowEntityByEntityID',
            g2engine__pb2.HowEntityByEntityIDRequest.SerializeToString,
            g2engine__pb2.HowEntityByEntityIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HowEntityByEntityID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/HowEntityByEntityID_V2',
            g2engine__pb2.HowEntityByEntityID_V2Request.SerializeToString,
            g2engine__pb2.HowEntityByEntityID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/Init',
            g2engine__pb2.InitRequest.SerializeToString,
            g2engine__pb2.InitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitWithConfigID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/InitWithConfigID',
            g2engine__pb2.InitWithConfigIDRequest.SerializeToString,
            g2engine__pb2.InitWithConfigIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrimeEngine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/PrimeEngine',
            g2engine__pb2.PrimeEngineRequest.SerializeToString,
            g2engine__pb2.PrimeEngineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Process(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/Process',
            g2engine__pb2.ProcessRequest.SerializeToString,
            g2engine__pb2.ProcessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcessRedoRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ProcessRedoRecord',
            g2engine__pb2.ProcessRedoRecordRequest.SerializeToString,
            g2engine__pb2.ProcessRedoRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcessRedoRecordWithInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ProcessRedoRecordWithInfo',
            g2engine__pb2.ProcessRedoRecordWithInfoRequest.SerializeToString,
            g2engine__pb2.ProcessRedoRecordWithInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcessWithInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ProcessWithInfo',
            g2engine__pb2.ProcessWithInfoRequest.SerializeToString,
            g2engine__pb2.ProcessWithInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcessWithResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ProcessWithResponse',
            g2engine__pb2.ProcessWithResponseRequest.SerializeToString,
            g2engine__pb2.ProcessWithResponseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcessWithResponseResize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ProcessWithResponseResize',
            g2engine__pb2.ProcessWithResponseResizeRequest.SerializeToString,
            g2engine__pb2.ProcessWithResponseResizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PurgeRepository(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/PurgeRepository',
            g2engine__pb2.PurgeRepositoryRequest.SerializeToString,
            g2engine__pb2.PurgeRepositoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReevaluateEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ReevaluateEntity',
            g2engine__pb2.ReevaluateEntityRequest.SerializeToString,
            g2engine__pb2.ReevaluateEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReevaluateEntityWithInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ReevaluateEntityWithInfo',
            g2engine__pb2.ReevaluateEntityWithInfoRequest.SerializeToString,
            g2engine__pb2.ReevaluateEntityWithInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReevaluateRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ReevaluateRecord',
            g2engine__pb2.ReevaluateRecordRequest.SerializeToString,
            g2engine__pb2.ReevaluateRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReevaluateRecordWithInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ReevaluateRecordWithInfo',
            g2engine__pb2.ReevaluateRecordWithInfoRequest.SerializeToString,
            g2engine__pb2.ReevaluateRecordWithInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reinit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/Reinit',
            g2engine__pb2.ReinitRequest.SerializeToString,
            g2engine__pb2.ReinitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReplaceRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ReplaceRecord',
            g2engine__pb2.ReplaceRecordRequest.SerializeToString,
            g2engine__pb2.ReplaceRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReplaceRecordWithInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/ReplaceRecordWithInfo',
            g2engine__pb2.ReplaceRecordWithInfoRequest.SerializeToString,
            g2engine__pb2.ReplaceRecordWithInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchByAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/SearchByAttributes',
            g2engine__pb2.SearchByAttributesRequest.SerializeToString,
            g2engine__pb2.SearchByAttributesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchByAttributes_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/SearchByAttributes_V2',
            g2engine__pb2.SearchByAttributes_V2Request.SerializeToString,
            g2engine__pb2.SearchByAttributes_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/Stats',
            g2engine__pb2.StatsRequest.SerializeToString,
            g2engine__pb2.StatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WhyEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/WhyEntities',
            g2engine__pb2.WhyEntitiesRequest.SerializeToString,
            g2engine__pb2.WhyEntitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WhyEntities_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/WhyEntities_V2',
            g2engine__pb2.WhyEntities_V2Request.SerializeToString,
            g2engine__pb2.WhyEntities_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WhyEntityByEntityID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/WhyEntityByEntityID',
            g2engine__pb2.WhyEntityByEntityIDRequest.SerializeToString,
            g2engine__pb2.WhyEntityByEntityIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WhyEntityByEntityID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/WhyEntityByEntityID_V2',
            g2engine__pb2.WhyEntityByEntityID_V2Request.SerializeToString,
            g2engine__pb2.WhyEntityByEntityID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WhyEntityByRecordID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/WhyEntityByRecordID',
            g2engine__pb2.WhyEntityByRecordIDRequest.SerializeToString,
            g2engine__pb2.WhyEntityByRecordIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WhyEntityByRecordID_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/WhyEntityByRecordID_V2',
            g2engine__pb2.WhyEntityByRecordID_V2Request.SerializeToString,
            g2engine__pb2.WhyEntityByRecordID_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WhyRecords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/WhyRecords',
            g2engine__pb2.WhyRecordsRequest.SerializeToString,
            g2engine__pb2.WhyRecordsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WhyRecords_V2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/g2engine.G2Diagnostic/WhyRecords_V2',
            g2engine__pb2.WhyRecords_V2Request.SerializeToString,
            g2engine__pb2.WhyRecords_V2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
