// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.1
// source: g2engine.proto

package g2engine

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddRecordRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
	JsonData       string `protobuf:"bytes,3,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
	LoadID         string `protobuf:"bytes,4,opt,name=loadID,proto3" json:"loadID,omitempty"`
}

func (x *AddRecordRequestRequest) Reset() {
	*x = AddRecordRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordRequestRequest) ProtoMessage() {}

func (x *AddRecordRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordRequestRequest.ProtoReflect.Descriptor instead.
func (*AddRecordRequestRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{0}
}

func (x *AddRecordRequestRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *AddRecordRequestRequest) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *AddRecordRequestRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *AddRecordRequestRequest) GetLoadID() string {
	if x != nil {
		return x.LoadID
	}
	return ""
}

type AddRecordResponseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddRecordResponseResponse) Reset() {
	*x = AddRecordResponseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordResponseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordResponseResponse) ProtoMessage() {}

func (x *AddRecordResponseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordResponseResponse.ProtoReflect.Descriptor instead.
func (*AddRecordResponseResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{1}
}

type AddRecordWithInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
	JsonData       string `protobuf:"bytes,3,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
	LoadID         string `protobuf:"bytes,4,opt,name=loadID,proto3" json:"loadID,omitempty"`
	Flags          int64  `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *AddRecordWithInfoRequest) Reset() {
	*x = AddRecordWithInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordWithInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordWithInfoRequest) ProtoMessage() {}

func (x *AddRecordWithInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordWithInfoRequest.ProtoReflect.Descriptor instead.
func (*AddRecordWithInfoRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{2}
}

func (x *AddRecordWithInfoRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *AddRecordWithInfoRequest) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *AddRecordWithInfoRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *AddRecordWithInfoRequest) GetLoadID() string {
	if x != nil {
		return x.LoadID
	}
	return ""
}

func (x *AddRecordWithInfoRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type AddRecordWithInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddRecordWithInfoResponse) Reset() {
	*x = AddRecordWithInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordWithInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordWithInfoResponse) ProtoMessage() {}

func (x *AddRecordWithInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordWithInfoResponse.ProtoReflect.Descriptor instead.
func (*AddRecordWithInfoResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{3}
}

func (x *AddRecordWithInfoResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type AddRecordWithInfoWithReturnedRecordIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	JsonData       string `protobuf:"bytes,2,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
	LoadID         string `protobuf:"bytes,3,opt,name=loadID,proto3" json:"loadID,omitempty"`
	Flags          int64  `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *AddRecordWithInfoWithReturnedRecordIDRequest) Reset() {
	*x = AddRecordWithInfoWithReturnedRecordIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordWithInfoWithReturnedRecordIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordWithInfoWithReturnedRecordIDRequest) ProtoMessage() {}

func (x *AddRecordWithInfoWithReturnedRecordIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordWithInfoWithReturnedRecordIDRequest.ProtoReflect.Descriptor instead.
func (*AddRecordWithInfoWithReturnedRecordIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{4}
}

func (x *AddRecordWithInfoWithReturnedRecordIDRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *AddRecordWithInfoWithReturnedRecordIDRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *AddRecordWithInfoWithReturnedRecordIDRequest) GetLoadID() string {
	if x != nil {
		return x.LoadID
	}
	return ""
}

func (x *AddRecordWithInfoWithReturnedRecordIDRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type AddRecordWithInfoWithReturnedRecordIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WithInfo string `protobuf:"bytes,1,opt,name=withInfo,proto3" json:"withInfo,omitempty"`
	RecordID string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
}

func (x *AddRecordWithInfoWithReturnedRecordIDResponse) Reset() {
	*x = AddRecordWithInfoWithReturnedRecordIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordWithInfoWithReturnedRecordIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordWithInfoWithReturnedRecordIDResponse) ProtoMessage() {}

func (x *AddRecordWithInfoWithReturnedRecordIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordWithInfoWithReturnedRecordIDResponse.ProtoReflect.Descriptor instead.
func (*AddRecordWithInfoWithReturnedRecordIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{5}
}

func (x *AddRecordWithInfoWithReturnedRecordIDResponse) GetWithInfo() string {
	if x != nil {
		return x.WithInfo
	}
	return ""
}

func (x *AddRecordWithInfoWithReturnedRecordIDResponse) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

type AddRecordWithReturnedRecordIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	JsonData       string `protobuf:"bytes,2,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
	LoadID         string `protobuf:"bytes,3,opt,name=loadID,proto3" json:"loadID,omitempty"`
}

func (x *AddRecordWithReturnedRecordIDRequest) Reset() {
	*x = AddRecordWithReturnedRecordIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordWithReturnedRecordIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordWithReturnedRecordIDRequest) ProtoMessage() {}

func (x *AddRecordWithReturnedRecordIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordWithReturnedRecordIDRequest.ProtoReflect.Descriptor instead.
func (*AddRecordWithReturnedRecordIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{6}
}

func (x *AddRecordWithReturnedRecordIDRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *AddRecordWithReturnedRecordIDRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *AddRecordWithReturnedRecordIDRequest) GetLoadID() string {
	if x != nil {
		return x.LoadID
	}
	return ""
}

type AddRecordWithReturnedRecordIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddRecordWithReturnedRecordIDResponse) Reset() {
	*x = AddRecordWithReturnedRecordIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordWithReturnedRecordIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordWithReturnedRecordIDResponse) ProtoMessage() {}

func (x *AddRecordWithReturnedRecordIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordWithReturnedRecordIDResponse.ProtoReflect.Descriptor instead.
func (*AddRecordWithReturnedRecordIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{7}
}

func (x *AddRecordWithReturnedRecordIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type CheckRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record          string `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	RecordQueryList string `protobuf:"bytes,2,opt,name=recordQueryList,proto3" json:"recordQueryList,omitempty"`
}

func (x *CheckRecordRequest) Reset() {
	*x = CheckRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRecordRequest) ProtoMessage() {}

func (x *CheckRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRecordRequest.ProtoReflect.Descriptor instead.
func (*CheckRecordRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{8}
}

func (x *CheckRecordRequest) GetRecord() string {
	if x != nil {
		return x.Record
	}
	return ""
}

func (x *CheckRecordRequest) GetRecordQueryList() string {
	if x != nil {
		return x.RecordQueryList
	}
	return ""
}

type CheckRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CheckRecordResponse) Reset() {
	*x = CheckRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRecordResponse) ProtoMessage() {}

func (x *CheckRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRecordResponse.ProtoReflect.Descriptor instead.
func (*CheckRecordResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{9}
}

func (x *CheckRecordResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ClearLastExceptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearLastExceptionRequest) Reset() {
	*x = ClearLastExceptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearLastExceptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearLastExceptionRequest) ProtoMessage() {}

func (x *ClearLastExceptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearLastExceptionRequest.ProtoReflect.Descriptor instead.
func (*ClearLastExceptionRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{10}
}

type ClearLastExceptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearLastExceptionResponse) Reset() {
	*x = ClearLastExceptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearLastExceptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearLastExceptionResponse) ProtoMessage() {}

func (x *ClearLastExceptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearLastExceptionResponse.ProtoReflect.Descriptor instead.
func (*ClearLastExceptionResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{11}
}

type CloseExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseHandle string `protobuf:"bytes,1,opt,name=responseHandle,proto3" json:"responseHandle,omitempty"`
}

func (x *CloseExportRequest) Reset() {
	*x = CloseExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseExportRequest) ProtoMessage() {}

func (x *CloseExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseExportRequest.ProtoReflect.Descriptor instead.
func (*CloseExportRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{12}
}

func (x *CloseExportRequest) GetResponseHandle() string {
	if x != nil {
		return x.ResponseHandle
	}
	return ""
}

type CloseExportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseExportResponse) Reset() {
	*x = CloseExportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseExportResponse) ProtoMessage() {}

func (x *CloseExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseExportResponse.ProtoReflect.Descriptor instead.
func (*CloseExportResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{13}
}

type CountRedoRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CountRedoRecordsRequest) Reset() {
	*x = CountRedoRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountRedoRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountRedoRecordsRequest) ProtoMessage() {}

func (x *CountRedoRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountRedoRecordsRequest.ProtoReflect.Descriptor instead.
func (*CountRedoRecordsRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{14}
}

type CountRedoRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int64 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CountRedoRecordsResponse) Reset() {
	*x = CountRedoRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountRedoRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountRedoRecordsResponse) ProtoMessage() {}

func (x *CountRedoRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountRedoRecordsResponse.ProtoReflect.Descriptor instead.
func (*CountRedoRecordsResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{15}
}

func (x *CountRedoRecordsResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

type DeleteRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
	LoadID         string `protobuf:"bytes,3,opt,name=loadID,proto3" json:"loadID,omitempty"`
}

func (x *DeleteRecordRequest) Reset() {
	*x = DeleteRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordRequest) ProtoMessage() {}

func (x *DeleteRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordRequest.ProtoReflect.Descriptor instead.
func (*DeleteRecordRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteRecordRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *DeleteRecordRequest) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *DeleteRecordRequest) GetLoadID() string {
	if x != nil {
		return x.LoadID
	}
	return ""
}

type DeleteRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRecordResponse) Reset() {
	*x = DeleteRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordResponse) ProtoMessage() {}

func (x *DeleteRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordResponse.ProtoReflect.Descriptor instead.
func (*DeleteRecordResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{17}
}

type DeleteRecordWithInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
	LoadID         string `protobuf:"bytes,3,opt,name=loadID,proto3" json:"loadID,omitempty"`
	Flags          int64  `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *DeleteRecordWithInfoRequest) Reset() {
	*x = DeleteRecordWithInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecordWithInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordWithInfoRequest) ProtoMessage() {}

func (x *DeleteRecordWithInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordWithInfoRequest.ProtoReflect.Descriptor instead.
func (*DeleteRecordWithInfoRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteRecordWithInfoRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *DeleteRecordWithInfoRequest) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *DeleteRecordWithInfoRequest) GetLoadID() string {
	if x != nil {
		return x.LoadID
	}
	return ""
}

func (x *DeleteRecordWithInfoRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type DeleteRecordWithInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteRecordWithInfoResponse) Reset() {
	*x = DeleteRecordWithInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecordWithInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordWithInfoResponse) ProtoMessage() {}

func (x *DeleteRecordWithInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordWithInfoResponse.ProtoReflect.Descriptor instead.
func (*DeleteRecordWithInfoResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteRecordWithInfoResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type DestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DestroyRequest) Reset() {
	*x = DestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyRequest) ProtoMessage() {}

func (x *DestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyRequest.ProtoReflect.Descriptor instead.
func (*DestroyRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{20}
}

type DestroyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DestroyResponse) Reset() {
	*x = DestroyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyResponse) ProtoMessage() {}

func (x *DestroyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyResponse.ProtoReflect.Descriptor instead.
func (*DestroyResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{21}
}

type ExportConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExportConfigRequest) Reset() {
	*x = ExportConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportConfigRequest) ProtoMessage() {}

func (x *ExportConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportConfigRequest.ProtoReflect.Descriptor instead.
func (*ExportConfigRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{22}
}

type ExportConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ExportConfigResponse) Reset() {
	*x = ExportConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportConfigResponse) ProtoMessage() {}

func (x *ExportConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportConfigResponse.ProtoReflect.Descriptor instead.
func (*ExportConfigResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{23}
}

func (x *ExportConfigResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ExportConfigAndConfigIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExportConfigAndConfigIDRequest) Reset() {
	*x = ExportConfigAndConfigIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportConfigAndConfigIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportConfigAndConfigIDRequest) ProtoMessage() {}

func (x *ExportConfigAndConfigIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportConfigAndConfigIDRequest.ProtoReflect.Descriptor instead.
func (*ExportConfigAndConfigIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{24}
}

type ExportConfigAndConfigIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config   string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	ConfigID int64  `protobuf:"varint,2,opt,name=configID,proto3" json:"configID,omitempty"`
}

func (x *ExportConfigAndConfigIDResponse) Reset() {
	*x = ExportConfigAndConfigIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportConfigAndConfigIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportConfigAndConfigIDResponse) ProtoMessage() {}

func (x *ExportConfigAndConfigIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportConfigAndConfigIDResponse.ProtoReflect.Descriptor instead.
func (*ExportConfigAndConfigIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{25}
}

func (x *ExportConfigAndConfigIDResponse) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *ExportConfigAndConfigIDResponse) GetConfigID() int64 {
	if x != nil {
		return x.ConfigID
	}
	return 0
}

type ExportCSVEntityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CsvColumnList string `protobuf:"bytes,1,opt,name=csvColumnList,proto3" json:"csvColumnList,omitempty"`
	Flags         int64  `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ExportCSVEntityReportRequest) Reset() {
	*x = ExportCSVEntityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportCSVEntityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportCSVEntityReportRequest) ProtoMessage() {}

func (x *ExportCSVEntityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportCSVEntityReportRequest.ProtoReflect.Descriptor instead.
func (*ExportCSVEntityReportRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{26}
}

func (x *ExportCSVEntityReportRequest) GetCsvColumnList() string {
	if x != nil {
		return x.CsvColumnList
	}
	return ""
}

func (x *ExportCSVEntityReportRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ExportCSVEntityReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ExportCSVEntityReportResponse) Reset() {
	*x = ExportCSVEntityReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportCSVEntityReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportCSVEntityReportResponse) ProtoMessage() {}

func (x *ExportCSVEntityReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportCSVEntityReportResponse.ProtoReflect.Descriptor instead.
func (*ExportCSVEntityReportResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{27}
}

func (x *ExportCSVEntityReportResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ExportJSONEntityReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags int64 `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ExportJSONEntityReportRequest) Reset() {
	*x = ExportJSONEntityReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportJSONEntityReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportJSONEntityReportRequest) ProtoMessage() {}

func (x *ExportJSONEntityReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportJSONEntityReportRequest.ProtoReflect.Descriptor instead.
func (*ExportJSONEntityReportRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{28}
}

func (x *ExportJSONEntityReportRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ExportJSONEntityReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ExportJSONEntityReportResponse) Reset() {
	*x = ExportJSONEntityReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportJSONEntityReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportJSONEntityReportResponse) ProtoMessage() {}

func (x *ExportJSONEntityReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportJSONEntityReportResponse.ProtoReflect.Descriptor instead.
func (*ExportJSONEntityReportResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{29}
}

func (x *ExportJSONEntityReportResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FetchNextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseHandle string `protobuf:"bytes,1,opt,name=responseHandle,proto3" json:"responseHandle,omitempty"`
}

func (x *FetchNextRequest) Reset() {
	*x = FetchNextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchNextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchNextRequest) ProtoMessage() {}

func (x *FetchNextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchNextRequest.ProtoReflect.Descriptor instead.
func (*FetchNextRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{30}
}

func (x *FetchNextRequest) GetResponseHandle() string {
	if x != nil {
		return x.ResponseHandle
	}
	return ""
}

type FetchNextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FetchNextResponse) Reset() {
	*x = FetchNextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchNextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchNextResponse) ProtoMessage() {}

func (x *FetchNextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchNextResponse.ProtoReflect.Descriptor instead.
func (*FetchNextResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{31}
}

func (x *FetchNextResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindInterestingEntitiesByEntityIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID int64 `protobuf:"varint,1,opt,name=entityID,proto3" json:"entityID,omitempty"`
	Flags    int64 `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *FindInterestingEntitiesByEntityIDRequest) Reset() {
	*x = FindInterestingEntitiesByEntityIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindInterestingEntitiesByEntityIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindInterestingEntitiesByEntityIDRequest) ProtoMessage() {}

func (x *FindInterestingEntitiesByEntityIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindInterestingEntitiesByEntityIDRequest.ProtoReflect.Descriptor instead.
func (*FindInterestingEntitiesByEntityIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{32}
}

func (x *FindInterestingEntitiesByEntityIDRequest) GetEntityID() int64 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

func (x *FindInterestingEntitiesByEntityIDRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type FindInterestingEntitiesByEntityIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindInterestingEntitiesByEntityIDResponse) Reset() {
	*x = FindInterestingEntitiesByEntityIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindInterestingEntitiesByEntityIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindInterestingEntitiesByEntityIDResponse) ProtoMessage() {}

func (x *FindInterestingEntitiesByEntityIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindInterestingEntitiesByEntityIDResponse.ProtoReflect.Descriptor instead.
func (*FindInterestingEntitiesByEntityIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{33}
}

func (x *FindInterestingEntitiesByEntityIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindInterestingEntitiesByRecordIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
	Flags          int64  `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *FindInterestingEntitiesByRecordIDRequest) Reset() {
	*x = FindInterestingEntitiesByRecordIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindInterestingEntitiesByRecordIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindInterestingEntitiesByRecordIDRequest) ProtoMessage() {}

func (x *FindInterestingEntitiesByRecordIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindInterestingEntitiesByRecordIDRequest.ProtoReflect.Descriptor instead.
func (*FindInterestingEntitiesByRecordIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{34}
}

func (x *FindInterestingEntitiesByRecordIDRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *FindInterestingEntitiesByRecordIDRequest) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *FindInterestingEntitiesByRecordIDRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type FindInterestingEntitiesByRecordIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindInterestingEntitiesByRecordIDResponse) Reset() {
	*x = FindInterestingEntitiesByRecordIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindInterestingEntitiesByRecordIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindInterestingEntitiesByRecordIDResponse) ProtoMessage() {}

func (x *FindInterestingEntitiesByRecordIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindInterestingEntitiesByRecordIDResponse.ProtoReflect.Descriptor instead.
func (*FindInterestingEntitiesByRecordIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{35}
}

func (x *FindInterestingEntitiesByRecordIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindNetworkByEntityIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityList     string `protobuf:"bytes,1,opt,name=entityList,proto3" json:"entityList,omitempty"`
	MaxDegree      int32  `protobuf:"varint,2,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	BuildOutDegree int32  `protobuf:"varint,3,opt,name=buildOutDegree,proto3" json:"buildOutDegree,omitempty"`
	MaxEntities    int32  `protobuf:"varint,4,opt,name=maxEntities,proto3" json:"maxEntities,omitempty"`
}

func (x *FindNetworkByEntityIDRequest) Reset() {
	*x = FindNetworkByEntityIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNetworkByEntityIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNetworkByEntityIDRequest) ProtoMessage() {}

func (x *FindNetworkByEntityIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNetworkByEntityIDRequest.ProtoReflect.Descriptor instead.
func (*FindNetworkByEntityIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{36}
}

func (x *FindNetworkByEntityIDRequest) GetEntityList() string {
	if x != nil {
		return x.EntityList
	}
	return ""
}

func (x *FindNetworkByEntityIDRequest) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindNetworkByEntityIDRequest) GetBuildOutDegree() int32 {
	if x != nil {
		return x.BuildOutDegree
	}
	return 0
}

func (x *FindNetworkByEntityIDRequest) GetMaxEntities() int32 {
	if x != nil {
		return x.MaxEntities
	}
	return 0
}

type FindNetworkByEntityIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindNetworkByEntityIDResponse) Reset() {
	*x = FindNetworkByEntityIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNetworkByEntityIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNetworkByEntityIDResponse) ProtoMessage() {}

func (x *FindNetworkByEntityIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNetworkByEntityIDResponse.ProtoReflect.Descriptor instead.
func (*FindNetworkByEntityIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{37}
}

func (x *FindNetworkByEntityIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindNetworkByEntityID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityList     string `protobuf:"bytes,1,opt,name=entityList,proto3" json:"entityList,omitempty"`
	MaxDegree      int32  `protobuf:"varint,2,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	BuildOutDegree int32  `protobuf:"varint,3,opt,name=buildOutDegree,proto3" json:"buildOutDegree,omitempty"`
	MaxEntities    int32  `protobuf:"varint,4,opt,name=maxEntities,proto3" json:"maxEntities,omitempty"`
	Flags          int64  `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *FindNetworkByEntityID_V2Request) Reset() {
	*x = FindNetworkByEntityID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNetworkByEntityID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNetworkByEntityID_V2Request) ProtoMessage() {}

func (x *FindNetworkByEntityID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNetworkByEntityID_V2Request.ProtoReflect.Descriptor instead.
func (*FindNetworkByEntityID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{38}
}

func (x *FindNetworkByEntityID_V2Request) GetEntityList() string {
	if x != nil {
		return x.EntityList
	}
	return ""
}

func (x *FindNetworkByEntityID_V2Request) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindNetworkByEntityID_V2Request) GetBuildOutDegree() int32 {
	if x != nil {
		return x.BuildOutDegree
	}
	return 0
}

func (x *FindNetworkByEntityID_V2Request) GetMaxEntities() int32 {
	if x != nil {
		return x.MaxEntities
	}
	return 0
}

func (x *FindNetworkByEntityID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type FindNetworkByEntityID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindNetworkByEntityID_V2Response) Reset() {
	*x = FindNetworkByEntityID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNetworkByEntityID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNetworkByEntityID_V2Response) ProtoMessage() {}

func (x *FindNetworkByEntityID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNetworkByEntityID_V2Response.ProtoReflect.Descriptor instead.
func (*FindNetworkByEntityID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{39}
}

func (x *FindNetworkByEntityID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindNetworkByRecordIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordList     string `protobuf:"bytes,1,opt,name=recordList,proto3" json:"recordList,omitempty"`
	MaxDegree      int32  `protobuf:"varint,2,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	BuildOutDegree int32  `protobuf:"varint,3,opt,name=buildOutDegree,proto3" json:"buildOutDegree,omitempty"`
	MaxEntities    int32  `protobuf:"varint,4,opt,name=maxEntities,proto3" json:"maxEntities,omitempty"`
}

func (x *FindNetworkByRecordIDRequest) Reset() {
	*x = FindNetworkByRecordIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNetworkByRecordIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNetworkByRecordIDRequest) ProtoMessage() {}

func (x *FindNetworkByRecordIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNetworkByRecordIDRequest.ProtoReflect.Descriptor instead.
func (*FindNetworkByRecordIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{40}
}

func (x *FindNetworkByRecordIDRequest) GetRecordList() string {
	if x != nil {
		return x.RecordList
	}
	return ""
}

func (x *FindNetworkByRecordIDRequest) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindNetworkByRecordIDRequest) GetBuildOutDegree() int32 {
	if x != nil {
		return x.BuildOutDegree
	}
	return 0
}

func (x *FindNetworkByRecordIDRequest) GetMaxEntities() int32 {
	if x != nil {
		return x.MaxEntities
	}
	return 0
}

type FindNetworkByRecordIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindNetworkByRecordIDResponse) Reset() {
	*x = FindNetworkByRecordIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNetworkByRecordIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNetworkByRecordIDResponse) ProtoMessage() {}

func (x *FindNetworkByRecordIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNetworkByRecordIDResponse.ProtoReflect.Descriptor instead.
func (*FindNetworkByRecordIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{41}
}

func (x *FindNetworkByRecordIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindNetworkByRecordID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordList     string `protobuf:"bytes,1,opt,name=recordList,proto3" json:"recordList,omitempty"`
	MaxDegree      int32  `protobuf:"varint,2,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	BuildOutDegree int32  `protobuf:"varint,3,opt,name=buildOutDegree,proto3" json:"buildOutDegree,omitempty"`
	MaxEntities    int32  `protobuf:"varint,4,opt,name=maxEntities,proto3" json:"maxEntities,omitempty"`
	Flags          int64  `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *FindNetworkByRecordID_V2Request) Reset() {
	*x = FindNetworkByRecordID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNetworkByRecordID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNetworkByRecordID_V2Request) ProtoMessage() {}

func (x *FindNetworkByRecordID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNetworkByRecordID_V2Request.ProtoReflect.Descriptor instead.
func (*FindNetworkByRecordID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{42}
}

func (x *FindNetworkByRecordID_V2Request) GetRecordList() string {
	if x != nil {
		return x.RecordList
	}
	return ""
}

func (x *FindNetworkByRecordID_V2Request) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindNetworkByRecordID_V2Request) GetBuildOutDegree() int32 {
	if x != nil {
		return x.BuildOutDegree
	}
	return 0
}

func (x *FindNetworkByRecordID_V2Request) GetMaxEntities() int32 {
	if x != nil {
		return x.MaxEntities
	}
	return 0
}

func (x *FindNetworkByRecordID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type FindNetworkByRecordID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindNetworkByRecordID_V2Response) Reset() {
	*x = FindNetworkByRecordID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNetworkByRecordID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNetworkByRecordID_V2Response) ProtoMessage() {}

func (x *FindNetworkByRecordID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNetworkByRecordID_V2Response.ProtoReflect.Descriptor instead.
func (*FindNetworkByRecordID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{43}
}

func (x *FindNetworkByRecordID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindPathByEntityIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID1 int64 `protobuf:"varint,1,opt,name=entityID1,proto3" json:"entityID1,omitempty"`
	EntityID2 int64 `protobuf:"varint,2,opt,name=entityID2,proto3" json:"entityID2,omitempty"`
	MaxDegree int32 `protobuf:"varint,3,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
}

func (x *FindPathByEntityIDRequest) Reset() {
	*x = FindPathByEntityIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathByEntityIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathByEntityIDRequest) ProtoMessage() {}

func (x *FindPathByEntityIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathByEntityIDRequest.ProtoReflect.Descriptor instead.
func (*FindPathByEntityIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{44}
}

func (x *FindPathByEntityIDRequest) GetEntityID1() int64 {
	if x != nil {
		return x.EntityID1
	}
	return 0
}

func (x *FindPathByEntityIDRequest) GetEntityID2() int64 {
	if x != nil {
		return x.EntityID2
	}
	return 0
}

func (x *FindPathByEntityIDRequest) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

type FindPathByEntityIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindPathByEntityIDResponse) Reset() {
	*x = FindPathByEntityIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathByEntityIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathByEntityIDResponse) ProtoMessage() {}

func (x *FindPathByEntityIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathByEntityIDResponse.ProtoReflect.Descriptor instead.
func (*FindPathByEntityIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{45}
}

func (x *FindPathByEntityIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindPathByEntityID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID1 int64 `protobuf:"varint,1,opt,name=entityID1,proto3" json:"entityID1,omitempty"`
	EntityID2 int64 `protobuf:"varint,2,opt,name=entityID2,proto3" json:"entityID2,omitempty"`
	MaxDegree int32 `protobuf:"varint,3,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	Flags     int64 `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *FindPathByEntityID_V2Request) Reset() {
	*x = FindPathByEntityID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathByEntityID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathByEntityID_V2Request) ProtoMessage() {}

func (x *FindPathByEntityID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathByEntityID_V2Request.ProtoReflect.Descriptor instead.
func (*FindPathByEntityID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{46}
}

func (x *FindPathByEntityID_V2Request) GetEntityID1() int64 {
	if x != nil {
		return x.EntityID1
	}
	return 0
}

func (x *FindPathByEntityID_V2Request) GetEntityID2() int64 {
	if x != nil {
		return x.EntityID2
	}
	return 0
}

func (x *FindPathByEntityID_V2Request) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindPathByEntityID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type FindPathByEntityID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindPathByEntityID_V2Response) Reset() {
	*x = FindPathByEntityID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathByEntityID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathByEntityID_V2Response) ProtoMessage() {}

func (x *FindPathByEntityID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathByEntityID_V2Response.ProtoReflect.Descriptor instead.
func (*FindPathByEntityID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{47}
}

func (x *FindPathByEntityID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindPathByRecordIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode1 string `protobuf:"bytes,1,opt,name=dataSourceCode1,proto3" json:"dataSourceCode1,omitempty"`
	RecordID1       string `protobuf:"bytes,2,opt,name=recordID1,proto3" json:"recordID1,omitempty"`
	DataSourceCode2 string `protobuf:"bytes,3,opt,name=dataSourceCode2,proto3" json:"dataSourceCode2,omitempty"`
	RecordID2       string `protobuf:"bytes,4,opt,name=recordID2,proto3" json:"recordID2,omitempty"`
	MaxDegree       int32  `protobuf:"varint,5,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
}

func (x *FindPathByRecordIDRequest) Reset() {
	*x = FindPathByRecordIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathByRecordIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathByRecordIDRequest) ProtoMessage() {}

func (x *FindPathByRecordIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathByRecordIDRequest.ProtoReflect.Descriptor instead.
func (*FindPathByRecordIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{48}
}

func (x *FindPathByRecordIDRequest) GetDataSourceCode1() string {
	if x != nil {
		return x.DataSourceCode1
	}
	return ""
}

func (x *FindPathByRecordIDRequest) GetRecordID1() string {
	if x != nil {
		return x.RecordID1
	}
	return ""
}

func (x *FindPathByRecordIDRequest) GetDataSourceCode2() string {
	if x != nil {
		return x.DataSourceCode2
	}
	return ""
}

func (x *FindPathByRecordIDRequest) GetRecordID2() string {
	if x != nil {
		return x.RecordID2
	}
	return ""
}

func (x *FindPathByRecordIDRequest) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

type FindPathByRecordIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindPathByRecordIDResponse) Reset() {
	*x = FindPathByRecordIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathByRecordIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathByRecordIDResponse) ProtoMessage() {}

func (x *FindPathByRecordIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathByRecordIDResponse.ProtoReflect.Descriptor instead.
func (*FindPathByRecordIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{49}
}

func (x *FindPathByRecordIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindPathByRecordID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode1 string `protobuf:"bytes,1,opt,name=dataSourceCode1,proto3" json:"dataSourceCode1,omitempty"`
	RecordID1       string `protobuf:"bytes,2,opt,name=recordID1,proto3" json:"recordID1,omitempty"`
	DataSourceCode2 string `protobuf:"bytes,3,opt,name=dataSourceCode2,proto3" json:"dataSourceCode2,omitempty"`
	RecordID2       string `protobuf:"bytes,4,opt,name=recordID2,proto3" json:"recordID2,omitempty"`
	MaxDegree       int32  `protobuf:"varint,5,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	Flags           int64  `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *FindPathByRecordID_V2Request) Reset() {
	*x = FindPathByRecordID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathByRecordID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathByRecordID_V2Request) ProtoMessage() {}

func (x *FindPathByRecordID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathByRecordID_V2Request.ProtoReflect.Descriptor instead.
func (*FindPathByRecordID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{50}
}

func (x *FindPathByRecordID_V2Request) GetDataSourceCode1() string {
	if x != nil {
		return x.DataSourceCode1
	}
	return ""
}

func (x *FindPathByRecordID_V2Request) GetRecordID1() string {
	if x != nil {
		return x.RecordID1
	}
	return ""
}

func (x *FindPathByRecordID_V2Request) GetDataSourceCode2() string {
	if x != nil {
		return x.DataSourceCode2
	}
	return ""
}

func (x *FindPathByRecordID_V2Request) GetRecordID2() string {
	if x != nil {
		return x.RecordID2
	}
	return ""
}

func (x *FindPathByRecordID_V2Request) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindPathByRecordID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type FindPathByRecordID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindPathByRecordID_V2Response) Reset() {
	*x = FindPathByRecordID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathByRecordID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathByRecordID_V2Response) ProtoMessage() {}

func (x *FindPathByRecordID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathByRecordID_V2Response.ProtoReflect.Descriptor instead.
func (*FindPathByRecordID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{51}
}

func (x *FindPathByRecordID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindPathExcludingByEntityIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID1        int64  `protobuf:"varint,1,opt,name=entityID1,proto3" json:"entityID1,omitempty"`
	EntityID2        int64  `protobuf:"varint,2,opt,name=entityID2,proto3" json:"entityID2,omitempty"`
	MaxDegree        int32  `protobuf:"varint,3,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	ExcludedEntities string `protobuf:"bytes,4,opt,name=excludedEntities,proto3" json:"excludedEntities,omitempty"`
}

func (x *FindPathExcludingByEntityIDRequest) Reset() {
	*x = FindPathExcludingByEntityIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathExcludingByEntityIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathExcludingByEntityIDRequest) ProtoMessage() {}

func (x *FindPathExcludingByEntityIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathExcludingByEntityIDRequest.ProtoReflect.Descriptor instead.
func (*FindPathExcludingByEntityIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{52}
}

func (x *FindPathExcludingByEntityIDRequest) GetEntityID1() int64 {
	if x != nil {
		return x.EntityID1
	}
	return 0
}

func (x *FindPathExcludingByEntityIDRequest) GetEntityID2() int64 {
	if x != nil {
		return x.EntityID2
	}
	return 0
}

func (x *FindPathExcludingByEntityIDRequest) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindPathExcludingByEntityIDRequest) GetExcludedEntities() string {
	if x != nil {
		return x.ExcludedEntities
	}
	return ""
}

type FindPathExcludingByEntityIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindPathExcludingByEntityIDResponse) Reset() {
	*x = FindPathExcludingByEntityIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathExcludingByEntityIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathExcludingByEntityIDResponse) ProtoMessage() {}

func (x *FindPathExcludingByEntityIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathExcludingByEntityIDResponse.ProtoReflect.Descriptor instead.
func (*FindPathExcludingByEntityIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{53}
}

func (x *FindPathExcludingByEntityIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindPathExcludingByEntityID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID1        int64  `protobuf:"varint,1,opt,name=entityID1,proto3" json:"entityID1,omitempty"`
	EntityID2        int64  `protobuf:"varint,2,opt,name=entityID2,proto3" json:"entityID2,omitempty"`
	MaxDegree        int32  `protobuf:"varint,3,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	ExcludedEntities string `protobuf:"bytes,4,opt,name=excludedEntities,proto3" json:"excludedEntities,omitempty"`
	Flags            int64  `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *FindPathExcludingByEntityID_V2Request) Reset() {
	*x = FindPathExcludingByEntityID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathExcludingByEntityID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathExcludingByEntityID_V2Request) ProtoMessage() {}

func (x *FindPathExcludingByEntityID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathExcludingByEntityID_V2Request.ProtoReflect.Descriptor instead.
func (*FindPathExcludingByEntityID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{54}
}

func (x *FindPathExcludingByEntityID_V2Request) GetEntityID1() int64 {
	if x != nil {
		return x.EntityID1
	}
	return 0
}

func (x *FindPathExcludingByEntityID_V2Request) GetEntityID2() int64 {
	if x != nil {
		return x.EntityID2
	}
	return 0
}

func (x *FindPathExcludingByEntityID_V2Request) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindPathExcludingByEntityID_V2Request) GetExcludedEntities() string {
	if x != nil {
		return x.ExcludedEntities
	}
	return ""
}

func (x *FindPathExcludingByEntityID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type FindPathExcludingByEntityID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindPathExcludingByEntityID_V2Response) Reset() {
	*x = FindPathExcludingByEntityID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathExcludingByEntityID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathExcludingByEntityID_V2Response) ProtoMessage() {}

func (x *FindPathExcludingByEntityID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathExcludingByEntityID_V2Response.ProtoReflect.Descriptor instead.
func (*FindPathExcludingByEntityID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{55}
}

func (x *FindPathExcludingByEntityID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindPathExcludingByRecordIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode1 string `protobuf:"bytes,1,opt,name=dataSourceCode1,proto3" json:"dataSourceCode1,omitempty"`
	RecordID1       string `protobuf:"bytes,2,opt,name=recordID1,proto3" json:"recordID1,omitempty"`
	DataSourceCode2 string `protobuf:"bytes,3,opt,name=dataSourceCode2,proto3" json:"dataSourceCode2,omitempty"`
	RecordID2       string `protobuf:"bytes,4,opt,name=recordID2,proto3" json:"recordID2,omitempty"`
	MaxDegree       int32  `protobuf:"varint,5,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	ExcludedRecords string `protobuf:"bytes,6,opt,name=excludedRecords,proto3" json:"excludedRecords,omitempty"`
}

func (x *FindPathExcludingByRecordIDRequest) Reset() {
	*x = FindPathExcludingByRecordIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathExcludingByRecordIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathExcludingByRecordIDRequest) ProtoMessage() {}

func (x *FindPathExcludingByRecordIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathExcludingByRecordIDRequest.ProtoReflect.Descriptor instead.
func (*FindPathExcludingByRecordIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{56}
}

func (x *FindPathExcludingByRecordIDRequest) GetDataSourceCode1() string {
	if x != nil {
		return x.DataSourceCode1
	}
	return ""
}

func (x *FindPathExcludingByRecordIDRequest) GetRecordID1() string {
	if x != nil {
		return x.RecordID1
	}
	return ""
}

func (x *FindPathExcludingByRecordIDRequest) GetDataSourceCode2() string {
	if x != nil {
		return x.DataSourceCode2
	}
	return ""
}

func (x *FindPathExcludingByRecordIDRequest) GetRecordID2() string {
	if x != nil {
		return x.RecordID2
	}
	return ""
}

func (x *FindPathExcludingByRecordIDRequest) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindPathExcludingByRecordIDRequest) GetExcludedRecords() string {
	if x != nil {
		return x.ExcludedRecords
	}
	return ""
}

type FindPathExcludingByRecordIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindPathExcludingByRecordIDResponse) Reset() {
	*x = FindPathExcludingByRecordIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathExcludingByRecordIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathExcludingByRecordIDResponse) ProtoMessage() {}

func (x *FindPathExcludingByRecordIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathExcludingByRecordIDResponse.ProtoReflect.Descriptor instead.
func (*FindPathExcludingByRecordIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{57}
}

func (x *FindPathExcludingByRecordIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindPathExcludingByRecordID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode1 string `protobuf:"bytes,1,opt,name=dataSourceCode1,proto3" json:"dataSourceCode1,omitempty"`
	RecordID1       string `protobuf:"bytes,2,opt,name=recordID1,proto3" json:"recordID1,omitempty"`
	DataSourceCode2 string `protobuf:"bytes,3,opt,name=dataSourceCode2,proto3" json:"dataSourceCode2,omitempty"`
	RecordID2       string `protobuf:"bytes,4,opt,name=recordID2,proto3" json:"recordID2,omitempty"`
	MaxDegree       int32  `protobuf:"varint,5,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	ExcludedRecords string `protobuf:"bytes,6,opt,name=excludedRecords,proto3" json:"excludedRecords,omitempty"`
	Flags           int64  `protobuf:"varint,7,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *FindPathExcludingByRecordID_V2Request) Reset() {
	*x = FindPathExcludingByRecordID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathExcludingByRecordID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathExcludingByRecordID_V2Request) ProtoMessage() {}

func (x *FindPathExcludingByRecordID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathExcludingByRecordID_V2Request.ProtoReflect.Descriptor instead.
func (*FindPathExcludingByRecordID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{58}
}

func (x *FindPathExcludingByRecordID_V2Request) GetDataSourceCode1() string {
	if x != nil {
		return x.DataSourceCode1
	}
	return ""
}

func (x *FindPathExcludingByRecordID_V2Request) GetRecordID1() string {
	if x != nil {
		return x.RecordID1
	}
	return ""
}

func (x *FindPathExcludingByRecordID_V2Request) GetDataSourceCode2() string {
	if x != nil {
		return x.DataSourceCode2
	}
	return ""
}

func (x *FindPathExcludingByRecordID_V2Request) GetRecordID2() string {
	if x != nil {
		return x.RecordID2
	}
	return ""
}

func (x *FindPathExcludingByRecordID_V2Request) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindPathExcludingByRecordID_V2Request) GetExcludedRecords() string {
	if x != nil {
		return x.ExcludedRecords
	}
	return ""
}

func (x *FindPathExcludingByRecordID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type FindPathExcludingByRecordID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindPathExcludingByRecordID_V2Response) Reset() {
	*x = FindPathExcludingByRecordID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathExcludingByRecordID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathExcludingByRecordID_V2Response) ProtoMessage() {}

func (x *FindPathExcludingByRecordID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathExcludingByRecordID_V2Response.ProtoReflect.Descriptor instead.
func (*FindPathExcludingByRecordID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{59}
}

func (x *FindPathExcludingByRecordID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindPathIncludingSourceByEntityIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID1        int64  `protobuf:"varint,1,opt,name=entityID1,proto3" json:"entityID1,omitempty"`
	EntityID2        int64  `protobuf:"varint,2,opt,name=entityID2,proto3" json:"entityID2,omitempty"`
	MaxDegree        int32  `protobuf:"varint,3,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	ExcludedEntities string `protobuf:"bytes,4,opt,name=excludedEntities,proto3" json:"excludedEntities,omitempty"`
	RequiredDsrcs    string `protobuf:"bytes,5,opt,name=requiredDsrcs,proto3" json:"requiredDsrcs,omitempty"`
}

func (x *FindPathIncludingSourceByEntityIDRequest) Reset() {
	*x = FindPathIncludingSourceByEntityIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathIncludingSourceByEntityIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathIncludingSourceByEntityIDRequest) ProtoMessage() {}

func (x *FindPathIncludingSourceByEntityIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathIncludingSourceByEntityIDRequest.ProtoReflect.Descriptor instead.
func (*FindPathIncludingSourceByEntityIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{60}
}

func (x *FindPathIncludingSourceByEntityIDRequest) GetEntityID1() int64 {
	if x != nil {
		return x.EntityID1
	}
	return 0
}

func (x *FindPathIncludingSourceByEntityIDRequest) GetEntityID2() int64 {
	if x != nil {
		return x.EntityID2
	}
	return 0
}

func (x *FindPathIncludingSourceByEntityIDRequest) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindPathIncludingSourceByEntityIDRequest) GetExcludedEntities() string {
	if x != nil {
		return x.ExcludedEntities
	}
	return ""
}

func (x *FindPathIncludingSourceByEntityIDRequest) GetRequiredDsrcs() string {
	if x != nil {
		return x.RequiredDsrcs
	}
	return ""
}

type FindPathIncludingSourceByEntityIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindPathIncludingSourceByEntityIDResponse) Reset() {
	*x = FindPathIncludingSourceByEntityIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathIncludingSourceByEntityIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathIncludingSourceByEntityIDResponse) ProtoMessage() {}

func (x *FindPathIncludingSourceByEntityIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathIncludingSourceByEntityIDResponse.ProtoReflect.Descriptor instead.
func (*FindPathIncludingSourceByEntityIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{61}
}

func (x *FindPathIncludingSourceByEntityIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindPathIncludingSourceByEntityID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID1        int64  `protobuf:"varint,1,opt,name=entityID1,proto3" json:"entityID1,omitempty"`
	EntityID2        int64  `protobuf:"varint,2,opt,name=entityID2,proto3" json:"entityID2,omitempty"`
	MaxDegree        int32  `protobuf:"varint,3,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	ExcludedEntities string `protobuf:"bytes,4,opt,name=excludedEntities,proto3" json:"excludedEntities,omitempty"`
	RequiredDsrcs    string `protobuf:"bytes,5,opt,name=requiredDsrcs,proto3" json:"requiredDsrcs,omitempty"`
	Flags            int64  `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *FindPathIncludingSourceByEntityID_V2Request) Reset() {
	*x = FindPathIncludingSourceByEntityID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathIncludingSourceByEntityID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathIncludingSourceByEntityID_V2Request) ProtoMessage() {}

func (x *FindPathIncludingSourceByEntityID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathIncludingSourceByEntityID_V2Request.ProtoReflect.Descriptor instead.
func (*FindPathIncludingSourceByEntityID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{62}
}

func (x *FindPathIncludingSourceByEntityID_V2Request) GetEntityID1() int64 {
	if x != nil {
		return x.EntityID1
	}
	return 0
}

func (x *FindPathIncludingSourceByEntityID_V2Request) GetEntityID2() int64 {
	if x != nil {
		return x.EntityID2
	}
	return 0
}

func (x *FindPathIncludingSourceByEntityID_V2Request) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindPathIncludingSourceByEntityID_V2Request) GetExcludedEntities() string {
	if x != nil {
		return x.ExcludedEntities
	}
	return ""
}

func (x *FindPathIncludingSourceByEntityID_V2Request) GetRequiredDsrcs() string {
	if x != nil {
		return x.RequiredDsrcs
	}
	return ""
}

func (x *FindPathIncludingSourceByEntityID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type FindPathIncludingSourceByEntityID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindPathIncludingSourceByEntityID_V2Response) Reset() {
	*x = FindPathIncludingSourceByEntityID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathIncludingSourceByEntityID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathIncludingSourceByEntityID_V2Response) ProtoMessage() {}

func (x *FindPathIncludingSourceByEntityID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathIncludingSourceByEntityID_V2Response.ProtoReflect.Descriptor instead.
func (*FindPathIncludingSourceByEntityID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{63}
}

func (x *FindPathIncludingSourceByEntityID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindPathIncludingSourceByRecordIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode1 string `protobuf:"bytes,1,opt,name=dataSourceCode1,proto3" json:"dataSourceCode1,omitempty"`
	RecordID1       string `protobuf:"bytes,2,opt,name=recordID1,proto3" json:"recordID1,omitempty"`
	DataSourceCode2 string `protobuf:"bytes,3,opt,name=dataSourceCode2,proto3" json:"dataSourceCode2,omitempty"`
	RecordID2       string `protobuf:"bytes,4,opt,name=recordID2,proto3" json:"recordID2,omitempty"`
	MaxDegree       int32  `protobuf:"varint,5,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	ExcludedRecords string `protobuf:"bytes,6,opt,name=excludedRecords,proto3" json:"excludedRecords,omitempty"`
	RequiredDsrcs   string `protobuf:"bytes,7,opt,name=requiredDsrcs,proto3" json:"requiredDsrcs,omitempty"`
}

func (x *FindPathIncludingSourceByRecordIDRequest) Reset() {
	*x = FindPathIncludingSourceByRecordIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathIncludingSourceByRecordIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathIncludingSourceByRecordIDRequest) ProtoMessage() {}

func (x *FindPathIncludingSourceByRecordIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathIncludingSourceByRecordIDRequest.ProtoReflect.Descriptor instead.
func (*FindPathIncludingSourceByRecordIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{64}
}

func (x *FindPathIncludingSourceByRecordIDRequest) GetDataSourceCode1() string {
	if x != nil {
		return x.DataSourceCode1
	}
	return ""
}

func (x *FindPathIncludingSourceByRecordIDRequest) GetRecordID1() string {
	if x != nil {
		return x.RecordID1
	}
	return ""
}

func (x *FindPathIncludingSourceByRecordIDRequest) GetDataSourceCode2() string {
	if x != nil {
		return x.DataSourceCode2
	}
	return ""
}

func (x *FindPathIncludingSourceByRecordIDRequest) GetRecordID2() string {
	if x != nil {
		return x.RecordID2
	}
	return ""
}

func (x *FindPathIncludingSourceByRecordIDRequest) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindPathIncludingSourceByRecordIDRequest) GetExcludedRecords() string {
	if x != nil {
		return x.ExcludedRecords
	}
	return ""
}

func (x *FindPathIncludingSourceByRecordIDRequest) GetRequiredDsrcs() string {
	if x != nil {
		return x.RequiredDsrcs
	}
	return ""
}

type FindPathIncludingSourceByRecordIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindPathIncludingSourceByRecordIDResponse) Reset() {
	*x = FindPathIncludingSourceByRecordIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathIncludingSourceByRecordIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathIncludingSourceByRecordIDResponse) ProtoMessage() {}

func (x *FindPathIncludingSourceByRecordIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathIncludingSourceByRecordIDResponse.ProtoReflect.Descriptor instead.
func (*FindPathIncludingSourceByRecordIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{65}
}

func (x *FindPathIncludingSourceByRecordIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FindPathIncludingSourceByRecordID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode1 string `protobuf:"bytes,1,opt,name=dataSourceCode1,proto3" json:"dataSourceCode1,omitempty"`
	RecordID1       string `protobuf:"bytes,2,opt,name=recordID1,proto3" json:"recordID1,omitempty"`
	DataSourceCode2 string `protobuf:"bytes,3,opt,name=dataSourceCode2,proto3" json:"dataSourceCode2,omitempty"`
	RecordID2       string `protobuf:"bytes,4,opt,name=recordID2,proto3" json:"recordID2,omitempty"`
	MaxDegree       int32  `protobuf:"varint,5,opt,name=maxDegree,proto3" json:"maxDegree,omitempty"`
	ExcludedRecords string `protobuf:"bytes,6,opt,name=excludedRecords,proto3" json:"excludedRecords,omitempty"`
	RequiredDsrcs   string `protobuf:"bytes,7,opt,name=requiredDsrcs,proto3" json:"requiredDsrcs,omitempty"`
	Flags           int64  `protobuf:"varint,8,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *FindPathIncludingSourceByRecordID_V2Request) Reset() {
	*x = FindPathIncludingSourceByRecordID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathIncludingSourceByRecordID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathIncludingSourceByRecordID_V2Request) ProtoMessage() {}

func (x *FindPathIncludingSourceByRecordID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathIncludingSourceByRecordID_V2Request.ProtoReflect.Descriptor instead.
func (*FindPathIncludingSourceByRecordID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{66}
}

func (x *FindPathIncludingSourceByRecordID_V2Request) GetDataSourceCode1() string {
	if x != nil {
		return x.DataSourceCode1
	}
	return ""
}

func (x *FindPathIncludingSourceByRecordID_V2Request) GetRecordID1() string {
	if x != nil {
		return x.RecordID1
	}
	return ""
}

func (x *FindPathIncludingSourceByRecordID_V2Request) GetDataSourceCode2() string {
	if x != nil {
		return x.DataSourceCode2
	}
	return ""
}

func (x *FindPathIncludingSourceByRecordID_V2Request) GetRecordID2() string {
	if x != nil {
		return x.RecordID2
	}
	return ""
}

func (x *FindPathIncludingSourceByRecordID_V2Request) GetMaxDegree() int32 {
	if x != nil {
		return x.MaxDegree
	}
	return 0
}

func (x *FindPathIncludingSourceByRecordID_V2Request) GetExcludedRecords() string {
	if x != nil {
		return x.ExcludedRecords
	}
	return ""
}

func (x *FindPathIncludingSourceByRecordID_V2Request) GetRequiredDsrcs() string {
	if x != nil {
		return x.RequiredDsrcs
	}
	return ""
}

func (x *FindPathIncludingSourceByRecordID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type FindPathIncludingSourceByRecordID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindPathIncludingSourceByRecordID_V2Response) Reset() {
	*x = FindPathIncludingSourceByRecordID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathIncludingSourceByRecordID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathIncludingSourceByRecordID_V2Response) ProtoMessage() {}

func (x *FindPathIncludingSourceByRecordID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathIncludingSourceByRecordID_V2Response.ProtoReflect.Descriptor instead.
func (*FindPathIncludingSourceByRecordID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{67}
}

func (x *FindPathIncludingSourceByRecordID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetActiveConfigIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetActiveConfigIDRequest) Reset() {
	*x = GetActiveConfigIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveConfigIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveConfigIDRequest) ProtoMessage() {}

func (x *GetActiveConfigIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveConfigIDRequest.ProtoReflect.Descriptor instead.
func (*GetActiveConfigIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{68}
}

type GetActiveConfigIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int64 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetActiveConfigIDResponse) Reset() {
	*x = GetActiveConfigIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveConfigIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveConfigIDResponse) ProtoMessage() {}

func (x *GetActiveConfigIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveConfigIDResponse.ProtoReflect.Descriptor instead.
func (*GetActiveConfigIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{69}
}

func (x *GetActiveConfigIDResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

type GetEntityByEntityIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID int64 `protobuf:"varint,1,opt,name=entityID,proto3" json:"entityID,omitempty"`
}

func (x *GetEntityByEntityIDRequest) Reset() {
	*x = GetEntityByEntityIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntityByEntityIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityByEntityIDRequest) ProtoMessage() {}

func (x *GetEntityByEntityIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityByEntityIDRequest.ProtoReflect.Descriptor instead.
func (*GetEntityByEntityIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{70}
}

func (x *GetEntityByEntityIDRequest) GetEntityID() int64 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

type GetEntityByEntityIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetEntityByEntityIDResponse) Reset() {
	*x = GetEntityByEntityIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntityByEntityIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityByEntityIDResponse) ProtoMessage() {}

func (x *GetEntityByEntityIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityByEntityIDResponse.ProtoReflect.Descriptor instead.
func (*GetEntityByEntityIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{71}
}

func (x *GetEntityByEntityIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetEntityByEntityID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID int64 `protobuf:"varint,1,opt,name=entityID,proto3" json:"entityID,omitempty"`
	Flags    int64 `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *GetEntityByEntityID_V2Request) Reset() {
	*x = GetEntityByEntityID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntityByEntityID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityByEntityID_V2Request) ProtoMessage() {}

func (x *GetEntityByEntityID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityByEntityID_V2Request.ProtoReflect.Descriptor instead.
func (*GetEntityByEntityID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{72}
}

func (x *GetEntityByEntityID_V2Request) GetEntityID() int64 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

func (x *GetEntityByEntityID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type GetEntityByEntityID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetEntityByEntityID_V2Response) Reset() {
	*x = GetEntityByEntityID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntityByEntityID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityByEntityID_V2Response) ProtoMessage() {}

func (x *GetEntityByEntityID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityByEntityID_V2Response.ProtoReflect.Descriptor instead.
func (*GetEntityByEntityID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{73}
}

func (x *GetEntityByEntityID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetEntityByRecordIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
}

func (x *GetEntityByRecordIDRequest) Reset() {
	*x = GetEntityByRecordIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntityByRecordIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityByRecordIDRequest) ProtoMessage() {}

func (x *GetEntityByRecordIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityByRecordIDRequest.ProtoReflect.Descriptor instead.
func (*GetEntityByRecordIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{74}
}

func (x *GetEntityByRecordIDRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *GetEntityByRecordIDRequest) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

type GetEntityByRecordIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetEntityByRecordIDResponse) Reset() {
	*x = GetEntityByRecordIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntityByRecordIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityByRecordIDResponse) ProtoMessage() {}

func (x *GetEntityByRecordIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityByRecordIDResponse.ProtoReflect.Descriptor instead.
func (*GetEntityByRecordIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{75}
}

func (x *GetEntityByRecordIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetEntityByRecordID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
	Flags          int64  `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *GetEntityByRecordID_V2Request) Reset() {
	*x = GetEntityByRecordID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntityByRecordID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityByRecordID_V2Request) ProtoMessage() {}

func (x *GetEntityByRecordID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityByRecordID_V2Request.ProtoReflect.Descriptor instead.
func (*GetEntityByRecordID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{76}
}

func (x *GetEntityByRecordID_V2Request) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *GetEntityByRecordID_V2Request) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *GetEntityByRecordID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type GetEntityByRecordID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetEntityByRecordID_V2Response) Reset() {
	*x = GetEntityByRecordID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntityByRecordID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityByRecordID_V2Response) ProtoMessage() {}

func (x *GetEntityByRecordID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityByRecordID_V2Response.ProtoReflect.Descriptor instead.
func (*GetEntityByRecordID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{77}
}

func (x *GetEntityByRecordID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetLastExceptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLastExceptionRequest) Reset() {
	*x = GetLastExceptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastExceptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastExceptionRequest) ProtoMessage() {}

func (x *GetLastExceptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastExceptionRequest.ProtoReflect.Descriptor instead.
func (*GetLastExceptionRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{78}
}

type GetLastExceptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetLastExceptionResponse) Reset() {
	*x = GetLastExceptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastExceptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastExceptionResponse) ProtoMessage() {}

func (x *GetLastExceptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastExceptionResponse.ProtoReflect.Descriptor instead.
func (*GetLastExceptionResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{79}
}

func (x *GetLastExceptionResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetLastExceptionCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLastExceptionCodeRequest) Reset() {
	*x = GetLastExceptionCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastExceptionCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastExceptionCodeRequest) ProtoMessage() {}

func (x *GetLastExceptionCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastExceptionCodeRequest.ProtoReflect.Descriptor instead.
func (*GetLastExceptionCodeRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{80}
}

type GetLastExceptionCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetLastExceptionCodeResponse) Reset() {
	*x = GetLastExceptionCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastExceptionCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastExceptionCodeResponse) ProtoMessage() {}

func (x *GetLastExceptionCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastExceptionCodeResponse.ProtoReflect.Descriptor instead.
func (*GetLastExceptionCodeResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{81}
}

func (x *GetLastExceptionCodeResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type GetRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
}

func (x *GetRecordRequest) Reset() {
	*x = GetRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordRequest) ProtoMessage() {}

func (x *GetRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordRequest.ProtoReflect.Descriptor instead.
func (*GetRecordRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{82}
}

func (x *GetRecordRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *GetRecordRequest) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

type GetRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetRecordResponse) Reset() {
	*x = GetRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordResponse) ProtoMessage() {}

func (x *GetRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordResponse.ProtoReflect.Descriptor instead.
func (*GetRecordResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{83}
}

func (x *GetRecordResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetRecord_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
	Flags          int64  `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *GetRecord_V2Request) Reset() {
	*x = GetRecord_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecord_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecord_V2Request) ProtoMessage() {}

func (x *GetRecord_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecord_V2Request.ProtoReflect.Descriptor instead.
func (*GetRecord_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{84}
}

func (x *GetRecord_V2Request) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *GetRecord_V2Request) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *GetRecord_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type GetRecord_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetRecord_V2Response) Reset() {
	*x = GetRecord_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecord_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecord_V2Response) ProtoMessage() {}

func (x *GetRecord_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecord_V2Response.ProtoReflect.Descriptor instead.
func (*GetRecord_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{85}
}

func (x *GetRecord_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetRedoRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRedoRecordRequest) Reset() {
	*x = GetRedoRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRedoRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedoRecordRequest) ProtoMessage() {}

func (x *GetRedoRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedoRecordRequest.ProtoReflect.Descriptor instead.
func (*GetRedoRecordRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{86}
}

type GetRedoRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetRedoRecordResponse) Reset() {
	*x = GetRedoRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRedoRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedoRecordResponse) ProtoMessage() {}

func (x *GetRedoRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedoRecordResponse.ProtoReflect.Descriptor instead.
func (*GetRedoRecordResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{87}
}

func (x *GetRedoRecordResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetRepositoryLastModifiedTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRepositoryLastModifiedTimeRequest) Reset() {
	*x = GetRepositoryLastModifiedTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepositoryLastModifiedTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryLastModifiedTimeRequest) ProtoMessage() {}

func (x *GetRepositoryLastModifiedTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryLastModifiedTimeRequest.ProtoReflect.Descriptor instead.
func (*GetRepositoryLastModifiedTimeRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{88}
}

type GetRepositoryLastModifiedTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int64 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetRepositoryLastModifiedTimeResponse) Reset() {
	*x = GetRepositoryLastModifiedTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepositoryLastModifiedTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryLastModifiedTimeResponse) ProtoMessage() {}

func (x *GetRepositoryLastModifiedTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryLastModifiedTimeResponse.ProtoReflect.Descriptor instead.
func (*GetRepositoryLastModifiedTimeResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{89}
}

func (x *GetRepositoryLastModifiedTimeResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

type GetVirtualEntityByRecordIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordList string `protobuf:"bytes,1,opt,name=recordList,proto3" json:"recordList,omitempty"`
}

func (x *GetVirtualEntityByRecordIDRequest) Reset() {
	*x = GetVirtualEntityByRecordIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualEntityByRecordIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualEntityByRecordIDRequest) ProtoMessage() {}

func (x *GetVirtualEntityByRecordIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualEntityByRecordIDRequest.ProtoReflect.Descriptor instead.
func (*GetVirtualEntityByRecordIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{90}
}

func (x *GetVirtualEntityByRecordIDRequest) GetRecordList() string {
	if x != nil {
		return x.RecordList
	}
	return ""
}

type GetVirtualEntityByRecordIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetVirtualEntityByRecordIDResponse) Reset() {
	*x = GetVirtualEntityByRecordIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualEntityByRecordIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualEntityByRecordIDResponse) ProtoMessage() {}

func (x *GetVirtualEntityByRecordIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualEntityByRecordIDResponse.ProtoReflect.Descriptor instead.
func (*GetVirtualEntityByRecordIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{91}
}

func (x *GetVirtualEntityByRecordIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetVirtualEntityByRecordID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordList string `protobuf:"bytes,1,opt,name=recordList,proto3" json:"recordList,omitempty"`
	Flags      int64  `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *GetVirtualEntityByRecordID_V2Request) Reset() {
	*x = GetVirtualEntityByRecordID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualEntityByRecordID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualEntityByRecordID_V2Request) ProtoMessage() {}

func (x *GetVirtualEntityByRecordID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualEntityByRecordID_V2Request.ProtoReflect.Descriptor instead.
func (*GetVirtualEntityByRecordID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{92}
}

func (x *GetVirtualEntityByRecordID_V2Request) GetRecordList() string {
	if x != nil {
		return x.RecordList
	}
	return ""
}

func (x *GetVirtualEntityByRecordID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type GetVirtualEntityByRecordID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetVirtualEntityByRecordID_V2Response) Reset() {
	*x = GetVirtualEntityByRecordID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtualEntityByRecordID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualEntityByRecordID_V2Response) ProtoMessage() {}

func (x *GetVirtualEntityByRecordID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualEntityByRecordID_V2Response.ProtoReflect.Descriptor instead.
func (*GetVirtualEntityByRecordID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{93}
}

func (x *GetVirtualEntityByRecordID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type HowEntityByEntityIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID int64 `protobuf:"varint,1,opt,name=entityID,proto3" json:"entityID,omitempty"`
}

func (x *HowEntityByEntityIDRequest) Reset() {
	*x = HowEntityByEntityIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HowEntityByEntityIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HowEntityByEntityIDRequest) ProtoMessage() {}

func (x *HowEntityByEntityIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HowEntityByEntityIDRequest.ProtoReflect.Descriptor instead.
func (*HowEntityByEntityIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{94}
}

func (x *HowEntityByEntityIDRequest) GetEntityID() int64 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

type HowEntityByEntityIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *HowEntityByEntityIDResponse) Reset() {
	*x = HowEntityByEntityIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HowEntityByEntityIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HowEntityByEntityIDResponse) ProtoMessage() {}

func (x *HowEntityByEntityIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HowEntityByEntityIDResponse.ProtoReflect.Descriptor instead.
func (*HowEntityByEntityIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{95}
}

func (x *HowEntityByEntityIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type HowEntityByEntityID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID int64 `protobuf:"varint,1,opt,name=entityID,proto3" json:"entityID,omitempty"`
	Flags    int64 `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *HowEntityByEntityID_V2Request) Reset() {
	*x = HowEntityByEntityID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HowEntityByEntityID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HowEntityByEntityID_V2Request) ProtoMessage() {}

func (x *HowEntityByEntityID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HowEntityByEntityID_V2Request.ProtoReflect.Descriptor instead.
func (*HowEntityByEntityID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{96}
}

func (x *HowEntityByEntityID_V2Request) GetEntityID() int64 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

func (x *HowEntityByEntityID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type HowEntityByEntityID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *HowEntityByEntityID_V2Response) Reset() {
	*x = HowEntityByEntityID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HowEntityByEntityID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HowEntityByEntityID_V2Response) ProtoMessage() {}

func (x *HowEntityByEntityID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HowEntityByEntityID_V2Response.ProtoReflect.Descriptor instead.
func (*HowEntityByEntityID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{97}
}

func (x *HowEntityByEntityID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type InitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleName     string `protobuf:"bytes,1,opt,name=moduleName,proto3" json:"moduleName,omitempty"`
	IniParams      string `protobuf:"bytes,2,opt,name=iniParams,proto3" json:"iniParams,omitempty"`
	VerboseLogging int32  `protobuf:"varint,3,opt,name=verboseLogging,proto3" json:"verboseLogging,omitempty"`
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{98}
}

func (x *InitRequest) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *InitRequest) GetIniParams() string {
	if x != nil {
		return x.IniParams
	}
	return ""
}

func (x *InitRequest) GetVerboseLogging() int32 {
	if x != nil {
		return x.VerboseLogging
	}
	return 0
}

type InitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitResponse) Reset() {
	*x = InitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitResponse) ProtoMessage() {}

func (x *InitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitResponse.ProtoReflect.Descriptor instead.
func (*InitResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{99}
}

type InitWithConfigIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleName     string `protobuf:"bytes,1,opt,name=moduleName,proto3" json:"moduleName,omitempty"`
	IniParams      string `protobuf:"bytes,2,opt,name=iniParams,proto3" json:"iniParams,omitempty"`
	InitConfigID   int64  `protobuf:"varint,3,opt,name=initConfigID,proto3" json:"initConfigID,omitempty"`
	VerboseLogging int32  `protobuf:"varint,4,opt,name=verboseLogging,proto3" json:"verboseLogging,omitempty"`
}

func (x *InitWithConfigIDRequest) Reset() {
	*x = InitWithConfigIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitWithConfigIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitWithConfigIDRequest) ProtoMessage() {}

func (x *InitWithConfigIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitWithConfigIDRequest.ProtoReflect.Descriptor instead.
func (*InitWithConfigIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{100}
}

func (x *InitWithConfigIDRequest) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *InitWithConfigIDRequest) GetIniParams() string {
	if x != nil {
		return x.IniParams
	}
	return ""
}

func (x *InitWithConfigIDRequest) GetInitConfigID() int64 {
	if x != nil {
		return x.InitConfigID
	}
	return 0
}

func (x *InitWithConfigIDRequest) GetVerboseLogging() int32 {
	if x != nil {
		return x.VerboseLogging
	}
	return 0
}

type InitWithConfigIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitWithConfigIDResponse) Reset() {
	*x = InitWithConfigIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitWithConfigIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitWithConfigIDResponse) ProtoMessage() {}

func (x *InitWithConfigIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitWithConfigIDResponse.ProtoReflect.Descriptor instead.
func (*InitWithConfigIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{101}
}

type PrimeEngineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PrimeEngineRequest) Reset() {
	*x = PrimeEngineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimeEngineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimeEngineRequest) ProtoMessage() {}

func (x *PrimeEngineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimeEngineRequest.ProtoReflect.Descriptor instead.
func (*PrimeEngineRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{102}
}

type PrimeEngineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PrimeEngineResponse) Reset() {
	*x = PrimeEngineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimeEngineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimeEngineResponse) ProtoMessage() {}

func (x *PrimeEngineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimeEngineResponse.ProtoReflect.Descriptor instead.
func (*PrimeEngineResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{103}
}

type ProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record string `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *ProcessRequest) Reset() {
	*x = ProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRequest) ProtoMessage() {}

func (x *ProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRequest.ProtoReflect.Descriptor instead.
func (*ProcessRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{104}
}

func (x *ProcessRequest) GetRecord() string {
	if x != nil {
		return x.Record
	}
	return ""
}

type ProcessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcessResponse) Reset() {
	*x = ProcessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessResponse) ProtoMessage() {}

func (x *ProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessResponse.ProtoReflect.Descriptor instead.
func (*ProcessResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{105}
}

type ProcessRedoRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcessRedoRecordRequest) Reset() {
	*x = ProcessRedoRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessRedoRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRedoRecordRequest) ProtoMessage() {}

func (x *ProcessRedoRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRedoRecordRequest.ProtoReflect.Descriptor instead.
func (*ProcessRedoRecordRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{106}
}

type ProcessRedoRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ProcessRedoRecordResponse) Reset() {
	*x = ProcessRedoRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessRedoRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRedoRecordResponse) ProtoMessage() {}

func (x *ProcessRedoRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRedoRecordResponse.ProtoReflect.Descriptor instead.
func (*ProcessRedoRecordResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{107}
}

func (x *ProcessRedoRecordResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ProcessRedoRecordWithInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags int64 `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ProcessRedoRecordWithInfoRequest) Reset() {
	*x = ProcessRedoRecordWithInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessRedoRecordWithInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRedoRecordWithInfoRequest) ProtoMessage() {}

func (x *ProcessRedoRecordWithInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRedoRecordWithInfoRequest.ProtoReflect.Descriptor instead.
func (*ProcessRedoRecordWithInfoRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{108}
}

func (x *ProcessRedoRecordWithInfoRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ProcessRedoRecordWithInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	WithInfo string `protobuf:"bytes,2,opt,name=withInfo,proto3" json:"withInfo,omitempty"`
}

func (x *ProcessRedoRecordWithInfoResponse) Reset() {
	*x = ProcessRedoRecordWithInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessRedoRecordWithInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRedoRecordWithInfoResponse) ProtoMessage() {}

func (x *ProcessRedoRecordWithInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRedoRecordWithInfoResponse.ProtoReflect.Descriptor instead.
func (*ProcessRedoRecordWithInfoResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{109}
}

func (x *ProcessRedoRecordWithInfoResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ProcessRedoRecordWithInfoResponse) GetWithInfo() string {
	if x != nil {
		return x.WithInfo
	}
	return ""
}

type ProcessWithInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record string `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	Flags  int64  `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ProcessWithInfoRequest) Reset() {
	*x = ProcessWithInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessWithInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessWithInfoRequest) ProtoMessage() {}

func (x *ProcessWithInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessWithInfoRequest.ProtoReflect.Descriptor instead.
func (*ProcessWithInfoRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{110}
}

func (x *ProcessWithInfoRequest) GetRecord() string {
	if x != nil {
		return x.Record
	}
	return ""
}

func (x *ProcessWithInfoRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ProcessWithInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ProcessWithInfoResponse) Reset() {
	*x = ProcessWithInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessWithInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessWithInfoResponse) ProtoMessage() {}

func (x *ProcessWithInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessWithInfoResponse.ProtoReflect.Descriptor instead.
func (*ProcessWithInfoResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{111}
}

func (x *ProcessWithInfoResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ProcessWithResponseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record string `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *ProcessWithResponseRequest) Reset() {
	*x = ProcessWithResponseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessWithResponseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessWithResponseRequest) ProtoMessage() {}

func (x *ProcessWithResponseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessWithResponseRequest.ProtoReflect.Descriptor instead.
func (*ProcessWithResponseRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{112}
}

func (x *ProcessWithResponseRequest) GetRecord() string {
	if x != nil {
		return x.Record
	}
	return ""
}

type ProcessWithResponseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ProcessWithResponseResponse) Reset() {
	*x = ProcessWithResponseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessWithResponseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessWithResponseResponse) ProtoMessage() {}

func (x *ProcessWithResponseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessWithResponseResponse.ProtoReflect.Descriptor instead.
func (*ProcessWithResponseResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{113}
}

func (x *ProcessWithResponseResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ProcessWithResponseResizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record string `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *ProcessWithResponseResizeRequest) Reset() {
	*x = ProcessWithResponseResizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessWithResponseResizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessWithResponseResizeRequest) ProtoMessage() {}

func (x *ProcessWithResponseResizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessWithResponseResizeRequest.ProtoReflect.Descriptor instead.
func (*ProcessWithResponseResizeRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{114}
}

func (x *ProcessWithResponseResizeRequest) GetRecord() string {
	if x != nil {
		return x.Record
	}
	return ""
}

type ProcessWithResponseResizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ProcessWithResponseResizeResponse) Reset() {
	*x = ProcessWithResponseResizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessWithResponseResizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessWithResponseResizeResponse) ProtoMessage() {}

func (x *ProcessWithResponseResizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessWithResponseResizeResponse.ProtoReflect.Descriptor instead.
func (*ProcessWithResponseResizeResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{115}
}

func (x *ProcessWithResponseResizeResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type PurgeRepositoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PurgeRepositoryRequest) Reset() {
	*x = PurgeRepositoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurgeRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeRepositoryRequest) ProtoMessage() {}

func (x *PurgeRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeRepositoryRequest.ProtoReflect.Descriptor instead.
func (*PurgeRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{116}
}

type PurgeRepositoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PurgeRepositoryResponse) Reset() {
	*x = PurgeRepositoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurgeRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeRepositoryResponse) ProtoMessage() {}

func (x *PurgeRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeRepositoryResponse.ProtoReflect.Descriptor instead.
func (*PurgeRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{117}
}

type ReevaluateEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID int64 `protobuf:"varint,1,opt,name=entityID,proto3" json:"entityID,omitempty"`
	Flags    int64 `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ReevaluateEntityRequest) Reset() {
	*x = ReevaluateEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReevaluateEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReevaluateEntityRequest) ProtoMessage() {}

func (x *ReevaluateEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReevaluateEntityRequest.ProtoReflect.Descriptor instead.
func (*ReevaluateEntityRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{118}
}

func (x *ReevaluateEntityRequest) GetEntityID() int64 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

func (x *ReevaluateEntityRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ReevaluateEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReevaluateEntityResponse) Reset() {
	*x = ReevaluateEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReevaluateEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReevaluateEntityResponse) ProtoMessage() {}

func (x *ReevaluateEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReevaluateEntityResponse.ProtoReflect.Descriptor instead.
func (*ReevaluateEntityResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{119}
}

type ReevaluateEntityWithInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID int64 `protobuf:"varint,1,opt,name=entityID,proto3" json:"entityID,omitempty"`
	Flags    int64 `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ReevaluateEntityWithInfoRequest) Reset() {
	*x = ReevaluateEntityWithInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReevaluateEntityWithInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReevaluateEntityWithInfoRequest) ProtoMessage() {}

func (x *ReevaluateEntityWithInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReevaluateEntityWithInfoRequest.ProtoReflect.Descriptor instead.
func (*ReevaluateEntityWithInfoRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{120}
}

func (x *ReevaluateEntityWithInfoRequest) GetEntityID() int64 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

func (x *ReevaluateEntityWithInfoRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ReevaluateEntityWithInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ReevaluateEntityWithInfoResponse) Reset() {
	*x = ReevaluateEntityWithInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReevaluateEntityWithInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReevaluateEntityWithInfoResponse) ProtoMessage() {}

func (x *ReevaluateEntityWithInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReevaluateEntityWithInfoResponse.ProtoReflect.Descriptor instead.
func (*ReevaluateEntityWithInfoResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{121}
}

func (x *ReevaluateEntityWithInfoResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ReevaluateRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
	Flags          int64  `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ReevaluateRecordRequest) Reset() {
	*x = ReevaluateRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReevaluateRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReevaluateRecordRequest) ProtoMessage() {}

func (x *ReevaluateRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReevaluateRecordRequest.ProtoReflect.Descriptor instead.
func (*ReevaluateRecordRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{122}
}

func (x *ReevaluateRecordRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *ReevaluateRecordRequest) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *ReevaluateRecordRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ReevaluateRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReevaluateRecordResponse) Reset() {
	*x = ReevaluateRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReevaluateRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReevaluateRecordResponse) ProtoMessage() {}

func (x *ReevaluateRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReevaluateRecordResponse.ProtoReflect.Descriptor instead.
func (*ReevaluateRecordResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{123}
}

type ReevaluateRecordWithInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
	Flags          int64  `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ReevaluateRecordWithInfoRequest) Reset() {
	*x = ReevaluateRecordWithInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReevaluateRecordWithInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReevaluateRecordWithInfoRequest) ProtoMessage() {}

func (x *ReevaluateRecordWithInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReevaluateRecordWithInfoRequest.ProtoReflect.Descriptor instead.
func (*ReevaluateRecordWithInfoRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{124}
}

func (x *ReevaluateRecordWithInfoRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *ReevaluateRecordWithInfoRequest) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *ReevaluateRecordWithInfoRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ReevaluateRecordWithInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ReevaluateRecordWithInfoResponse) Reset() {
	*x = ReevaluateRecordWithInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReevaluateRecordWithInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReevaluateRecordWithInfoResponse) ProtoMessage() {}

func (x *ReevaluateRecordWithInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReevaluateRecordWithInfoResponse.ProtoReflect.Descriptor instead.
func (*ReevaluateRecordWithInfoResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{125}
}

func (x *ReevaluateRecordWithInfoResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ReinitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitConfigID int64 `protobuf:"varint,1,opt,name=initConfigID,proto3" json:"initConfigID,omitempty"`
}

func (x *ReinitRequest) Reset() {
	*x = ReinitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReinitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReinitRequest) ProtoMessage() {}

func (x *ReinitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReinitRequest.ProtoReflect.Descriptor instead.
func (*ReinitRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{126}
}

func (x *ReinitRequest) GetInitConfigID() int64 {
	if x != nil {
		return x.InitConfigID
	}
	return 0
}

type ReinitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReinitResponse) Reset() {
	*x = ReinitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReinitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReinitResponse) ProtoMessage() {}

func (x *ReinitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReinitResponse.ProtoReflect.Descriptor instead.
func (*ReinitResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{127}
}

type ReplaceRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
	JsonData       string `protobuf:"bytes,3,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
	LoadID         string `protobuf:"bytes,4,opt,name=loadID,proto3" json:"loadID,omitempty"`
}

func (x *ReplaceRecordRequest) Reset() {
	*x = ReplaceRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceRecordRequest) ProtoMessage() {}

func (x *ReplaceRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceRecordRequest.ProtoReflect.Descriptor instead.
func (*ReplaceRecordRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{128}
}

func (x *ReplaceRecordRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *ReplaceRecordRequest) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *ReplaceRecordRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *ReplaceRecordRequest) GetLoadID() string {
	if x != nil {
		return x.LoadID
	}
	return ""
}

type ReplaceRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplaceRecordResponse) Reset() {
	*x = ReplaceRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceRecordResponse) ProtoMessage() {}

func (x *ReplaceRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceRecordResponse.ProtoReflect.Descriptor instead.
func (*ReplaceRecordResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{129}
}

type ReplaceRecordWithInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
	JsonData       string `protobuf:"bytes,3,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
	LoadID         string `protobuf:"bytes,4,opt,name=loadID,proto3" json:"loadID,omitempty"`
	Flags          int64  `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ReplaceRecordWithInfoRequest) Reset() {
	*x = ReplaceRecordWithInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceRecordWithInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceRecordWithInfoRequest) ProtoMessage() {}

func (x *ReplaceRecordWithInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceRecordWithInfoRequest.ProtoReflect.Descriptor instead.
func (*ReplaceRecordWithInfoRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{130}
}

func (x *ReplaceRecordWithInfoRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *ReplaceRecordWithInfoRequest) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *ReplaceRecordWithInfoRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *ReplaceRecordWithInfoRequest) GetLoadID() string {
	if x != nil {
		return x.LoadID
	}
	return ""
}

func (x *ReplaceRecordWithInfoRequest) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ReplaceRecordWithInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ReplaceRecordWithInfoResponse) Reset() {
	*x = ReplaceRecordWithInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceRecordWithInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceRecordWithInfoResponse) ProtoMessage() {}

func (x *ReplaceRecordWithInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceRecordWithInfoResponse.ProtoReflect.Descriptor instead.
func (*ReplaceRecordWithInfoResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{131}
}

func (x *ReplaceRecordWithInfoResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type SearchByAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonData string `protobuf:"bytes,1,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
}

func (x *SearchByAttributesRequest) Reset() {
	*x = SearchByAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByAttributesRequest) ProtoMessage() {}

func (x *SearchByAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByAttributesRequest.ProtoReflect.Descriptor instead.
func (*SearchByAttributesRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{132}
}

func (x *SearchByAttributesRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

type SearchByAttributesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SearchByAttributesResponse) Reset() {
	*x = SearchByAttributesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByAttributesResponse) ProtoMessage() {}

func (x *SearchByAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByAttributesResponse.ProtoReflect.Descriptor instead.
func (*SearchByAttributesResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{133}
}

func (x *SearchByAttributesResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type SearchByAttributes_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonData string `protobuf:"bytes,1,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
	Flags    int64  `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *SearchByAttributes_V2Request) Reset() {
	*x = SearchByAttributes_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByAttributes_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByAttributes_V2Request) ProtoMessage() {}

func (x *SearchByAttributes_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByAttributes_V2Request.ProtoReflect.Descriptor instead.
func (*SearchByAttributes_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{134}
}

func (x *SearchByAttributes_V2Request) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *SearchByAttributes_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type SearchByAttributes_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SearchByAttributes_V2Response) Reset() {
	*x = SearchByAttributes_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByAttributes_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByAttributes_V2Response) ProtoMessage() {}

func (x *SearchByAttributes_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByAttributes_V2Response.ProtoReflect.Descriptor instead.
func (*SearchByAttributes_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{135}
}

func (x *SearchByAttributes_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type StatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatsRequest) Reset() {
	*x = StatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsRequest) ProtoMessage() {}

func (x *StatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsRequest.ProtoReflect.Descriptor instead.
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{136}
}

type StatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{137}
}

func (x *StatsResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type WhyEntitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID1 int64 `protobuf:"varint,1,opt,name=entityID1,proto3" json:"entityID1,omitempty"`
	EntityID2 int64 `protobuf:"varint,2,opt,name=entityID2,proto3" json:"entityID2,omitempty"`
}

func (x *WhyEntitiesRequest) Reset() {
	*x = WhyEntitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyEntitiesRequest) ProtoMessage() {}

func (x *WhyEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyEntitiesRequest.ProtoReflect.Descriptor instead.
func (*WhyEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{138}
}

func (x *WhyEntitiesRequest) GetEntityID1() int64 {
	if x != nil {
		return x.EntityID1
	}
	return 0
}

func (x *WhyEntitiesRequest) GetEntityID2() int64 {
	if x != nil {
		return x.EntityID2
	}
	return 0
}

type WhyEntitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WhyEntitiesResponse) Reset() {
	*x = WhyEntitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyEntitiesResponse) ProtoMessage() {}

func (x *WhyEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyEntitiesResponse.ProtoReflect.Descriptor instead.
func (*WhyEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{139}
}

func (x *WhyEntitiesResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type WhyEntities_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID1 int64 `protobuf:"varint,1,opt,name=entityID1,proto3" json:"entityID1,omitempty"`
	EntityID2 int64 `protobuf:"varint,2,opt,name=entityID2,proto3" json:"entityID2,omitempty"`
	Flags     int64 `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *WhyEntities_V2Request) Reset() {
	*x = WhyEntities_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyEntities_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyEntities_V2Request) ProtoMessage() {}

func (x *WhyEntities_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyEntities_V2Request.ProtoReflect.Descriptor instead.
func (*WhyEntities_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{140}
}

func (x *WhyEntities_V2Request) GetEntityID1() int64 {
	if x != nil {
		return x.EntityID1
	}
	return 0
}

func (x *WhyEntities_V2Request) GetEntityID2() int64 {
	if x != nil {
		return x.EntityID2
	}
	return 0
}

func (x *WhyEntities_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type WhyEntities_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WhyEntities_V2Response) Reset() {
	*x = WhyEntities_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyEntities_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyEntities_V2Response) ProtoMessage() {}

func (x *WhyEntities_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyEntities_V2Response.ProtoReflect.Descriptor instead.
func (*WhyEntities_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{141}
}

func (x *WhyEntities_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type WhyEntityByEntityIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID int64 `protobuf:"varint,1,opt,name=entityID,proto3" json:"entityID,omitempty"`
}

func (x *WhyEntityByEntityIDRequest) Reset() {
	*x = WhyEntityByEntityIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyEntityByEntityIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyEntityByEntityIDRequest) ProtoMessage() {}

func (x *WhyEntityByEntityIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyEntityByEntityIDRequest.ProtoReflect.Descriptor instead.
func (*WhyEntityByEntityIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{142}
}

func (x *WhyEntityByEntityIDRequest) GetEntityID() int64 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

type WhyEntityByEntityIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WhyEntityByEntityIDResponse) Reset() {
	*x = WhyEntityByEntityIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyEntityByEntityIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyEntityByEntityIDResponse) ProtoMessage() {}

func (x *WhyEntityByEntityIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyEntityByEntityIDResponse.ProtoReflect.Descriptor instead.
func (*WhyEntityByEntityIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{143}
}

func (x *WhyEntityByEntityIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type WhyEntityByEntityID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityID int64 `protobuf:"varint,1,opt,name=entityID,proto3" json:"entityID,omitempty"`
	Flags    int64 `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *WhyEntityByEntityID_V2Request) Reset() {
	*x = WhyEntityByEntityID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyEntityByEntityID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyEntityByEntityID_V2Request) ProtoMessage() {}

func (x *WhyEntityByEntityID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyEntityByEntityID_V2Request.ProtoReflect.Descriptor instead.
func (*WhyEntityByEntityID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{144}
}

func (x *WhyEntityByEntityID_V2Request) GetEntityID() int64 {
	if x != nil {
		return x.EntityID
	}
	return 0
}

func (x *WhyEntityByEntityID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type WhyEntityByEntityID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WhyEntityByEntityID_V2Response) Reset() {
	*x = WhyEntityByEntityID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyEntityByEntityID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyEntityByEntityID_V2Response) ProtoMessage() {}

func (x *WhyEntityByEntityID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyEntityByEntityID_V2Response.ProtoReflect.Descriptor instead.
func (*WhyEntityByEntityID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{145}
}

func (x *WhyEntityByEntityID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type WhyEntityByRecordIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
}

func (x *WhyEntityByRecordIDRequest) Reset() {
	*x = WhyEntityByRecordIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyEntityByRecordIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyEntityByRecordIDRequest) ProtoMessage() {}

func (x *WhyEntityByRecordIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyEntityByRecordIDRequest.ProtoReflect.Descriptor instead.
func (*WhyEntityByRecordIDRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{146}
}

func (x *WhyEntityByRecordIDRequest) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *WhyEntityByRecordIDRequest) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

type WhyEntityByRecordIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WhyEntityByRecordIDResponse) Reset() {
	*x = WhyEntityByRecordIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyEntityByRecordIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyEntityByRecordIDResponse) ProtoMessage() {}

func (x *WhyEntityByRecordIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyEntityByRecordIDResponse.ProtoReflect.Descriptor instead.
func (*WhyEntityByRecordIDResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{147}
}

func (x *WhyEntityByRecordIDResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type WhyEntityByRecordID_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode string `protobuf:"bytes,1,opt,name=dataSourceCode,proto3" json:"dataSourceCode,omitempty"`
	RecordID       string `protobuf:"bytes,2,opt,name=recordID,proto3" json:"recordID,omitempty"`
	Flags          int64  `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *WhyEntityByRecordID_V2Request) Reset() {
	*x = WhyEntityByRecordID_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyEntityByRecordID_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyEntityByRecordID_V2Request) ProtoMessage() {}

func (x *WhyEntityByRecordID_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyEntityByRecordID_V2Request.ProtoReflect.Descriptor instead.
func (*WhyEntityByRecordID_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{148}
}

func (x *WhyEntityByRecordID_V2Request) GetDataSourceCode() string {
	if x != nil {
		return x.DataSourceCode
	}
	return ""
}

func (x *WhyEntityByRecordID_V2Request) GetRecordID() string {
	if x != nil {
		return x.RecordID
	}
	return ""
}

func (x *WhyEntityByRecordID_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type WhyEntityByRecordID_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WhyEntityByRecordID_V2Response) Reset() {
	*x = WhyEntityByRecordID_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyEntityByRecordID_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyEntityByRecordID_V2Response) ProtoMessage() {}

func (x *WhyEntityByRecordID_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyEntityByRecordID_V2Response.ProtoReflect.Descriptor instead.
func (*WhyEntityByRecordID_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{149}
}

func (x *WhyEntityByRecordID_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type WhyRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode1 string `protobuf:"bytes,1,opt,name=dataSourceCode1,proto3" json:"dataSourceCode1,omitempty"`
	RecordID1       string `protobuf:"bytes,2,opt,name=recordID1,proto3" json:"recordID1,omitempty"`
	DataSourceCode2 string `protobuf:"bytes,3,opt,name=dataSourceCode2,proto3" json:"dataSourceCode2,omitempty"`
	RecordID2       string `protobuf:"bytes,4,opt,name=recordID2,proto3" json:"recordID2,omitempty"`
}

func (x *WhyRecordsRequest) Reset() {
	*x = WhyRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyRecordsRequest) ProtoMessage() {}

func (x *WhyRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyRecordsRequest.ProtoReflect.Descriptor instead.
func (*WhyRecordsRequest) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{150}
}

func (x *WhyRecordsRequest) GetDataSourceCode1() string {
	if x != nil {
		return x.DataSourceCode1
	}
	return ""
}

func (x *WhyRecordsRequest) GetRecordID1() string {
	if x != nil {
		return x.RecordID1
	}
	return ""
}

func (x *WhyRecordsRequest) GetDataSourceCode2() string {
	if x != nil {
		return x.DataSourceCode2
	}
	return ""
}

func (x *WhyRecordsRequest) GetRecordID2() string {
	if x != nil {
		return x.RecordID2
	}
	return ""
}

type WhyRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WhyRecordsResponse) Reset() {
	*x = WhyRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyRecordsResponse) ProtoMessage() {}

func (x *WhyRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyRecordsResponse.ProtoReflect.Descriptor instead.
func (*WhyRecordsResponse) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{151}
}

func (x *WhyRecordsResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type WhyRecords_V2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSourceCode1 string `protobuf:"bytes,1,opt,name=dataSourceCode1,proto3" json:"dataSourceCode1,omitempty"`
	RecordID1       string `protobuf:"bytes,2,opt,name=recordID1,proto3" json:"recordID1,omitempty"`
	DataSourceCode2 string `protobuf:"bytes,3,opt,name=dataSourceCode2,proto3" json:"dataSourceCode2,omitempty"`
	RecordID2       string `protobuf:"bytes,4,opt,name=recordID2,proto3" json:"recordID2,omitempty"`
	Flags           int64  `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *WhyRecords_V2Request) Reset() {
	*x = WhyRecords_V2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyRecords_V2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyRecords_V2Request) ProtoMessage() {}

func (x *WhyRecords_V2Request) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyRecords_V2Request.ProtoReflect.Descriptor instead.
func (*WhyRecords_V2Request) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{152}
}

func (x *WhyRecords_V2Request) GetDataSourceCode1() string {
	if x != nil {
		return x.DataSourceCode1
	}
	return ""
}

func (x *WhyRecords_V2Request) GetRecordID1() string {
	if x != nil {
		return x.RecordID1
	}
	return ""
}

func (x *WhyRecords_V2Request) GetDataSourceCode2() string {
	if x != nil {
		return x.DataSourceCode2
	}
	return ""
}

func (x *WhyRecords_V2Request) GetRecordID2() string {
	if x != nil {
		return x.RecordID2
	}
	return ""
}

func (x *WhyRecords_V2Request) GetFlags() int64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type WhyRecords_V2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WhyRecords_V2Response) Reset() {
	*x = WhyRecords_V2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_g2engine_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhyRecords_V2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhyRecords_V2Response) ProtoMessage() {}

func (x *WhyRecords_V2Response) ProtoReflect() protoreflect.Message {
	mi := &file_g2engine_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhyRecords_V2Response.ProtoReflect.Descriptor instead.
func (*WhyRecords_V2Response) Descriptor() ([]byte, []int) {
	return file_g2engine_proto_rawDescGZIP(), []int{153}
}

func (x *WhyRecords_V2Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_g2engine_proto protoreflect.FileDescriptor

var file_g2engine_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x17, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x22, 0x1b,
	0x0a, 0x19, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x18,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x33, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x2c,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x67,
	0x0a, 0x2d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x22, 0x82, 0x01, 0x0a, 0x24, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x25,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x56, 0x0a,
	0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4c, 0x61, 0x73,
	0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3c, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x15, 0x0a,
	0x13, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x64,
	0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x32, 0x0a, 0x18, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x71, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8f,
	0x01, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x22, 0x36, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a,
	0x13, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x14, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x1f, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x22, 0x5a, 0x0a,
	0x1c, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x53, 0x56, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x73, 0x76, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x73, 0x76, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x37, 0x0a, 0x1d, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x53, 0x56, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x35, 0x0a, 0x1d, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4a, 0x53, 0x4f, 0x4e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x38, 0x0a, 0x1e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x3a, 0x0a, 0x10, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4e, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22,
	0x2b, 0x0a, 0x11, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5c, 0x0a, 0x28,
	0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x43, 0x0a, 0x29, 0x46, 0x69,
	0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x84, 0x01, 0x0a, 0x28, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x43, 0x0a, 0x29, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x1c,
	0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x79, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x44, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x1d, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbf, 0x01,
	0x0a, 0x1f, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x79, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x44, 0x65, 0x67, 0x72, 0x65,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4f, 0x75,
	0x74, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61,
	0x78, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22,
	0x3a, 0x0a, 0x20, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x1c,
	0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x44, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x1d, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbf, 0x01,
	0x0a, 0x1f, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x44, 0x65, 0x67, 0x72, 0x65,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4f, 0x75,
	0x74, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61,
	0x78, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22,
	0x3a, 0x0a, 0x20, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x75, 0x0a, 0x19, 0x46,
	0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x44, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x22, 0x34, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x42, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x1c, 0x46, 0x69, 0x6e,
	0x64, 0x50, 0x61, 0x74, 0x68, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f,
	0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67,
	0x72, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x37, 0x0a, 0x1d, 0x46, 0x69, 0x6e,
	0x64, 0x50, 0x61, 0x74, 0x68, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f,
	0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x42,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x31, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x32, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x32,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x22, 0x34,
	0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xe2, 0x01, 0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x31, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x31, 0x12, 0x28, 0x0a,
	0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x44, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x44, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67,
	0x72, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x37, 0x0a, 0x1d, 0x46, 0x69, 0x6e,
	0x64, 0x50, 0x61, 0x74, 0x68, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f,
	0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x22, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x45,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67,
	0x72, 0x65, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22,
	0x3d, 0x0a, 0x23, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc3,
	0x01, 0x0a, 0x25, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56,
	0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x44, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x22, 0x40, 0x0a, 0x26, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68,
	0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xfc, 0x01, 0x0a, 0x22, 0x46, 0x69, 0x6e, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x44, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x44, 0x31, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x32, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x32, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x3d, 0x0a, 0x23, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x95, 0x02, 0x0a, 0x25, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x44, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x31, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x32, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x32, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x40, 0x0a, 0x26,
	0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e,
	0x67, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd6,
	0x01, 0x0a, 0x28, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65,
	0x67, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44,
	0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x44, 0x73, 0x72,
	0x63, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x44, 0x73, 0x72, 0x63, 0x73, 0x22, 0x43, 0x0a, 0x29, 0x46, 0x69, 0x6e, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xef, 0x01, 0x0a,
	0x2b, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44,
	0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78,
	0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x44, 0x73,
	0x72, 0x63, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x44, 0x73, 0x72, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x46,
	0x0a, 0x2c, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa8, 0x02, 0x0a, 0x28, 0x46, 0x69, 0x6e, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x31, 0x12, 0x28, 0x0a, 0x0f, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x44, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x44, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67, 0x72, 0x65,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x44, 0x73, 0x72, 0x63, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x44, 0x73, 0x72, 0x63,
	0x73, 0x22, 0x43, 0x0a, 0x29, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc1, 0x02, 0x0a, 0x2b, 0x46, 0x69, 0x6e, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x31,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x31, 0x12, 0x28,
	0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x44, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x67,
	0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65,
	0x67, 0x72, 0x65, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x44, 0x73, 0x72, 0x63, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x44,
	0x73, 0x72, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x46, 0x0a, 0x2c, 0x46, 0x69,
	0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f,
	0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x33,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x38, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x22, 0x35, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x51, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x38, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56,
	0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x60, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x44, 0x22, 0x35, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x79, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x38, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1d,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x56, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x22, 0x2b, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6f, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x2e, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x26, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x25,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x43, 0x0a,
	0x21, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x3c, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x5c, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56,
	0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x3f,
	0x0a, 0x25, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x38, 0x0a, 0x1a, 0x48, 0x6f, 0x77, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x22, 0x35, 0x0a, 0x1b, 0x48, 0x6f, 0x77,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x51, 0x0a, 0x1d, 0x48, 0x6f, 0x77, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x22, 0x38, 0x0a, 0x1e, 0x48, 0x6f, 0x77, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x73, 0x0a,
	0x0b, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6e, 0x69, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x65,
	0x72, 0x62, 0x6f, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x22, 0x0e, 0x0a, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x17, 0x49, 0x6e, 0x69, 0x74, 0x57, 0x69, 0x74, 0x68, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44,
	0x12, 0x26, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73,
	0x65, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x22, 0x1a, 0x0a, 0x18, 0x49, 0x6e, 0x69, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x50, 0x72,
	0x69, 0x6d, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x28, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a,
	0x0a, 0x18, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x19, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x38, 0x0a, 0x20, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x57, 0x0a, 0x21, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x46, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x31, 0x0a, 0x17, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a,
	0x1a, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x22, 0x35, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x69,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x0a, 0x20, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x3b, 0x0a, 0x21, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x50, 0x75, 0x72, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x19, 0x0a,
	0x17, 0x50, 0x75, 0x72, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x17, 0x52, 0x65, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x65, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x53, 0x0a, 0x1f, 0x52, 0x65, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x3a, 0x0a, 0x20, 0x52, 0x65, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x73, 0x0a, 0x17, 0x52, 0x65, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x65, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x7b, 0x0a, 0x1f, 0x52, 0x65, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x22, 0x3a, 0x0a, 0x20, 0x52, 0x65, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x33, 0x0a, 0x0d,
	0x52, 0x65, 0x69, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x44, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x69, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x44, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xac, 0x01,
	0x0a, 0x1c, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x37, 0x0a, 0x1d,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x37, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42,
	0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x34,
	0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x50, 0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x37, 0x0a, 0x1d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x56, 0x32, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x0e, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x27, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x50, 0x0a, 0x12, 0x57, 0x68, 0x79, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x31, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x32, 0x22, 0x2d, 0x0a, 0x13, 0x57, 0x68,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x69, 0x0a, 0x15, 0x57, 0x68, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x31,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x32, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x32, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x38, 0x0a, 0x1a, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44,
	0x22, 0x35, 0x0a, 0x1b, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x51, 0x0a, 0x1d, 0x57, 0x68, 0x79, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56,
	0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x38, 0x0a, 0x1e, 0x57, 0x68,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x60, 0x0a, 0x1a, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x22, 0x35, 0x0a, 0x1b, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x79, 0x0a,
	0x1d, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x38, 0x0a, 0x1e, 0x57, 0x68, 0x79, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f,
	0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x11, 0x57, 0x68, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x31,
	0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x32, 0x22, 0x2c, 0x0a, 0x12, 0x57, 0x68, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x14, 0x57, 0x68, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x31, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x32, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x32, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x32, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x2f, 0x0a, 0x15, 0x57, 0x68, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xcc, 0x3e, 0x0a, 0x0c, 0x47, 0x32, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x12, 0x55, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e,
	0x0a, 0x11, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9a,
	0x01, 0x0a, 0x25, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x36, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74,
	0x68, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x1d,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x2e, 0x2e,
	0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x1c, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61,
	0x0a, 0x12, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x32, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x1c, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5b, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x21, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x2e, 0x67,
	0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x32,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67,
	0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x12, 0x18, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x32,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x17, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x44, 0x12, 0x28, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x15, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x53, 0x56, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x53, 0x56, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67,
	0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x53,
	0x56, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x27, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x4a, 0x53, 0x4f, 0x4e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x32, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4a, 0x53, 0x4f, 0x4e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4e,
	0x65, 0x78, 0x74, 0x12, 0x1a, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e,
	0x01, 0x0a, 0x21, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x12, 0x32, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x8e, 0x01, 0x0a, 0x21, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x32, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x32, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6a, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x67, 0x32, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x18,
	0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x79, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x12, 0x29, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6a, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x67, 0x32, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a,
	0x18, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x12, 0x29, 0x2e, 0x67, 0x32, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x61, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x42, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x42, 0x79, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x12, 0x26,
	0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61,
	0x74, 0x68, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x61, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x42, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x42, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67,
	0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68,
	0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68,
	0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x12, 0x26, 0x2e,
	0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x7c, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12,
	0x2c, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85,
	0x01, 0x0a, 0x1e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56,
	0x32, 0x12, 0x2f, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x42,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61,
	0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x2c, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69,
	0x6e, 0x67, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x1e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x12, 0x2f, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56,
	0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f,
	0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a,
	0x21, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x44, 0x12, 0x32, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x97, 0x01,
	0x0a, 0x24, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x12, 0x35, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x21, 0x46, 0x69, 0x6e, 0x64,
	0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x32, 0x2e,
	0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x24, 0x46, 0x69, 0x6e,
	0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56,
	0x32, 0x12, 0x35, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56,
	0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x12, 0x22, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x32,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x67, 0x32, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f,
	0x56, 0x32, 0x12, 0x27, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x32,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x24,
	0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x12, 0x27, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f,
	0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x25, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x32,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x56, 0x32, 0x12, 0x1d, 0x2e, 0x67, 0x32, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x32, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x56,
	0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x2e, 0x67,
	0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x6f, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67,
	0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x6f, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x82, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2e, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x44, 0x12, 0x2b, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x82, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56,
	0x32, 0x12, 0x2e, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x48, 0x6f, 0x77, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x67, 0x32,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x48, 0x6f, 0x77, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x48, 0x6f, 0x77,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x16, 0x48, 0x6f,
	0x77, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x44, 0x5f, 0x56, 0x32, 0x12, 0x27, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x48, 0x6f, 0x77, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x48, 0x6f, 0x77, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x69,
	0x74, 0x12, 0x15, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x49, 0x6e, 0x69, 0x74, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x12, 0x21, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x32, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x1c,
	0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67,
	0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5e, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x64, 0x6f, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x76, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x64, 0x6f, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x2e, 0x67,
	0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x64, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x64, 0x6f, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e, 0x67, 0x32, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67,
	0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x64, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x0f, 0x50, 0x75, 0x72, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x20, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x75,
	0x72, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x50, 0x75, 0x72, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x52, 0x65, 0x65,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x21, 0x2e,
	0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x65, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x18, 0x52, 0x65, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x29, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65,
	0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x65, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x52,
	0x65, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x21, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x65, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65,
	0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x18, 0x52, 0x65, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x52, 0x65, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x65, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x06, 0x52, 0x65, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x17, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x52, 0x65, 0x69, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x69, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x2e,
	0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6a, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x67, 0x32, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x12,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x23, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6a, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x56, 0x32, 0x12, 0x26, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x56,
	0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67,
	0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x57, 0x68, 0x79, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x5f, 0x56, 0x32, 0x12, 0x1f, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x56,
	0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f,
	0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13,
	0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x57,
	0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x32, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6d, 0x0a, 0x16, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x12, 0x27, 0x2e, 0x67,
	0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x64, 0x0a, 0x13, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x16, 0x57, 0x68, 0x79, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56,
	0x32, 0x12, 0x27, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x57, 0x68, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44,
	0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x32, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x57, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x57, 0x68, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x1b, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x57, 0x68, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x57, 0x68, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x52, 0x0a, 0x0d, 0x57, 0x68, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x5f,
	0x56, 0x32, 0x12, 0x1e, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x57, 0x68,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x57, 0x68,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x62, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x6e,
	0x7a, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x32, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x32, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x42, 0x0d, 0x47, 0x32,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x6e, 0x7a, 0x69, 0x6e,
	0x67, 0x2f, 0x67, 0x32, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2d, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x67, 0x32, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_g2engine_proto_rawDescOnce sync.Once
	file_g2engine_proto_rawDescData = file_g2engine_proto_rawDesc
)

func file_g2engine_proto_rawDescGZIP() []byte {
	file_g2engine_proto_rawDescOnce.Do(func() {
		file_g2engine_proto_rawDescData = protoimpl.X.CompressGZIP(file_g2engine_proto_rawDescData)
	})
	return file_g2engine_proto_rawDescData
}

var file_g2engine_proto_msgTypes = make([]protoimpl.MessageInfo, 154)
var file_g2engine_proto_goTypes = []interface{}{
	(*AddRecordRequestRequest)(nil),                       // 0: g2engine.AddRecordRequestRequest
	(*AddRecordResponseResponse)(nil),                     // 1: g2engine.AddRecordResponseResponse
	(*AddRecordWithInfoRequest)(nil),                      // 2: g2engine.AddRecordWithInfoRequest
	(*AddRecordWithInfoResponse)(nil),                     // 3: g2engine.AddRecordWithInfoResponse
	(*AddRecordWithInfoWithReturnedRecordIDRequest)(nil),  // 4: g2engine.AddRecordWithInfoWithReturnedRecordIDRequest
	(*AddRecordWithInfoWithReturnedRecordIDResponse)(nil), // 5: g2engine.AddRecordWithInfoWithReturnedRecordIDResponse
	(*AddRecordWithReturnedRecordIDRequest)(nil),          // 6: g2engine.AddRecordWithReturnedRecordIDRequest
	(*AddRecordWithReturnedRecordIDResponse)(nil),         // 7: g2engine.AddRecordWithReturnedRecordIDResponse
	(*CheckRecordRequest)(nil),                            // 8: g2engine.CheckRecordRequest
	(*CheckRecordResponse)(nil),                           // 9: g2engine.CheckRecordResponse
	(*ClearLastExceptionRequest)(nil),                     // 10: g2engine.ClearLastExceptionRequest
	(*ClearLastExceptionResponse)(nil),                    // 11: g2engine.ClearLastExceptionResponse
	(*CloseExportRequest)(nil),                            // 12: g2engine.CloseExportRequest
	(*CloseExportResponse)(nil),                           // 13: g2engine.CloseExportResponse
	(*CountRedoRecordsRequest)(nil),                       // 14: g2engine.CountRedoRecordsRequest
	(*CountRedoRecordsResponse)(nil),                      // 15: g2engine.CountRedoRecordsResponse
	(*DeleteRecordRequest)(nil),                           // 16: g2engine.DeleteRecordRequest
	(*DeleteRecordResponse)(nil),                          // 17: g2engine.DeleteRecordResponse
	(*DeleteRecordWithInfoRequest)(nil),                   // 18: g2engine.DeleteRecordWithInfoRequest
	(*DeleteRecordWithInfoResponse)(nil),                  // 19: g2engine.DeleteRecordWithInfoResponse
	(*DestroyRequest)(nil),                                // 20: g2engine.DestroyRequest
	(*DestroyResponse)(nil),                               // 21: g2engine.DestroyResponse
	(*ExportConfigRequest)(nil),                           // 22: g2engine.ExportConfigRequest
	(*ExportConfigResponse)(nil),                          // 23: g2engine.ExportConfigResponse
	(*ExportConfigAndConfigIDRequest)(nil),                // 24: g2engine.ExportConfigAndConfigIDRequest
	(*ExportConfigAndConfigIDResponse)(nil),               // 25: g2engine.ExportConfigAndConfigIDResponse
	(*ExportCSVEntityReportRequest)(nil),                  // 26: g2engine.ExportCSVEntityReportRequest
	(*ExportCSVEntityReportResponse)(nil),                 // 27: g2engine.ExportCSVEntityReportResponse
	(*ExportJSONEntityReportRequest)(nil),                 // 28: g2engine.ExportJSONEntityReportRequest
	(*ExportJSONEntityReportResponse)(nil),                // 29: g2engine.ExportJSONEntityReportResponse
	(*FetchNextRequest)(nil),                              // 30: g2engine.FetchNextRequest
	(*FetchNextResponse)(nil),                             // 31: g2engine.FetchNextResponse
	(*FindInterestingEntitiesByEntityIDRequest)(nil),      // 32: g2engine.FindInterestingEntitiesByEntityIDRequest
	(*FindInterestingEntitiesByEntityIDResponse)(nil),     // 33: g2engine.FindInterestingEntitiesByEntityIDResponse
	(*FindInterestingEntitiesByRecordIDRequest)(nil),      // 34: g2engine.FindInterestingEntitiesByRecordIDRequest
	(*FindInterestingEntitiesByRecordIDResponse)(nil),     // 35: g2engine.FindInterestingEntitiesByRecordIDResponse
	(*FindNetworkByEntityIDRequest)(nil),                  // 36: g2engine.FindNetworkByEntityIDRequest
	(*FindNetworkByEntityIDResponse)(nil),                 // 37: g2engine.FindNetworkByEntityIDResponse
	(*FindNetworkByEntityID_V2Request)(nil),               // 38: g2engine.FindNetworkByEntityID_V2Request
	(*FindNetworkByEntityID_V2Response)(nil),              // 39: g2engine.FindNetworkByEntityID_V2Response
	(*FindNetworkByRecordIDRequest)(nil),                  // 40: g2engine.FindNetworkByRecordIDRequest
	(*FindNetworkByRecordIDResponse)(nil),                 // 41: g2engine.FindNetworkByRecordIDResponse
	(*FindNetworkByRecordID_V2Request)(nil),               // 42: g2engine.FindNetworkByRecordID_V2Request
	(*FindNetworkByRecordID_V2Response)(nil),              // 43: g2engine.FindNetworkByRecordID_V2Response
	(*FindPathByEntityIDRequest)(nil),                     // 44: g2engine.FindPathByEntityIDRequest
	(*FindPathByEntityIDResponse)(nil),                    // 45: g2engine.FindPathByEntityIDResponse
	(*FindPathByEntityID_V2Request)(nil),                  // 46: g2engine.FindPathByEntityID_V2Request
	(*FindPathByEntityID_V2Response)(nil),                 // 47: g2engine.FindPathByEntityID_V2Response
	(*FindPathByRecordIDRequest)(nil),                     // 48: g2engine.FindPathByRecordIDRequest
	(*FindPathByRecordIDResponse)(nil),                    // 49: g2engine.FindPathByRecordIDResponse
	(*FindPathByRecordID_V2Request)(nil),                  // 50: g2engine.FindPathByRecordID_V2Request
	(*FindPathByRecordID_V2Response)(nil),                 // 51: g2engine.FindPathByRecordID_V2Response
	(*FindPathExcludingByEntityIDRequest)(nil),            // 52: g2engine.FindPathExcludingByEntityIDRequest
	(*FindPathExcludingByEntityIDResponse)(nil),           // 53: g2engine.FindPathExcludingByEntityIDResponse
	(*FindPathExcludingByEntityID_V2Request)(nil),         // 54: g2engine.FindPathExcludingByEntityID_V2Request
	(*FindPathExcludingByEntityID_V2Response)(nil),        // 55: g2engine.FindPathExcludingByEntityID_V2Response
	(*FindPathExcludingByRecordIDRequest)(nil),            // 56: g2engine.FindPathExcludingByRecordIDRequest
	(*FindPathExcludingByRecordIDResponse)(nil),           // 57: g2engine.FindPathExcludingByRecordIDResponse
	(*FindPathExcludingByRecordID_V2Request)(nil),         // 58: g2engine.FindPathExcludingByRecordID_V2Request
	(*FindPathExcludingByRecordID_V2Response)(nil),        // 59: g2engine.FindPathExcludingByRecordID_V2Response
	(*FindPathIncludingSourceByEntityIDRequest)(nil),      // 60: g2engine.FindPathIncludingSourceByEntityIDRequest
	(*FindPathIncludingSourceByEntityIDResponse)(nil),     // 61: g2engine.FindPathIncludingSourceByEntityIDResponse
	(*FindPathIncludingSourceByEntityID_V2Request)(nil),   // 62: g2engine.FindPathIncludingSourceByEntityID_V2Request
	(*FindPathIncludingSourceByEntityID_V2Response)(nil),  // 63: g2engine.FindPathIncludingSourceByEntityID_V2Response
	(*FindPathIncludingSourceByRecordIDRequest)(nil),      // 64: g2engine.FindPathIncludingSourceByRecordIDRequest
	(*FindPathIncludingSourceByRecordIDResponse)(nil),     // 65: g2engine.FindPathIncludingSourceByRecordIDResponse
	(*FindPathIncludingSourceByRecordID_V2Request)(nil),   // 66: g2engine.FindPathIncludingSourceByRecordID_V2Request
	(*FindPathIncludingSourceByRecordID_V2Response)(nil),  // 67: g2engine.FindPathIncludingSourceByRecordID_V2Response
	(*GetActiveConfigIDRequest)(nil),                      // 68: g2engine.GetActiveConfigIDRequest
	(*GetActiveConfigIDResponse)(nil),                     // 69: g2engine.GetActiveConfigIDResponse
	(*GetEntityByEntityIDRequest)(nil),                    // 70: g2engine.GetEntityByEntityIDRequest
	(*GetEntityByEntityIDResponse)(nil),                   // 71: g2engine.GetEntityByEntityIDResponse
	(*GetEntityByEntityID_V2Request)(nil),                 // 72: g2engine.GetEntityByEntityID_V2Request
	(*GetEntityByEntityID_V2Response)(nil),                // 73: g2engine.GetEntityByEntityID_V2Response
	(*GetEntityByRecordIDRequest)(nil),                    // 74: g2engine.GetEntityByRecordIDRequest
	(*GetEntityByRecordIDResponse)(nil),                   // 75: g2engine.GetEntityByRecordIDResponse
	(*GetEntityByRecordID_V2Request)(nil),                 // 76: g2engine.GetEntityByRecordID_V2Request
	(*GetEntityByRecordID_V2Response)(nil),                // 77: g2engine.GetEntityByRecordID_V2Response
	(*GetLastExceptionRequest)(nil),                       // 78: g2engine.GetLastExceptionRequest
	(*GetLastExceptionResponse)(nil),                      // 79: g2engine.GetLastExceptionResponse
	(*GetLastExceptionCodeRequest)(nil),                   // 80: g2engine.GetLastExceptionCodeRequest
	(*GetLastExceptionCodeResponse)(nil),                  // 81: g2engine.GetLastExceptionCodeResponse
	(*GetRecordRequest)(nil),                              // 82: g2engine.GetRecordRequest
	(*GetRecordResponse)(nil),                             // 83: g2engine.GetRecordResponse
	(*GetRecord_V2Request)(nil),                           // 84: g2engine.GetRecord_V2Request
	(*GetRecord_V2Response)(nil),                          // 85: g2engine.GetRecord_V2Response
	(*GetRedoRecordRequest)(nil),                          // 86: g2engine.GetRedoRecordRequest
	(*GetRedoRecordResponse)(nil),                         // 87: g2engine.GetRedoRecordResponse
	(*GetRepositoryLastModifiedTimeRequest)(nil),          // 88: g2engine.GetRepositoryLastModifiedTimeRequest
	(*GetRepositoryLastModifiedTimeResponse)(nil),         // 89: g2engine.GetRepositoryLastModifiedTimeResponse
	(*GetVirtualEntityByRecordIDRequest)(nil),             // 90: g2engine.GetVirtualEntityByRecordIDRequest
	(*GetVirtualEntityByRecordIDResponse)(nil),            // 91: g2engine.GetVirtualEntityByRecordIDResponse
	(*GetVirtualEntityByRecordID_V2Request)(nil),          // 92: g2engine.GetVirtualEntityByRecordID_V2Request
	(*GetVirtualEntityByRecordID_V2Response)(nil),         // 93: g2engine.GetVirtualEntityByRecordID_V2Response
	(*HowEntityByEntityIDRequest)(nil),                    // 94: g2engine.HowEntityByEntityIDRequest
	(*HowEntityByEntityIDResponse)(nil),                   // 95: g2engine.HowEntityByEntityIDResponse
	(*HowEntityByEntityID_V2Request)(nil),                 // 96: g2engine.HowEntityByEntityID_V2Request
	(*HowEntityByEntityID_V2Response)(nil),                // 97: g2engine.HowEntityByEntityID_V2Response
	(*InitRequest)(nil),                                   // 98: g2engine.InitRequest
	(*InitResponse)(nil),                                  // 99: g2engine.InitResponse
	(*InitWithConfigIDRequest)(nil),                       // 100: g2engine.InitWithConfigIDRequest
	(*InitWithConfigIDResponse)(nil),                      // 101: g2engine.InitWithConfigIDResponse
	(*PrimeEngineRequest)(nil),                            // 102: g2engine.PrimeEngineRequest
	(*PrimeEngineResponse)(nil),                           // 103: g2engine.PrimeEngineResponse
	(*ProcessRequest)(nil),                                // 104: g2engine.ProcessRequest
	(*ProcessResponse)(nil),                               // 105: g2engine.ProcessResponse
	(*ProcessRedoRecordRequest)(nil),                      // 106: g2engine.ProcessRedoRecordRequest
	(*ProcessRedoRecordResponse)(nil),                     // 107: g2engine.ProcessRedoRecordResponse
	(*ProcessRedoRecordWithInfoRequest)(nil),              // 108: g2engine.ProcessRedoRecordWithInfoRequest
	(*ProcessRedoRecordWithInfoResponse)(nil),             // 109: g2engine.ProcessRedoRecordWithInfoResponse
	(*ProcessWithInfoRequest)(nil),                        // 110: g2engine.ProcessWithInfoRequest
	(*ProcessWithInfoResponse)(nil),                       // 111: g2engine.ProcessWithInfoResponse
	(*ProcessWithResponseRequest)(nil),                    // 112: g2engine.ProcessWithResponseRequest
	(*ProcessWithResponseResponse)(nil),                   // 113: g2engine.ProcessWithResponseResponse
	(*ProcessWithResponseResizeRequest)(nil),              // 114: g2engine.ProcessWithResponseResizeRequest
	(*ProcessWithResponseResizeResponse)(nil),             // 115: g2engine.ProcessWithResponseResizeResponse
	(*PurgeRepositoryRequest)(nil),                        // 116: g2engine.PurgeRepositoryRequest
	(*PurgeRepositoryResponse)(nil),                       // 117: g2engine.PurgeRepositoryResponse
	(*ReevaluateEntityRequest)(nil),                       // 118: g2engine.ReevaluateEntityRequest
	(*ReevaluateEntityResponse)(nil),                      // 119: g2engine.ReevaluateEntityResponse
	(*ReevaluateEntityWithInfoRequest)(nil),               // 120: g2engine.ReevaluateEntityWithInfoRequest
	(*ReevaluateEntityWithInfoResponse)(nil),              // 121: g2engine.ReevaluateEntityWithInfoResponse
	(*ReevaluateRecordRequest)(nil),                       // 122: g2engine.ReevaluateRecordRequest
	(*ReevaluateRecordResponse)(nil),                      // 123: g2engine.ReevaluateRecordResponse
	(*ReevaluateRecordWithInfoRequest)(nil),               // 124: g2engine.ReevaluateRecordWithInfoRequest
	(*ReevaluateRecordWithInfoResponse)(nil),              // 125: g2engine.ReevaluateRecordWithInfoResponse
	(*ReinitRequest)(nil),                                 // 126: g2engine.ReinitRequest
	(*ReinitResponse)(nil),                                // 127: g2engine.ReinitResponse
	(*ReplaceRecordRequest)(nil),                          // 128: g2engine.ReplaceRecordRequest
	(*ReplaceRecordResponse)(nil),                         // 129: g2engine.ReplaceRecordResponse
	(*ReplaceRecordWithInfoRequest)(nil),                  // 130: g2engine.ReplaceRecordWithInfoRequest
	(*ReplaceRecordWithInfoResponse)(nil),                 // 131: g2engine.ReplaceRecordWithInfoResponse
	(*SearchByAttributesRequest)(nil),                     // 132: g2engine.SearchByAttributesRequest
	(*SearchByAttributesResponse)(nil),                    // 133: g2engine.SearchByAttributesResponse
	(*SearchByAttributes_V2Request)(nil),                  // 134: g2engine.SearchByAttributes_V2Request
	(*SearchByAttributes_V2Response)(nil),                 // 135: g2engine.SearchByAttributes_V2Response
	(*StatsRequest)(nil),                                  // 136: g2engine.StatsRequest
	(*StatsResponse)(nil),                                 // 137: g2engine.StatsResponse
	(*WhyEntitiesRequest)(nil),                            // 138: g2engine.WhyEntitiesRequest
	(*WhyEntitiesResponse)(nil),                           // 139: g2engine.WhyEntitiesResponse
	(*WhyEntities_V2Request)(nil),                         // 140: g2engine.WhyEntities_V2Request
	(*WhyEntities_V2Response)(nil),                        // 141: g2engine.WhyEntities_V2Response
	(*WhyEntityByEntityIDRequest)(nil),                    // 142: g2engine.WhyEntityByEntityIDRequest
	(*WhyEntityByEntityIDResponse)(nil),                   // 143: g2engine.WhyEntityByEntityIDResponse
	(*WhyEntityByEntityID_V2Request)(nil),                 // 144: g2engine.WhyEntityByEntityID_V2Request
	(*WhyEntityByEntityID_V2Response)(nil),                // 145: g2engine.WhyEntityByEntityID_V2Response
	(*WhyEntityByRecordIDRequest)(nil),                    // 146: g2engine.WhyEntityByRecordIDRequest
	(*WhyEntityByRecordIDResponse)(nil),                   // 147: g2engine.WhyEntityByRecordIDResponse
	(*WhyEntityByRecordID_V2Request)(nil),                 // 148: g2engine.WhyEntityByRecordID_V2Request
	(*WhyEntityByRecordID_V2Response)(nil),                // 149: g2engine.WhyEntityByRecordID_V2Response
	(*WhyRecordsRequest)(nil),                             // 150: g2engine.WhyRecordsRequest
	(*WhyRecordsResponse)(nil),                            // 151: g2engine.WhyRecordsResponse
	(*WhyRecords_V2Request)(nil),                          // 152: g2engine.WhyRecords_V2Request
	(*WhyRecords_V2Response)(nil),                         // 153: g2engine.WhyRecords_V2Response
}
var file_g2engine_proto_depIdxs = []int32{
	0,   // 0: g2engine.G2Diagnostic.AddRecord:input_type -> g2engine.AddRecordRequestRequest
	2,   // 1: g2engine.G2Diagnostic.AddRecordWithInfo:input_type -> g2engine.AddRecordWithInfoRequest
	4,   // 2: g2engine.G2Diagnostic.AddRecordWithInfoWithReturnedRecordID:input_type -> g2engine.AddRecordWithInfoWithReturnedRecordIDRequest
	6,   // 3: g2engine.G2Diagnostic.AddRecordWithReturnedRecordID:input_type -> g2engine.AddRecordWithReturnedRecordIDRequest
	8,   // 4: g2engine.G2Diagnostic.CheckRecord:input_type -> g2engine.CheckRecordRequest
	10,  // 5: g2engine.G2Diagnostic.ClearLastException:input_type -> g2engine.ClearLastExceptionRequest
	12,  // 6: g2engine.G2Diagnostic.CloseExport:input_type -> g2engine.CloseExportRequest
	14,  // 7: g2engine.G2Diagnostic.CountRedoRecords:input_type -> g2engine.CountRedoRecordsRequest
	16,  // 8: g2engine.G2Diagnostic.DeleteRecord:input_type -> g2engine.DeleteRecordRequest
	18,  // 9: g2engine.G2Diagnostic.DeleteRecordWithInfo:input_type -> g2engine.DeleteRecordWithInfoRequest
	20,  // 10: g2engine.G2Diagnostic.Destroy:input_type -> g2engine.DestroyRequest
	22,  // 11: g2engine.G2Diagnostic.ExportConfig:input_type -> g2engine.ExportConfigRequest
	24,  // 12: g2engine.G2Diagnostic.ExportConfigAndConfigID:input_type -> g2engine.ExportConfigAndConfigIDRequest
	26,  // 13: g2engine.G2Diagnostic.ExportCSVEntityReport:input_type -> g2engine.ExportCSVEntityReportRequest
	28,  // 14: g2engine.G2Diagnostic.ExportJSONEntityReport:input_type -> g2engine.ExportJSONEntityReportRequest
	30,  // 15: g2engine.G2Diagnostic.FetchNext:input_type -> g2engine.FetchNextRequest
	32,  // 16: g2engine.G2Diagnostic.FindInterestingEntitiesByEntityID:input_type -> g2engine.FindInterestingEntitiesByEntityIDRequest
	34,  // 17: g2engine.G2Diagnostic.FindInterestingEntitiesByRecordID:input_type -> g2engine.FindInterestingEntitiesByRecordIDRequest
	36,  // 18: g2engine.G2Diagnostic.FindNetworkByEntityID:input_type -> g2engine.FindNetworkByEntityIDRequest
	38,  // 19: g2engine.G2Diagnostic.FindNetworkByEntityID_V2:input_type -> g2engine.FindNetworkByEntityID_V2Request
	40,  // 20: g2engine.G2Diagnostic.FindNetworkByRecordID:input_type -> g2engine.FindNetworkByRecordIDRequest
	42,  // 21: g2engine.G2Diagnostic.FindNetworkByRecordID_V2:input_type -> g2engine.FindNetworkByRecordID_V2Request
	44,  // 22: g2engine.G2Diagnostic.FindPathByEntityID:input_type -> g2engine.FindPathByEntityIDRequest
	46,  // 23: g2engine.G2Diagnostic.FindPathByEntityID_V2:input_type -> g2engine.FindPathByEntityID_V2Request
	48,  // 24: g2engine.G2Diagnostic.FindPathByRecordID:input_type -> g2engine.FindPathByRecordIDRequest
	50,  // 25: g2engine.G2Diagnostic.FindPathByRecordID_V2:input_type -> g2engine.FindPathByRecordID_V2Request
	52,  // 26: g2engine.G2Diagnostic.FindPathExcludingByEntityID:input_type -> g2engine.FindPathExcludingByEntityIDRequest
	54,  // 27: g2engine.G2Diagnostic.FindPathExcludingByEntityID_V2:input_type -> g2engine.FindPathExcludingByEntityID_V2Request
	56,  // 28: g2engine.G2Diagnostic.FindPathExcludingByRecordID:input_type -> g2engine.FindPathExcludingByRecordIDRequest
	58,  // 29: g2engine.G2Diagnostic.FindPathExcludingByRecordID_V2:input_type -> g2engine.FindPathExcludingByRecordID_V2Request
	60,  // 30: g2engine.G2Diagnostic.FindPathIncludingSourceByEntityID:input_type -> g2engine.FindPathIncludingSourceByEntityIDRequest
	62,  // 31: g2engine.G2Diagnostic.FindPathIncludingSourceByEntityID_V2:input_type -> g2engine.FindPathIncludingSourceByEntityID_V2Request
	64,  // 32: g2engine.G2Diagnostic.FindPathIncludingSourceByRecordID:input_type -> g2engine.FindPathIncludingSourceByRecordIDRequest
	66,  // 33: g2engine.G2Diagnostic.FindPathIncludingSourceByRecordID_V2:input_type -> g2engine.FindPathIncludingSourceByRecordID_V2Request
	68,  // 34: g2engine.G2Diagnostic.GetActiveConfigID:input_type -> g2engine.GetActiveConfigIDRequest
	70,  // 35: g2engine.G2Diagnostic.GetEntityByEntityID:input_type -> g2engine.GetEntityByEntityIDRequest
	72,  // 36: g2engine.G2Diagnostic.GetEntityByEntityID_V2:input_type -> g2engine.GetEntityByEntityID_V2Request
	74,  // 37: g2engine.G2Diagnostic.GetEntityByRecordID:input_type -> g2engine.GetEntityByRecordIDRequest
	76,  // 38: g2engine.G2Diagnostic.GetEntityByRecordID_V2:input_type -> g2engine.GetEntityByRecordID_V2Request
	78,  // 39: g2engine.G2Diagnostic.GetLastException:input_type -> g2engine.GetLastExceptionRequest
	80,  // 40: g2engine.G2Diagnostic.GetLastExceptionCode:input_type -> g2engine.GetLastExceptionCodeRequest
	82,  // 41: g2engine.G2Diagnostic.GetRecord:input_type -> g2engine.GetRecordRequest
	84,  // 42: g2engine.G2Diagnostic.GetRecord_V2:input_type -> g2engine.GetRecord_V2Request
	86,  // 43: g2engine.G2Diagnostic.GetRedoRecord:input_type -> g2engine.GetRedoRecordRequest
	88,  // 44: g2engine.G2Diagnostic.GetRepositoryLastModifiedTime:input_type -> g2engine.GetRepositoryLastModifiedTimeRequest
	90,  // 45: g2engine.G2Diagnostic.GetVirtualEntityByRecordID:input_type -> g2engine.GetVirtualEntityByRecordIDRequest
	92,  // 46: g2engine.G2Diagnostic.GetVirtualEntityByRecordID_V2:input_type -> g2engine.GetVirtualEntityByRecordID_V2Request
	94,  // 47: g2engine.G2Diagnostic.HowEntityByEntityID:input_type -> g2engine.HowEntityByEntityIDRequest
	96,  // 48: g2engine.G2Diagnostic.HowEntityByEntityID_V2:input_type -> g2engine.HowEntityByEntityID_V2Request
	98,  // 49: g2engine.G2Diagnostic.Init:input_type -> g2engine.InitRequest
	100, // 50: g2engine.G2Diagnostic.InitWithConfigID:input_type -> g2engine.InitWithConfigIDRequest
	102, // 51: g2engine.G2Diagnostic.PrimeEngine:input_type -> g2engine.PrimeEngineRequest
	104, // 52: g2engine.G2Diagnostic.Process:input_type -> g2engine.ProcessRequest
	106, // 53: g2engine.G2Diagnostic.ProcessRedoRecord:input_type -> g2engine.ProcessRedoRecordRequest
	108, // 54: g2engine.G2Diagnostic.ProcessRedoRecordWithInfo:input_type -> g2engine.ProcessRedoRecordWithInfoRequest
	110, // 55: g2engine.G2Diagnostic.ProcessWithInfo:input_type -> g2engine.ProcessWithInfoRequest
	112, // 56: g2engine.G2Diagnostic.ProcessWithResponse:input_type -> g2engine.ProcessWithResponseRequest
	114, // 57: g2engine.G2Diagnostic.ProcessWithResponseResize:input_type -> g2engine.ProcessWithResponseResizeRequest
	116, // 58: g2engine.G2Diagnostic.PurgeRepository:input_type -> g2engine.PurgeRepositoryRequest
	118, // 59: g2engine.G2Diagnostic.ReevaluateEntity:input_type -> g2engine.ReevaluateEntityRequest
	120, // 60: g2engine.G2Diagnostic.ReevaluateEntityWithInfo:input_type -> g2engine.ReevaluateEntityWithInfoRequest
	122, // 61: g2engine.G2Diagnostic.ReevaluateRecord:input_type -> g2engine.ReevaluateRecordRequest
	124, // 62: g2engine.G2Diagnostic.ReevaluateRecordWithInfo:input_type -> g2engine.ReevaluateRecordWithInfoRequest
	126, // 63: g2engine.G2Diagnostic.Reinit:input_type -> g2engine.ReinitRequest
	128, // 64: g2engine.G2Diagnostic.ReplaceRecord:input_type -> g2engine.ReplaceRecordRequest
	130, // 65: g2engine.G2Diagnostic.ReplaceRecordWithInfo:input_type -> g2engine.ReplaceRecordWithInfoRequest
	132, // 66: g2engine.G2Diagnostic.SearchByAttributes:input_type -> g2engine.SearchByAttributesRequest
	134, // 67: g2engine.G2Diagnostic.SearchByAttributes_V2:input_type -> g2engine.SearchByAttributes_V2Request
	136, // 68: g2engine.G2Diagnostic.Stats:input_type -> g2engine.StatsRequest
	138, // 69: g2engine.G2Diagnostic.WhyEntities:input_type -> g2engine.WhyEntitiesRequest
	140, // 70: g2engine.G2Diagnostic.WhyEntities_V2:input_type -> g2engine.WhyEntities_V2Request
	142, // 71: g2engine.G2Diagnostic.WhyEntityByEntityID:input_type -> g2engine.WhyEntityByEntityIDRequest
	144, // 72: g2engine.G2Diagnostic.WhyEntityByEntityID_V2:input_type -> g2engine.WhyEntityByEntityID_V2Request
	146, // 73: g2engine.G2Diagnostic.WhyEntityByRecordID:input_type -> g2engine.WhyEntityByRecordIDRequest
	148, // 74: g2engine.G2Diagnostic.WhyEntityByRecordID_V2:input_type -> g2engine.WhyEntityByRecordID_V2Request
	150, // 75: g2engine.G2Diagnostic.WhyRecords:input_type -> g2engine.WhyRecordsRequest
	152, // 76: g2engine.G2Diagnostic.WhyRecords_V2:input_type -> g2engine.WhyRecords_V2Request
	1,   // 77: g2engine.G2Diagnostic.AddRecord:output_type -> g2engine.AddRecordResponseResponse
	3,   // 78: g2engine.G2Diagnostic.AddRecordWithInfo:output_type -> g2engine.AddRecordWithInfoResponse
	5,   // 79: g2engine.G2Diagnostic.AddRecordWithInfoWithReturnedRecordID:output_type -> g2engine.AddRecordWithInfoWithReturnedRecordIDResponse
	7,   // 80: g2engine.G2Diagnostic.AddRecordWithReturnedRecordID:output_type -> g2engine.AddRecordWithReturnedRecordIDResponse
	9,   // 81: g2engine.G2Diagnostic.CheckRecord:output_type -> g2engine.CheckRecordResponse
	11,  // 82: g2engine.G2Diagnostic.ClearLastException:output_type -> g2engine.ClearLastExceptionResponse
	13,  // 83: g2engine.G2Diagnostic.CloseExport:output_type -> g2engine.CloseExportResponse
	15,  // 84: g2engine.G2Diagnostic.CountRedoRecords:output_type -> g2engine.CountRedoRecordsResponse
	17,  // 85: g2engine.G2Diagnostic.DeleteRecord:output_type -> g2engine.DeleteRecordResponse
	19,  // 86: g2engine.G2Diagnostic.DeleteRecordWithInfo:output_type -> g2engine.DeleteRecordWithInfoResponse
	21,  // 87: g2engine.G2Diagnostic.Destroy:output_type -> g2engine.DestroyResponse
	23,  // 88: g2engine.G2Diagnostic.ExportConfig:output_type -> g2engine.ExportConfigResponse
	25,  // 89: g2engine.G2Diagnostic.ExportConfigAndConfigID:output_type -> g2engine.ExportConfigAndConfigIDResponse
	27,  // 90: g2engine.G2Diagnostic.ExportCSVEntityReport:output_type -> g2engine.ExportCSVEntityReportResponse
	29,  // 91: g2engine.G2Diagnostic.ExportJSONEntityReport:output_type -> g2engine.ExportJSONEntityReportResponse
	31,  // 92: g2engine.G2Diagnostic.FetchNext:output_type -> g2engine.FetchNextResponse
	33,  // 93: g2engine.G2Diagnostic.FindInterestingEntitiesByEntityID:output_type -> g2engine.FindInterestingEntitiesByEntityIDResponse
	35,  // 94: g2engine.G2Diagnostic.FindInterestingEntitiesByRecordID:output_type -> g2engine.FindInterestingEntitiesByRecordIDResponse
	37,  // 95: g2engine.G2Diagnostic.FindNetworkByEntityID:output_type -> g2engine.FindNetworkByEntityIDResponse
	39,  // 96: g2engine.G2Diagnostic.FindNetworkByEntityID_V2:output_type -> g2engine.FindNetworkByEntityID_V2Response
	41,  // 97: g2engine.G2Diagnostic.FindNetworkByRecordID:output_type -> g2engine.FindNetworkByRecordIDResponse
	43,  // 98: g2engine.G2Diagnostic.FindNetworkByRecordID_V2:output_type -> g2engine.FindNetworkByRecordID_V2Response
	45,  // 99: g2engine.G2Diagnostic.FindPathByEntityID:output_type -> g2engine.FindPathByEntityIDResponse
	47,  // 100: g2engine.G2Diagnostic.FindPathByEntityID_V2:output_type -> g2engine.FindPathByEntityID_V2Response
	49,  // 101: g2engine.G2Diagnostic.FindPathByRecordID:output_type -> g2engine.FindPathByRecordIDResponse
	51,  // 102: g2engine.G2Diagnostic.FindPathByRecordID_V2:output_type -> g2engine.FindPathByRecordID_V2Response
	53,  // 103: g2engine.G2Diagnostic.FindPathExcludingByEntityID:output_type -> g2engine.FindPathExcludingByEntityIDResponse
	55,  // 104: g2engine.G2Diagnostic.FindPathExcludingByEntityID_V2:output_type -> g2engine.FindPathExcludingByEntityID_V2Response
	57,  // 105: g2engine.G2Diagnostic.FindPathExcludingByRecordID:output_type -> g2engine.FindPathExcludingByRecordIDResponse
	59,  // 106: g2engine.G2Diagnostic.FindPathExcludingByRecordID_V2:output_type -> g2engine.FindPathExcludingByRecordID_V2Response
	61,  // 107: g2engine.G2Diagnostic.FindPathIncludingSourceByEntityID:output_type -> g2engine.FindPathIncludingSourceByEntityIDResponse
	63,  // 108: g2engine.G2Diagnostic.FindPathIncludingSourceByEntityID_V2:output_type -> g2engine.FindPathIncludingSourceByEntityID_V2Response
	65,  // 109: g2engine.G2Diagnostic.FindPathIncludingSourceByRecordID:output_type -> g2engine.FindPathIncludingSourceByRecordIDResponse
	67,  // 110: g2engine.G2Diagnostic.FindPathIncludingSourceByRecordID_V2:output_type -> g2engine.FindPathIncludingSourceByRecordID_V2Response
	69,  // 111: g2engine.G2Diagnostic.GetActiveConfigID:output_type -> g2engine.GetActiveConfigIDResponse
	71,  // 112: g2engine.G2Diagnostic.GetEntityByEntityID:output_type -> g2engine.GetEntityByEntityIDResponse
	73,  // 113: g2engine.G2Diagnostic.GetEntityByEntityID_V2:output_type -> g2engine.GetEntityByEntityID_V2Response
	75,  // 114: g2engine.G2Diagnostic.GetEntityByRecordID:output_type -> g2engine.GetEntityByRecordIDResponse
	77,  // 115: g2engine.G2Diagnostic.GetEntityByRecordID_V2:output_type -> g2engine.GetEntityByRecordID_V2Response
	79,  // 116: g2engine.G2Diagnostic.GetLastException:output_type -> g2engine.GetLastExceptionResponse
	81,  // 117: g2engine.G2Diagnostic.GetLastExceptionCode:output_type -> g2engine.GetLastExceptionCodeResponse
	83,  // 118: g2engine.G2Diagnostic.GetRecord:output_type -> g2engine.GetRecordResponse
	85,  // 119: g2engine.G2Diagnostic.GetRecord_V2:output_type -> g2engine.GetRecord_V2Response
	87,  // 120: g2engine.G2Diagnostic.GetRedoRecord:output_type -> g2engine.GetRedoRecordResponse
	89,  // 121: g2engine.G2Diagnostic.GetRepositoryLastModifiedTime:output_type -> g2engine.GetRepositoryLastModifiedTimeResponse
	91,  // 122: g2engine.G2Diagnostic.GetVirtualEntityByRecordID:output_type -> g2engine.GetVirtualEntityByRecordIDResponse
	93,  // 123: g2engine.G2Diagnostic.GetVirtualEntityByRecordID_V2:output_type -> g2engine.GetVirtualEntityByRecordID_V2Response
	95,  // 124: g2engine.G2Diagnostic.HowEntityByEntityID:output_type -> g2engine.HowEntityByEntityIDResponse
	97,  // 125: g2engine.G2Diagnostic.HowEntityByEntityID_V2:output_type -> g2engine.HowEntityByEntityID_V2Response
	99,  // 126: g2engine.G2Diagnostic.Init:output_type -> g2engine.InitResponse
	101, // 127: g2engine.G2Diagnostic.InitWithConfigID:output_type -> g2engine.InitWithConfigIDResponse
	103, // 128: g2engine.G2Diagnostic.PrimeEngine:output_type -> g2engine.PrimeEngineResponse
	105, // 129: g2engine.G2Diagnostic.Process:output_type -> g2engine.ProcessResponse
	107, // 130: g2engine.G2Diagnostic.ProcessRedoRecord:output_type -> g2engine.ProcessRedoRecordResponse
	109, // 131: g2engine.G2Diagnostic.ProcessRedoRecordWithInfo:output_type -> g2engine.ProcessRedoRecordWithInfoResponse
	111, // 132: g2engine.G2Diagnostic.ProcessWithInfo:output_type -> g2engine.ProcessWithInfoResponse
	113, // 133: g2engine.G2Diagnostic.ProcessWithResponse:output_type -> g2engine.ProcessWithResponseResponse
	115, // 134: g2engine.G2Diagnostic.ProcessWithResponseResize:output_type -> g2engine.ProcessWithResponseResizeResponse
	117, // 135: g2engine.G2Diagnostic.PurgeRepository:output_type -> g2engine.PurgeRepositoryResponse
	119, // 136: g2engine.G2Diagnostic.ReevaluateEntity:output_type -> g2engine.ReevaluateEntityResponse
	121, // 137: g2engine.G2Diagnostic.ReevaluateEntityWithInfo:output_type -> g2engine.ReevaluateEntityWithInfoResponse
	123, // 138: g2engine.G2Diagnostic.ReevaluateRecord:output_type -> g2engine.ReevaluateRecordResponse
	125, // 139: g2engine.G2Diagnostic.ReevaluateRecordWithInfo:output_type -> g2engine.ReevaluateRecordWithInfoResponse
	127, // 140: g2engine.G2Diagnostic.Reinit:output_type -> g2engine.ReinitResponse
	129, // 141: g2engine.G2Diagnostic.ReplaceRecord:output_type -> g2engine.ReplaceRecordResponse
	131, // 142: g2engine.G2Diagnostic.ReplaceRecordWithInfo:output_type -> g2engine.ReplaceRecordWithInfoResponse
	133, // 143: g2engine.G2Diagnostic.SearchByAttributes:output_type -> g2engine.SearchByAttributesResponse
	135, // 144: g2engine.G2Diagnostic.SearchByAttributes_V2:output_type -> g2engine.SearchByAttributes_V2Response
	137, // 145: g2engine.G2Diagnostic.Stats:output_type -> g2engine.StatsResponse
	139, // 146: g2engine.G2Diagnostic.WhyEntities:output_type -> g2engine.WhyEntitiesResponse
	141, // 147: g2engine.G2Diagnostic.WhyEntities_V2:output_type -> g2engine.WhyEntities_V2Response
	143, // 148: g2engine.G2Diagnostic.WhyEntityByEntityID:output_type -> g2engine.WhyEntityByEntityIDResponse
	145, // 149: g2engine.G2Diagnostic.WhyEntityByEntityID_V2:output_type -> g2engine.WhyEntityByEntityID_V2Response
	147, // 150: g2engine.G2Diagnostic.WhyEntityByRecordID:output_type -> g2engine.WhyEntityByRecordIDResponse
	149, // 151: g2engine.G2Diagnostic.WhyEntityByRecordID_V2:output_type -> g2engine.WhyEntityByRecordID_V2Response
	151, // 152: g2engine.G2Diagnostic.WhyRecords:output_type -> g2engine.WhyRecordsResponse
	153, // 153: g2engine.G2Diagnostic.WhyRecords_V2:output_type -> g2engine.WhyRecords_V2Response
	77,  // [77:154] is the sub-list for method output_type
	0,   // [0:77] is the sub-list for method input_type
	0,   // [0:0] is the sub-list for extension type_name
	0,   // [0:0] is the sub-list for extension extendee
	0,   // [0:0] is the sub-list for field type_name
}

func init() { file_g2engine_proto_init() }
func file_g2engine_proto_init() {
	if File_g2engine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_g2engine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecordRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecordResponseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecordWithInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecordWithInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecordWithInfoWithReturnedRecordIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecordWithInfoWithReturnedRecordIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecordWithReturnedRecordIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecordWithReturnedRecordIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearLastExceptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearLastExceptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseExportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountRedoRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountRedoRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecordWithInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecordWithInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportConfigAndConfigIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportConfigAndConfigIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportCSVEntityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportCSVEntityReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportJSONEntityReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportJSONEntityReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchNextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchNextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindInterestingEntitiesByEntityIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindInterestingEntitiesByEntityIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindInterestingEntitiesByRecordIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindInterestingEntitiesByRecordIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNetworkByEntityIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNetworkByEntityIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNetworkByEntityID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNetworkByEntityID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNetworkByRecordIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNetworkByRecordIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNetworkByRecordID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNetworkByRecordID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathByEntityIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathByEntityIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathByEntityID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathByEntityID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathByRecordIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathByRecordIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathByRecordID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathByRecordID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathExcludingByEntityIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathExcludingByEntityIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathExcludingByEntityID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathExcludingByEntityID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathExcludingByRecordIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathExcludingByRecordIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathExcludingByRecordID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathExcludingByRecordID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathIncludingSourceByEntityIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathIncludingSourceByEntityIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathIncludingSourceByEntityID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathIncludingSourceByEntityID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathIncludingSourceByRecordIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathIncludingSourceByRecordIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathIncludingSourceByRecordID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathIncludingSourceByRecordID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveConfigIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveConfigIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntityByEntityIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntityByEntityIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntityByEntityID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntityByEntityID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntityByRecordIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntityByRecordIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntityByRecordID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntityByRecordID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastExceptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastExceptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastExceptionCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastExceptionCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecord_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecord_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRedoRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRedoRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepositoryLastModifiedTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepositoryLastModifiedTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualEntityByRecordIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualEntityByRecordIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualEntityByRecordID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtualEntityByRecordID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HowEntityByEntityIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HowEntityByEntityIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HowEntityByEntityID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HowEntityByEntityID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitWithConfigIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitWithConfigIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrimeEngineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrimeEngineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessRedoRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessRedoRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessRedoRecordWithInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessRedoRecordWithInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessWithInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessWithInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessWithResponseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessWithResponseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessWithResponseResizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessWithResponseResizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurgeRepositoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurgeRepositoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReevaluateEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReevaluateEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReevaluateEntityWithInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReevaluateEntityWithInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReevaluateRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReevaluateRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReevaluateRecordWithInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReevaluateRecordWithInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReinitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReinitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceRecordWithInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceRecordWithInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByAttributesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByAttributes_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByAttributes_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyEntitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyEntitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyEntities_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyEntities_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyEntityByEntityIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyEntityByEntityIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyEntityByEntityID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyEntityByEntityID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyEntityByRecordIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyEntityByRecordIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyEntityByRecordID_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyEntityByRecordID_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyRecords_V2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_g2engine_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhyRecords_V2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_g2engine_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   154,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_g2engine_proto_goTypes,
		DependencyIndexes: file_g2engine_proto_depIdxs,
		MessageInfos:      file_g2engine_proto_msgTypes,
	}.Build()
	File_g2engine_proto = out.File
	file_g2engine_proto_rawDesc = nil
	file_g2engine_proto_goTypes = nil
	file_g2engine_proto_depIdxs = nil
}
