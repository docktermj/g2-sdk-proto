// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: g2configmgr.proto
#ifndef GRPC_g2configmgr_2eproto__INCLUDED
#define GRPC_g2configmgr_2eproto__INCLUDED

#include "g2configmgr.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace g2configmgr {

class G2Diagnostic final {
 public:
  static constexpr char const* service_full_name() {
    return "g2configmgr.G2Diagnostic";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status AddConfig(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest& request, ::g2configmgr::AddConfigResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::AddConfigResponse>> AsyncAddConfig(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::AddConfigResponse>>(AsyncAddConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::AddConfigResponse>> PrepareAsyncAddConfig(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::AddConfigResponse>>(PrepareAsyncAddConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status ClearLastException(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest& request, ::g2configmgr::ClearLastExceptionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::ClearLastExceptionResponse>> AsyncClearLastException(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::ClearLastExceptionResponse>>(AsyncClearLastExceptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::ClearLastExceptionResponse>> PrepareAsyncClearLastException(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::ClearLastExceptionResponse>>(PrepareAsyncClearLastExceptionRaw(context, request, cq));
    }
    virtual ::grpc::Status Destroy(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest& request, ::g2configmgr::DestroyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::DestroyResponse>> AsyncDestroy(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::DestroyResponse>>(AsyncDestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::DestroyResponse>> PrepareAsyncDestroy(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::DestroyResponse>>(PrepareAsyncDestroyRaw(context, request, cq));
    }
    virtual ::grpc::Status GetConfig(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest& request, ::g2configmgr::GetConfigResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetConfigResponse>> AsyncGetConfig(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetConfigResponse>>(AsyncGetConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetConfigResponse>> PrepareAsyncGetConfig(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetConfigResponse>>(PrepareAsyncGetConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status GetConfigList(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest& request, ::g2configmgr::GetConfigListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetConfigListResponse>> AsyncGetConfigList(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetConfigListResponse>>(AsyncGetConfigListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetConfigListResponse>> PrepareAsyncGetConfigList(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetConfigListResponse>>(PrepareAsyncGetConfigListRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest& request, ::g2configmgr::GetDefaultConfigIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetDefaultConfigIDResponse>> AsyncGetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetDefaultConfigIDResponse>>(AsyncGetDefaultConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetDefaultConfigIDResponse>> PrepareAsyncGetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetDefaultConfigIDResponse>>(PrepareAsyncGetDefaultConfigIDRaw(context, request, cq));
    }
    virtual ::grpc::Status GetLastException(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest& request, ::g2configmgr::GetLastExceptionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetLastExceptionResponse>> AsyncGetLastException(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetLastExceptionResponse>>(AsyncGetLastExceptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetLastExceptionResponse>> PrepareAsyncGetLastException(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetLastExceptionResponse>>(PrepareAsyncGetLastExceptionRaw(context, request, cq));
    }
    virtual ::grpc::Status GetLastExceptionCode(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest& request, ::g2configmgr::GetLastExceptionCodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetLastExceptionCodeResponse>> AsyncGetLastExceptionCode(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetLastExceptionCodeResponse>>(AsyncGetLastExceptionCodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetLastExceptionCodeResponse>> PrepareAsyncGetLastExceptionCode(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetLastExceptionCodeResponse>>(PrepareAsyncGetLastExceptionCodeRaw(context, request, cq));
    }
    virtual ::grpc::Status Init(::grpc::ClientContext* context, const ::g2configmgr::InitRequest& request, ::g2configmgr::InitResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::InitResponse>> AsyncInit(::grpc::ClientContext* context, const ::g2configmgr::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::InitResponse>>(AsyncInitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::InitResponse>> PrepareAsyncInit(::grpc::ClientContext* context, const ::g2configmgr::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::InitResponse>>(PrepareAsyncInitRaw(context, request, cq));
    }
    virtual ::grpc::Status ReplaceDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest& request, ::g2configmgr::ReplaceDefaultConfigIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::ReplaceDefaultConfigIDResponse>> AsyncReplaceDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::ReplaceDefaultConfigIDResponse>>(AsyncReplaceDefaultConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::ReplaceDefaultConfigIDResponse>> PrepareAsyncReplaceDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::ReplaceDefaultConfigIDResponse>>(PrepareAsyncReplaceDefaultConfigIDRaw(context, request, cq));
    }
    virtual ::grpc::Status SetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest& request, ::g2configmgr::SetDefaultConfigIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::SetDefaultConfigIDResponse>> AsyncSetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::SetDefaultConfigIDResponse>>(AsyncSetDefaultConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::SetDefaultConfigIDResponse>> PrepareAsyncSetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::SetDefaultConfigIDResponse>>(PrepareAsyncSetDefaultConfigIDRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void AddConfig(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest* request, ::g2configmgr::AddConfigResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddConfig(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest* request, ::g2configmgr::AddConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ClearLastException(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest* request, ::g2configmgr::ClearLastExceptionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ClearLastException(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest* request, ::g2configmgr::ClearLastExceptionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Destroy(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest* request, ::g2configmgr::DestroyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Destroy(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest* request, ::g2configmgr::DestroyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetConfig(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest* request, ::g2configmgr::GetConfigResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetConfig(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest* request, ::g2configmgr::GetConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetConfigList(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest* request, ::g2configmgr::GetConfigListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetConfigList(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest* request, ::g2configmgr::GetConfigListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest* request, ::g2configmgr::GetDefaultConfigIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest* request, ::g2configmgr::GetDefaultConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetLastException(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest* request, ::g2configmgr::GetLastExceptionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetLastException(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest* request, ::g2configmgr::GetLastExceptionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetLastExceptionCode(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest* request, ::g2configmgr::GetLastExceptionCodeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetLastExceptionCode(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest* request, ::g2configmgr::GetLastExceptionCodeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Init(::grpc::ClientContext* context, const ::g2configmgr::InitRequest* request, ::g2configmgr::InitResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Init(::grpc::ClientContext* context, const ::g2configmgr::InitRequest* request, ::g2configmgr::InitResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ReplaceDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest* request, ::g2configmgr::ReplaceDefaultConfigIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReplaceDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest* request, ::g2configmgr::ReplaceDefaultConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest* request, ::g2configmgr::SetDefaultConfigIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest* request, ::g2configmgr::SetDefaultConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::AddConfigResponse>* AsyncAddConfigRaw(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::AddConfigResponse>* PrepareAsyncAddConfigRaw(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::ClearLastExceptionResponse>* AsyncClearLastExceptionRaw(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::ClearLastExceptionResponse>* PrepareAsyncClearLastExceptionRaw(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::DestroyResponse>* AsyncDestroyRaw(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::DestroyResponse>* PrepareAsyncDestroyRaw(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetConfigResponse>* AsyncGetConfigRaw(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetConfigResponse>* PrepareAsyncGetConfigRaw(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetConfigListResponse>* AsyncGetConfigListRaw(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetConfigListResponse>* PrepareAsyncGetConfigListRaw(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetDefaultConfigIDResponse>* AsyncGetDefaultConfigIDRaw(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetDefaultConfigIDResponse>* PrepareAsyncGetDefaultConfigIDRaw(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetLastExceptionResponse>* AsyncGetLastExceptionRaw(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetLastExceptionResponse>* PrepareAsyncGetLastExceptionRaw(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetLastExceptionCodeResponse>* AsyncGetLastExceptionCodeRaw(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::GetLastExceptionCodeResponse>* PrepareAsyncGetLastExceptionCodeRaw(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::InitResponse>* AsyncInitRaw(::grpc::ClientContext* context, const ::g2configmgr::InitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::InitResponse>* PrepareAsyncInitRaw(::grpc::ClientContext* context, const ::g2configmgr::InitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::ReplaceDefaultConfigIDResponse>* AsyncReplaceDefaultConfigIDRaw(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::ReplaceDefaultConfigIDResponse>* PrepareAsyncReplaceDefaultConfigIDRaw(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::SetDefaultConfigIDResponse>* AsyncSetDefaultConfigIDRaw(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2configmgr::SetDefaultConfigIDResponse>* PrepareAsyncSetDefaultConfigIDRaw(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status AddConfig(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest& request, ::g2configmgr::AddConfigResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::AddConfigResponse>> AsyncAddConfig(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::AddConfigResponse>>(AsyncAddConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::AddConfigResponse>> PrepareAsyncAddConfig(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::AddConfigResponse>>(PrepareAsyncAddConfigRaw(context, request, cq));
    }
    ::grpc::Status ClearLastException(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest& request, ::g2configmgr::ClearLastExceptionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::ClearLastExceptionResponse>> AsyncClearLastException(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::ClearLastExceptionResponse>>(AsyncClearLastExceptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::ClearLastExceptionResponse>> PrepareAsyncClearLastException(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::ClearLastExceptionResponse>>(PrepareAsyncClearLastExceptionRaw(context, request, cq));
    }
    ::grpc::Status Destroy(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest& request, ::g2configmgr::DestroyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::DestroyResponse>> AsyncDestroy(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::DestroyResponse>>(AsyncDestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::DestroyResponse>> PrepareAsyncDestroy(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::DestroyResponse>>(PrepareAsyncDestroyRaw(context, request, cq));
    }
    ::grpc::Status GetConfig(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest& request, ::g2configmgr::GetConfigResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetConfigResponse>> AsyncGetConfig(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetConfigResponse>>(AsyncGetConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetConfigResponse>> PrepareAsyncGetConfig(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetConfigResponse>>(PrepareAsyncGetConfigRaw(context, request, cq));
    }
    ::grpc::Status GetConfigList(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest& request, ::g2configmgr::GetConfigListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetConfigListResponse>> AsyncGetConfigList(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetConfigListResponse>>(AsyncGetConfigListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetConfigListResponse>> PrepareAsyncGetConfigList(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetConfigListResponse>>(PrepareAsyncGetConfigListRaw(context, request, cq));
    }
    ::grpc::Status GetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest& request, ::g2configmgr::GetDefaultConfigIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetDefaultConfigIDResponse>> AsyncGetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetDefaultConfigIDResponse>>(AsyncGetDefaultConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetDefaultConfigIDResponse>> PrepareAsyncGetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetDefaultConfigIDResponse>>(PrepareAsyncGetDefaultConfigIDRaw(context, request, cq));
    }
    ::grpc::Status GetLastException(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest& request, ::g2configmgr::GetLastExceptionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetLastExceptionResponse>> AsyncGetLastException(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetLastExceptionResponse>>(AsyncGetLastExceptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetLastExceptionResponse>> PrepareAsyncGetLastException(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetLastExceptionResponse>>(PrepareAsyncGetLastExceptionRaw(context, request, cq));
    }
    ::grpc::Status GetLastExceptionCode(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest& request, ::g2configmgr::GetLastExceptionCodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetLastExceptionCodeResponse>> AsyncGetLastExceptionCode(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetLastExceptionCodeResponse>>(AsyncGetLastExceptionCodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetLastExceptionCodeResponse>> PrepareAsyncGetLastExceptionCode(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetLastExceptionCodeResponse>>(PrepareAsyncGetLastExceptionCodeRaw(context, request, cq));
    }
    ::grpc::Status Init(::grpc::ClientContext* context, const ::g2configmgr::InitRequest& request, ::g2configmgr::InitResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::InitResponse>> AsyncInit(::grpc::ClientContext* context, const ::g2configmgr::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::InitResponse>>(AsyncInitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::InitResponse>> PrepareAsyncInit(::grpc::ClientContext* context, const ::g2configmgr::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::InitResponse>>(PrepareAsyncInitRaw(context, request, cq));
    }
    ::grpc::Status ReplaceDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest& request, ::g2configmgr::ReplaceDefaultConfigIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::ReplaceDefaultConfigIDResponse>> AsyncReplaceDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::ReplaceDefaultConfigIDResponse>>(AsyncReplaceDefaultConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::ReplaceDefaultConfigIDResponse>> PrepareAsyncReplaceDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::ReplaceDefaultConfigIDResponse>>(PrepareAsyncReplaceDefaultConfigIDRaw(context, request, cq));
    }
    ::grpc::Status SetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest& request, ::g2configmgr::SetDefaultConfigIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::SetDefaultConfigIDResponse>> AsyncSetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::SetDefaultConfigIDResponse>>(AsyncSetDefaultConfigIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::SetDefaultConfigIDResponse>> PrepareAsyncSetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2configmgr::SetDefaultConfigIDResponse>>(PrepareAsyncSetDefaultConfigIDRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void AddConfig(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest* request, ::g2configmgr::AddConfigResponse* response, std::function<void(::grpc::Status)>) override;
      void AddConfig(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest* request, ::g2configmgr::AddConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ClearLastException(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest* request, ::g2configmgr::ClearLastExceptionResponse* response, std::function<void(::grpc::Status)>) override;
      void ClearLastException(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest* request, ::g2configmgr::ClearLastExceptionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Destroy(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest* request, ::g2configmgr::DestroyResponse* response, std::function<void(::grpc::Status)>) override;
      void Destroy(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest* request, ::g2configmgr::DestroyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetConfig(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest* request, ::g2configmgr::GetConfigResponse* response, std::function<void(::grpc::Status)>) override;
      void GetConfig(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest* request, ::g2configmgr::GetConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetConfigList(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest* request, ::g2configmgr::GetConfigListResponse* response, std::function<void(::grpc::Status)>) override;
      void GetConfigList(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest* request, ::g2configmgr::GetConfigListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest* request, ::g2configmgr::GetDefaultConfigIDResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest* request, ::g2configmgr::GetDefaultConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetLastException(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest* request, ::g2configmgr::GetLastExceptionResponse* response, std::function<void(::grpc::Status)>) override;
      void GetLastException(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest* request, ::g2configmgr::GetLastExceptionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetLastExceptionCode(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest* request, ::g2configmgr::GetLastExceptionCodeResponse* response, std::function<void(::grpc::Status)>) override;
      void GetLastExceptionCode(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest* request, ::g2configmgr::GetLastExceptionCodeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Init(::grpc::ClientContext* context, const ::g2configmgr::InitRequest* request, ::g2configmgr::InitResponse* response, std::function<void(::grpc::Status)>) override;
      void Init(::grpc::ClientContext* context, const ::g2configmgr::InitRequest* request, ::g2configmgr::InitResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ReplaceDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest* request, ::g2configmgr::ReplaceDefaultConfigIDResponse* response, std::function<void(::grpc::Status)>) override;
      void ReplaceDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest* request, ::g2configmgr::ReplaceDefaultConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest* request, ::g2configmgr::SetDefaultConfigIDResponse* response, std::function<void(::grpc::Status)>) override;
      void SetDefaultConfigID(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest* request, ::g2configmgr::SetDefaultConfigIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::AddConfigResponse>* AsyncAddConfigRaw(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::AddConfigResponse>* PrepareAsyncAddConfigRaw(::grpc::ClientContext* context, const ::g2configmgr::AddConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::ClearLastExceptionResponse>* AsyncClearLastExceptionRaw(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::ClearLastExceptionResponse>* PrepareAsyncClearLastExceptionRaw(::grpc::ClientContext* context, const ::g2configmgr::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::DestroyResponse>* AsyncDestroyRaw(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::DestroyResponse>* PrepareAsyncDestroyRaw(::grpc::ClientContext* context, const ::g2configmgr::DestroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetConfigResponse>* AsyncGetConfigRaw(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetConfigResponse>* PrepareAsyncGetConfigRaw(::grpc::ClientContext* context, const ::g2configmgr::GetConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetConfigListResponse>* AsyncGetConfigListRaw(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetConfigListResponse>* PrepareAsyncGetConfigListRaw(::grpc::ClientContext* context, const ::g2configmgr::GetConfigListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetDefaultConfigIDResponse>* AsyncGetDefaultConfigIDRaw(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetDefaultConfigIDResponse>* PrepareAsyncGetDefaultConfigIDRaw(::grpc::ClientContext* context, const ::g2configmgr::GetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetLastExceptionResponse>* AsyncGetLastExceptionRaw(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetLastExceptionResponse>* PrepareAsyncGetLastExceptionRaw(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetLastExceptionCodeResponse>* AsyncGetLastExceptionCodeRaw(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::GetLastExceptionCodeResponse>* PrepareAsyncGetLastExceptionCodeRaw(::grpc::ClientContext* context, const ::g2configmgr::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::InitResponse>* AsyncInitRaw(::grpc::ClientContext* context, const ::g2configmgr::InitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::InitResponse>* PrepareAsyncInitRaw(::grpc::ClientContext* context, const ::g2configmgr::InitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::ReplaceDefaultConfigIDResponse>* AsyncReplaceDefaultConfigIDRaw(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::ReplaceDefaultConfigIDResponse>* PrepareAsyncReplaceDefaultConfigIDRaw(::grpc::ClientContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::SetDefaultConfigIDResponse>* AsyncSetDefaultConfigIDRaw(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2configmgr::SetDefaultConfigIDResponse>* PrepareAsyncSetDefaultConfigIDRaw(::grpc::ClientContext* context, const ::g2configmgr::SetDefaultConfigIDRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_AddConfig_;
    const ::grpc::internal::RpcMethod rpcmethod_ClearLastException_;
    const ::grpc::internal::RpcMethod rpcmethod_Destroy_;
    const ::grpc::internal::RpcMethod rpcmethod_GetConfig_;
    const ::grpc::internal::RpcMethod rpcmethod_GetConfigList_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDefaultConfigID_;
    const ::grpc::internal::RpcMethod rpcmethod_GetLastException_;
    const ::grpc::internal::RpcMethod rpcmethod_GetLastExceptionCode_;
    const ::grpc::internal::RpcMethod rpcmethod_Init_;
    const ::grpc::internal::RpcMethod rpcmethod_ReplaceDefaultConfigID_;
    const ::grpc::internal::RpcMethod rpcmethod_SetDefaultConfigID_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status AddConfig(::grpc::ServerContext* context, const ::g2configmgr::AddConfigRequest* request, ::g2configmgr::AddConfigResponse* response);
    virtual ::grpc::Status ClearLastException(::grpc::ServerContext* context, const ::g2configmgr::ClearLastExceptionRequest* request, ::g2configmgr::ClearLastExceptionResponse* response);
    virtual ::grpc::Status Destroy(::grpc::ServerContext* context, const ::g2configmgr::DestroyRequest* request, ::g2configmgr::DestroyResponse* response);
    virtual ::grpc::Status GetConfig(::grpc::ServerContext* context, const ::g2configmgr::GetConfigRequest* request, ::g2configmgr::GetConfigResponse* response);
    virtual ::grpc::Status GetConfigList(::grpc::ServerContext* context, const ::g2configmgr::GetConfigListRequest* request, ::g2configmgr::GetConfigListResponse* response);
    virtual ::grpc::Status GetDefaultConfigID(::grpc::ServerContext* context, const ::g2configmgr::GetDefaultConfigIDRequest* request, ::g2configmgr::GetDefaultConfigIDResponse* response);
    virtual ::grpc::Status GetLastException(::grpc::ServerContext* context, const ::g2configmgr::GetLastExceptionRequest* request, ::g2configmgr::GetLastExceptionResponse* response);
    virtual ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* context, const ::g2configmgr::GetLastExceptionCodeRequest* request, ::g2configmgr::GetLastExceptionCodeResponse* response);
    virtual ::grpc::Status Init(::grpc::ServerContext* context, const ::g2configmgr::InitRequest* request, ::g2configmgr::InitResponse* response);
    virtual ::grpc::Status ReplaceDefaultConfigID(::grpc::ServerContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest* request, ::g2configmgr::ReplaceDefaultConfigIDResponse* response);
    virtual ::grpc::Status SetDefaultConfigID(::grpc::ServerContext* context, const ::g2configmgr::SetDefaultConfigIDRequest* request, ::g2configmgr::SetDefaultConfigIDResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_AddConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddConfig() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_AddConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddConfig(::grpc::ServerContext* /*context*/, const ::g2configmgr::AddConfigRequest* /*request*/, ::g2configmgr::AddConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddConfig(::grpc::ServerContext* context, ::g2configmgr::AddConfigRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2configmgr::AddConfigResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ClearLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ClearLastException() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ClearLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearLastException(::grpc::ServerContext* /*context*/, const ::g2configmgr::ClearLastExceptionRequest* /*request*/, ::g2configmgr::ClearLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearLastException(::grpc::ServerContext* context, ::g2configmgr::ClearLastExceptionRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2configmgr::ClearLastExceptionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Destroy() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2configmgr::DestroyRequest* /*request*/, ::g2configmgr::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroy(::grpc::ServerContext* context, ::g2configmgr::DestroyRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2configmgr::DestroyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetConfig() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfig(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetConfigRequest* /*request*/, ::g2configmgr::GetConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfig(::grpc::ServerContext* context, ::g2configmgr::GetConfigRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2configmgr::GetConfigResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetConfigList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetConfigList() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetConfigList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigList(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetConfigListRequest* /*request*/, ::g2configmgr::GetConfigListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfigList(::grpc::ServerContext* context, ::g2configmgr::GetConfigListRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2configmgr::GetConfigListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDefaultConfigID() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetDefaultConfigIDRequest* /*request*/, ::g2configmgr::GetDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDefaultConfigID(::grpc::ServerContext* context, ::g2configmgr::GetDefaultConfigIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2configmgr::GetDefaultConfigIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetLastException() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastException(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetLastExceptionRequest* /*request*/, ::g2configmgr::GetLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLastException(::grpc::ServerContext* context, ::g2configmgr::GetLastExceptionRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2configmgr::GetLastExceptionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetLastExceptionCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetLastExceptionCode() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetLastExceptionCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetLastExceptionCodeRequest* /*request*/, ::g2configmgr::GetLastExceptionCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLastExceptionCode(::grpc::ServerContext* context, ::g2configmgr::GetLastExceptionCodeRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2configmgr::GetLastExceptionCodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Init() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2configmgr::InitRequest* /*request*/, ::g2configmgr::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInit(::grpc::ServerContext* context, ::g2configmgr::InitRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2configmgr::InitResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReplaceDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReplaceDefaultConfigID() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ReplaceDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::ReplaceDefaultConfigIDRequest* /*request*/, ::g2configmgr::ReplaceDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReplaceDefaultConfigID(::grpc::ServerContext* context, ::g2configmgr::ReplaceDefaultConfigIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2configmgr::ReplaceDefaultConfigIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetDefaultConfigID() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_SetDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::SetDefaultConfigIDRequest* /*request*/, ::g2configmgr::SetDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetDefaultConfigID(::grpc::ServerContext* context, ::g2configmgr::SetDefaultConfigIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2configmgr::SetDefaultConfigIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_AddConfig<WithAsyncMethod_ClearLastException<WithAsyncMethod_Destroy<WithAsyncMethod_GetConfig<WithAsyncMethod_GetConfigList<WithAsyncMethod_GetDefaultConfigID<WithAsyncMethod_GetLastException<WithAsyncMethod_GetLastExceptionCode<WithAsyncMethod_Init<WithAsyncMethod_ReplaceDefaultConfigID<WithAsyncMethod_SetDefaultConfigID<Service > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_AddConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddConfig() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::g2configmgr::AddConfigRequest, ::g2configmgr::AddConfigResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2configmgr::AddConfigRequest* request, ::g2configmgr::AddConfigResponse* response) { return this->AddConfig(context, request, response); }));}
    void SetMessageAllocatorFor_AddConfig(
        ::grpc::MessageAllocator< ::g2configmgr::AddConfigRequest, ::g2configmgr::AddConfigResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2configmgr::AddConfigRequest, ::g2configmgr::AddConfigResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddConfig(::grpc::ServerContext* /*context*/, const ::g2configmgr::AddConfigRequest* /*request*/, ::g2configmgr::AddConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::g2configmgr::AddConfigRequest* /*request*/, ::g2configmgr::AddConfigResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ClearLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ClearLastException() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::g2configmgr::ClearLastExceptionRequest, ::g2configmgr::ClearLastExceptionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2configmgr::ClearLastExceptionRequest* request, ::g2configmgr::ClearLastExceptionResponse* response) { return this->ClearLastException(context, request, response); }));}
    void SetMessageAllocatorFor_ClearLastException(
        ::grpc::MessageAllocator< ::g2configmgr::ClearLastExceptionRequest, ::g2configmgr::ClearLastExceptionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2configmgr::ClearLastExceptionRequest, ::g2configmgr::ClearLastExceptionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ClearLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearLastException(::grpc::ServerContext* /*context*/, const ::g2configmgr::ClearLastExceptionRequest* /*request*/, ::g2configmgr::ClearLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearLastException(
      ::grpc::CallbackServerContext* /*context*/, const ::g2configmgr::ClearLastExceptionRequest* /*request*/, ::g2configmgr::ClearLastExceptionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Destroy() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::g2configmgr::DestroyRequest, ::g2configmgr::DestroyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2configmgr::DestroyRequest* request, ::g2configmgr::DestroyResponse* response) { return this->Destroy(context, request, response); }));}
    void SetMessageAllocatorFor_Destroy(
        ::grpc::MessageAllocator< ::g2configmgr::DestroyRequest, ::g2configmgr::DestroyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2configmgr::DestroyRequest, ::g2configmgr::DestroyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2configmgr::DestroyRequest* /*request*/, ::g2configmgr::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::g2configmgr::DestroyRequest* /*request*/, ::g2configmgr::DestroyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetConfig() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::g2configmgr::GetConfigRequest, ::g2configmgr::GetConfigResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2configmgr::GetConfigRequest* request, ::g2configmgr::GetConfigResponse* response) { return this->GetConfig(context, request, response); }));}
    void SetMessageAllocatorFor_GetConfig(
        ::grpc::MessageAllocator< ::g2configmgr::GetConfigRequest, ::g2configmgr::GetConfigResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2configmgr::GetConfigRequest, ::g2configmgr::GetConfigResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfig(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetConfigRequest* /*request*/, ::g2configmgr::GetConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::g2configmgr::GetConfigRequest* /*request*/, ::g2configmgr::GetConfigResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetConfigList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetConfigList() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::g2configmgr::GetConfigListRequest, ::g2configmgr::GetConfigListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2configmgr::GetConfigListRequest* request, ::g2configmgr::GetConfigListResponse* response) { return this->GetConfigList(context, request, response); }));}
    void SetMessageAllocatorFor_GetConfigList(
        ::grpc::MessageAllocator< ::g2configmgr::GetConfigListRequest, ::g2configmgr::GetConfigListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2configmgr::GetConfigListRequest, ::g2configmgr::GetConfigListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetConfigList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigList(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetConfigListRequest* /*request*/, ::g2configmgr::GetConfigListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConfigList(
      ::grpc::CallbackServerContext* /*context*/, const ::g2configmgr::GetConfigListRequest* /*request*/, ::g2configmgr::GetConfigListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDefaultConfigID() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::g2configmgr::GetDefaultConfigIDRequest, ::g2configmgr::GetDefaultConfigIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2configmgr::GetDefaultConfigIDRequest* request, ::g2configmgr::GetDefaultConfigIDResponse* response) { return this->GetDefaultConfigID(context, request, response); }));}
    void SetMessageAllocatorFor_GetDefaultConfigID(
        ::grpc::MessageAllocator< ::g2configmgr::GetDefaultConfigIDRequest, ::g2configmgr::GetDefaultConfigIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2configmgr::GetDefaultConfigIDRequest, ::g2configmgr::GetDefaultConfigIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetDefaultConfigIDRequest* /*request*/, ::g2configmgr::GetDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDefaultConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2configmgr::GetDefaultConfigIDRequest* /*request*/, ::g2configmgr::GetDefaultConfigIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetLastException() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::g2configmgr::GetLastExceptionRequest, ::g2configmgr::GetLastExceptionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2configmgr::GetLastExceptionRequest* request, ::g2configmgr::GetLastExceptionResponse* response) { return this->GetLastException(context, request, response); }));}
    void SetMessageAllocatorFor_GetLastException(
        ::grpc::MessageAllocator< ::g2configmgr::GetLastExceptionRequest, ::g2configmgr::GetLastExceptionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2configmgr::GetLastExceptionRequest, ::g2configmgr::GetLastExceptionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastException(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetLastExceptionRequest* /*request*/, ::g2configmgr::GetLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLastException(
      ::grpc::CallbackServerContext* /*context*/, const ::g2configmgr::GetLastExceptionRequest* /*request*/, ::g2configmgr::GetLastExceptionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetLastExceptionCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetLastExceptionCode() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::g2configmgr::GetLastExceptionCodeRequest, ::g2configmgr::GetLastExceptionCodeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2configmgr::GetLastExceptionCodeRequest* request, ::g2configmgr::GetLastExceptionCodeResponse* response) { return this->GetLastExceptionCode(context, request, response); }));}
    void SetMessageAllocatorFor_GetLastExceptionCode(
        ::grpc::MessageAllocator< ::g2configmgr::GetLastExceptionCodeRequest, ::g2configmgr::GetLastExceptionCodeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2configmgr::GetLastExceptionCodeRequest, ::g2configmgr::GetLastExceptionCodeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetLastExceptionCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetLastExceptionCodeRequest* /*request*/, ::g2configmgr::GetLastExceptionCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLastExceptionCode(
      ::grpc::CallbackServerContext* /*context*/, const ::g2configmgr::GetLastExceptionCodeRequest* /*request*/, ::g2configmgr::GetLastExceptionCodeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Init() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::g2configmgr::InitRequest, ::g2configmgr::InitResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2configmgr::InitRequest* request, ::g2configmgr::InitResponse* response) { return this->Init(context, request, response); }));}
    void SetMessageAllocatorFor_Init(
        ::grpc::MessageAllocator< ::g2configmgr::InitRequest, ::g2configmgr::InitResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2configmgr::InitRequest, ::g2configmgr::InitResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2configmgr::InitRequest* /*request*/, ::g2configmgr::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Init(
      ::grpc::CallbackServerContext* /*context*/, const ::g2configmgr::InitRequest* /*request*/, ::g2configmgr::InitResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ReplaceDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ReplaceDefaultConfigID() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::g2configmgr::ReplaceDefaultConfigIDRequest, ::g2configmgr::ReplaceDefaultConfigIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2configmgr::ReplaceDefaultConfigIDRequest* request, ::g2configmgr::ReplaceDefaultConfigIDResponse* response) { return this->ReplaceDefaultConfigID(context, request, response); }));}
    void SetMessageAllocatorFor_ReplaceDefaultConfigID(
        ::grpc::MessageAllocator< ::g2configmgr::ReplaceDefaultConfigIDRequest, ::g2configmgr::ReplaceDefaultConfigIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2configmgr::ReplaceDefaultConfigIDRequest, ::g2configmgr::ReplaceDefaultConfigIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ReplaceDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::ReplaceDefaultConfigIDRequest* /*request*/, ::g2configmgr::ReplaceDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReplaceDefaultConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2configmgr::ReplaceDefaultConfigIDRequest* /*request*/, ::g2configmgr::ReplaceDefaultConfigIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetDefaultConfigID() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::g2configmgr::SetDefaultConfigIDRequest, ::g2configmgr::SetDefaultConfigIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2configmgr::SetDefaultConfigIDRequest* request, ::g2configmgr::SetDefaultConfigIDResponse* response) { return this->SetDefaultConfigID(context, request, response); }));}
    void SetMessageAllocatorFor_SetDefaultConfigID(
        ::grpc::MessageAllocator< ::g2configmgr::SetDefaultConfigIDRequest, ::g2configmgr::SetDefaultConfigIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2configmgr::SetDefaultConfigIDRequest, ::g2configmgr::SetDefaultConfigIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::SetDefaultConfigIDRequest* /*request*/, ::g2configmgr::SetDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetDefaultConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::g2configmgr::SetDefaultConfigIDRequest* /*request*/, ::g2configmgr::SetDefaultConfigIDResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_AddConfig<WithCallbackMethod_ClearLastException<WithCallbackMethod_Destroy<WithCallbackMethod_GetConfig<WithCallbackMethod_GetConfigList<WithCallbackMethod_GetDefaultConfigID<WithCallbackMethod_GetLastException<WithCallbackMethod_GetLastExceptionCode<WithCallbackMethod_Init<WithCallbackMethod_ReplaceDefaultConfigID<WithCallbackMethod_SetDefaultConfigID<Service > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_AddConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddConfig() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_AddConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddConfig(::grpc::ServerContext* /*context*/, const ::g2configmgr::AddConfigRequest* /*request*/, ::g2configmgr::AddConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ClearLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ClearLastException() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ClearLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearLastException(::grpc::ServerContext* /*context*/, const ::g2configmgr::ClearLastExceptionRequest* /*request*/, ::g2configmgr::ClearLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Destroy() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2configmgr::DestroyRequest* /*request*/, ::g2configmgr::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetConfig() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfig(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetConfigRequest* /*request*/, ::g2configmgr::GetConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetConfigList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetConfigList() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetConfigList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigList(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetConfigListRequest* /*request*/, ::g2configmgr::GetConfigListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDefaultConfigID() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetDefaultConfigIDRequest* /*request*/, ::g2configmgr::GetDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetLastException() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastException(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetLastExceptionRequest* /*request*/, ::g2configmgr::GetLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetLastExceptionCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetLastExceptionCode() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetLastExceptionCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetLastExceptionCodeRequest* /*request*/, ::g2configmgr::GetLastExceptionCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Init() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2configmgr::InitRequest* /*request*/, ::g2configmgr::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReplaceDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReplaceDefaultConfigID() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ReplaceDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::ReplaceDefaultConfigIDRequest* /*request*/, ::g2configmgr::ReplaceDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetDefaultConfigID() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_SetDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::SetDefaultConfigIDRequest* /*request*/, ::g2configmgr::SetDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddConfig() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_AddConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddConfig(::grpc::ServerContext* /*context*/, const ::g2configmgr::AddConfigRequest* /*request*/, ::g2configmgr::AddConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddConfig(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ClearLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ClearLastException() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ClearLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearLastException(::grpc::ServerContext* /*context*/, const ::g2configmgr::ClearLastExceptionRequest* /*request*/, ::g2configmgr::ClearLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearLastException(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Destroy() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2configmgr::DestroyRequest* /*request*/, ::g2configmgr::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetConfig() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfig(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetConfigRequest* /*request*/, ::g2configmgr::GetConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfig(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetConfigList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetConfigList() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetConfigList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigList(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetConfigListRequest* /*request*/, ::g2configmgr::GetConfigListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfigList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDefaultConfigID() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetDefaultConfigIDRequest* /*request*/, ::g2configmgr::GetDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDefaultConfigID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetLastException() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastException(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetLastExceptionRequest* /*request*/, ::g2configmgr::GetLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLastException(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetLastExceptionCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetLastExceptionCode() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetLastExceptionCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetLastExceptionCodeRequest* /*request*/, ::g2configmgr::GetLastExceptionCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLastExceptionCode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Init() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2configmgr::InitRequest* /*request*/, ::g2configmgr::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInit(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReplaceDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReplaceDefaultConfigID() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ReplaceDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::ReplaceDefaultConfigIDRequest* /*request*/, ::g2configmgr::ReplaceDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReplaceDefaultConfigID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetDefaultConfigID() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_SetDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::SetDefaultConfigIDRequest* /*request*/, ::g2configmgr::SetDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetDefaultConfigID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddConfig() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddConfig(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddConfig(::grpc::ServerContext* /*context*/, const ::g2configmgr::AddConfigRequest* /*request*/, ::g2configmgr::AddConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ClearLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ClearLastException() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ClearLastException(context, request, response); }));
    }
    ~WithRawCallbackMethod_ClearLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearLastException(::grpc::ServerContext* /*context*/, const ::g2configmgr::ClearLastExceptionRequest* /*request*/, ::g2configmgr::ClearLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearLastException(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Destroy() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Destroy(context, request, response); }));
    }
    ~WithRawCallbackMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2configmgr::DestroyRequest* /*request*/, ::g2configmgr::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetConfig() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetConfig(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfig(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetConfigRequest* /*request*/, ::g2configmgr::GetConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetConfigList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetConfigList() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetConfigList(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetConfigList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigList(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetConfigListRequest* /*request*/, ::g2configmgr::GetConfigListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConfigList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDefaultConfigID() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDefaultConfigID(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetDefaultConfigIDRequest* /*request*/, ::g2configmgr::GetDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDefaultConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetLastException() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetLastException(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastException(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetLastExceptionRequest* /*request*/, ::g2configmgr::GetLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLastException(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetLastExceptionCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetLastExceptionCode() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetLastExceptionCode(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetLastExceptionCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetLastExceptionCodeRequest* /*request*/, ::g2configmgr::GetLastExceptionCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLastExceptionCode(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Init() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Init(context, request, response); }));
    }
    ~WithRawCallbackMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2configmgr::InitRequest* /*request*/, ::g2configmgr::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Init(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ReplaceDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ReplaceDefaultConfigID() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReplaceDefaultConfigID(context, request, response); }));
    }
    ~WithRawCallbackMethod_ReplaceDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::ReplaceDefaultConfigIDRequest* /*request*/, ::g2configmgr::ReplaceDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReplaceDefaultConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetDefaultConfigID() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetDefaultConfigID(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::SetDefaultConfigIDRequest* /*request*/, ::g2configmgr::SetDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetDefaultConfigID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddConfig() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2configmgr::AddConfigRequest, ::g2configmgr::AddConfigResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2configmgr::AddConfigRequest, ::g2configmgr::AddConfigResponse>* streamer) {
                       return this->StreamedAddConfig(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddConfig(::grpc::ServerContext* /*context*/, const ::g2configmgr::AddConfigRequest* /*request*/, ::g2configmgr::AddConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2configmgr::AddConfigRequest,::g2configmgr::AddConfigResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ClearLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ClearLastException() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2configmgr::ClearLastExceptionRequest, ::g2configmgr::ClearLastExceptionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2configmgr::ClearLastExceptionRequest, ::g2configmgr::ClearLastExceptionResponse>* streamer) {
                       return this->StreamedClearLastException(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ClearLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ClearLastException(::grpc::ServerContext* /*context*/, const ::g2configmgr::ClearLastExceptionRequest* /*request*/, ::g2configmgr::ClearLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClearLastException(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2configmgr::ClearLastExceptionRequest,::g2configmgr::ClearLastExceptionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Destroy() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2configmgr::DestroyRequest, ::g2configmgr::DestroyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2configmgr::DestroyRequest, ::g2configmgr::DestroyResponse>* streamer) {
                       return this->StreamedDestroy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2configmgr::DestroyRequest* /*request*/, ::g2configmgr::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDestroy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2configmgr::DestroyRequest,::g2configmgr::DestroyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetConfig() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2configmgr::GetConfigRequest, ::g2configmgr::GetConfigResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2configmgr::GetConfigRequest, ::g2configmgr::GetConfigResponse>* streamer) {
                       return this->StreamedGetConfig(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetConfig(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetConfigRequest* /*request*/, ::g2configmgr::GetConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2configmgr::GetConfigRequest,::g2configmgr::GetConfigResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetConfigList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetConfigList() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2configmgr::GetConfigListRequest, ::g2configmgr::GetConfigListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2configmgr::GetConfigListRequest, ::g2configmgr::GetConfigListResponse>* streamer) {
                       return this->StreamedGetConfigList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetConfigList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetConfigList(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetConfigListRequest* /*request*/, ::g2configmgr::GetConfigListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetConfigList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2configmgr::GetConfigListRequest,::g2configmgr::GetConfigListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDefaultConfigID() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2configmgr::GetDefaultConfigIDRequest, ::g2configmgr::GetDefaultConfigIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2configmgr::GetDefaultConfigIDRequest, ::g2configmgr::GetDefaultConfigIDResponse>* streamer) {
                       return this->StreamedGetDefaultConfigID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetDefaultConfigIDRequest* /*request*/, ::g2configmgr::GetDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDefaultConfigID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2configmgr::GetDefaultConfigIDRequest,::g2configmgr::GetDefaultConfigIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetLastException() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2configmgr::GetLastExceptionRequest, ::g2configmgr::GetLastExceptionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2configmgr::GetLastExceptionRequest, ::g2configmgr::GetLastExceptionResponse>* streamer) {
                       return this->StreamedGetLastException(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetLastException(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetLastExceptionRequest* /*request*/, ::g2configmgr::GetLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetLastException(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2configmgr::GetLastExceptionRequest,::g2configmgr::GetLastExceptionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetLastExceptionCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetLastExceptionCode() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2configmgr::GetLastExceptionCodeRequest, ::g2configmgr::GetLastExceptionCodeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2configmgr::GetLastExceptionCodeRequest, ::g2configmgr::GetLastExceptionCodeResponse>* streamer) {
                       return this->StreamedGetLastExceptionCode(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetLastExceptionCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* /*context*/, const ::g2configmgr::GetLastExceptionCodeRequest* /*request*/, ::g2configmgr::GetLastExceptionCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetLastExceptionCode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2configmgr::GetLastExceptionCodeRequest,::g2configmgr::GetLastExceptionCodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Init() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2configmgr::InitRequest, ::g2configmgr::InitResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2configmgr::InitRequest, ::g2configmgr::InitResponse>* streamer) {
                       return this->StreamedInit(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2configmgr::InitRequest* /*request*/, ::g2configmgr::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInit(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2configmgr::InitRequest,::g2configmgr::InitResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReplaceDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReplaceDefaultConfigID() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2configmgr::ReplaceDefaultConfigIDRequest, ::g2configmgr::ReplaceDefaultConfigIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2configmgr::ReplaceDefaultConfigIDRequest, ::g2configmgr::ReplaceDefaultConfigIDResponse>* streamer) {
                       return this->StreamedReplaceDefaultConfigID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReplaceDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReplaceDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::ReplaceDefaultConfigIDRequest* /*request*/, ::g2configmgr::ReplaceDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReplaceDefaultConfigID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2configmgr::ReplaceDefaultConfigIDRequest,::g2configmgr::ReplaceDefaultConfigIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetDefaultConfigID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetDefaultConfigID() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2configmgr::SetDefaultConfigIDRequest, ::g2configmgr::SetDefaultConfigIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2configmgr::SetDefaultConfigIDRequest, ::g2configmgr::SetDefaultConfigIDResponse>* streamer) {
                       return this->StreamedSetDefaultConfigID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetDefaultConfigID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetDefaultConfigID(::grpc::ServerContext* /*context*/, const ::g2configmgr::SetDefaultConfigIDRequest* /*request*/, ::g2configmgr::SetDefaultConfigIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetDefaultConfigID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2configmgr::SetDefaultConfigIDRequest,::g2configmgr::SetDefaultConfigIDResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_AddConfig<WithStreamedUnaryMethod_ClearLastException<WithStreamedUnaryMethod_Destroy<WithStreamedUnaryMethod_GetConfig<WithStreamedUnaryMethod_GetConfigList<WithStreamedUnaryMethod_GetDefaultConfigID<WithStreamedUnaryMethod_GetLastException<WithStreamedUnaryMethod_GetLastExceptionCode<WithStreamedUnaryMethod_Init<WithStreamedUnaryMethod_ReplaceDefaultConfigID<WithStreamedUnaryMethod_SetDefaultConfigID<Service > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_AddConfig<WithStreamedUnaryMethod_ClearLastException<WithStreamedUnaryMethod_Destroy<WithStreamedUnaryMethod_GetConfig<WithStreamedUnaryMethod_GetConfigList<WithStreamedUnaryMethod_GetDefaultConfigID<WithStreamedUnaryMethod_GetLastException<WithStreamedUnaryMethod_GetLastExceptionCode<WithStreamedUnaryMethod_Init<WithStreamedUnaryMethod_ReplaceDefaultConfigID<WithStreamedUnaryMethod_SetDefaultConfigID<Service > > > > > > > > > > > StreamedService;
};

}  // namespace g2configmgr


#endif  // GRPC_g2configmgr_2eproto__INCLUDED
