// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: g2ssadm.proto
#ifndef GRPC_g2ssadm_2eproto__INCLUDED
#define GRPC_g2ssadm_2eproto__INCLUDED

#include "g2ssadm.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace g2ssadm {

class G2Diagnostic final {
 public:
  static constexpr char const* service_full_name() {
    return "g2ssadm.G2Diagnostic";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status ClearLastException(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest& request, ::g2ssadm::ClearLastExceptionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ClearLastExceptionResponse>> AsyncClearLastException(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ClearLastExceptionResponse>>(AsyncClearLastExceptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ClearLastExceptionResponse>> PrepareAsyncClearLastException(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ClearLastExceptionResponse>>(PrepareAsyncClearLastExceptionRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateSaltInStore(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest& request, ::g2ssadm::CreateSaltInStoreResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::CreateSaltInStoreResponse>> AsyncCreateSaltInStore(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::CreateSaltInStoreResponse>>(AsyncCreateSaltInStoreRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::CreateSaltInStoreResponse>> PrepareAsyncCreateSaltInStore(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::CreateSaltInStoreResponse>>(PrepareAsyncCreateSaltInStoreRaw(context, request, cq));
    }
    virtual ::grpc::Status Destroy(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest& request, ::g2ssadm::DestroyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::DestroyResponse>> AsyncDestroy(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::DestroyResponse>>(AsyncDestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::DestroyResponse>> PrepareAsyncDestroy(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::DestroyResponse>>(PrepareAsyncDestroyRaw(context, request, cq));
    }
    virtual ::grpc::Status GetLastException(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest& request, ::g2ssadm::GetLastExceptionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::GetLastExceptionResponse>> AsyncGetLastException(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::GetLastExceptionResponse>>(AsyncGetLastExceptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::GetLastExceptionResponse>> PrepareAsyncGetLastException(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::GetLastExceptionResponse>>(PrepareAsyncGetLastExceptionRaw(context, request, cq));
    }
    virtual ::grpc::Status GetLastExceptionCode(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest& request, ::g2ssadm::GetLastExceptionCodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::GetLastExceptionCodeResponse>> AsyncGetLastExceptionCode(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::GetLastExceptionCodeResponse>>(AsyncGetLastExceptionCodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::GetLastExceptionCodeResponse>> PrepareAsyncGetLastExceptionCode(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::GetLastExceptionCodeResponse>>(PrepareAsyncGetLastExceptionCodeRaw(context, request, cq));
    }
    virtual ::grpc::Status Init(::grpc::ClientContext* context, const ::g2ssadm::InitRequest& request, ::g2ssadm::InitResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::InitResponse>> AsyncInit(::grpc::ClientContext* context, const ::g2ssadm::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::InitResponse>>(AsyncInitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::InitResponse>> PrepareAsyncInit(::grpc::ClientContext* context, const ::g2ssadm::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::InitResponse>>(PrepareAsyncInitRaw(context, request, cq));
    }
    virtual ::grpc::Status InitializeNewToken(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest& request, ::g2ssadm::InitializeNewTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::InitializeNewTokenResponse>> AsyncInitializeNewToken(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::InitializeNewTokenResponse>>(AsyncInitializeNewTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::InitializeNewTokenResponse>> PrepareAsyncInitializeNewToken(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::InitializeNewTokenResponse>>(PrepareAsyncInitializeNewTokenRaw(context, request, cq));
    }
    virtual ::grpc::Status List(::grpc::ClientContext* context, const ::g2ssadm::ListRequest& request, ::g2ssadm::ListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ListResponse>> AsyncList(::grpc::ClientContext* context, const ::g2ssadm::ListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ListResponse>>(AsyncListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ListResponse>> PrepareAsyncList(::grpc::ClientContext* context, const ::g2ssadm::ListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ListResponse>>(PrepareAsyncListRaw(context, request, cq));
    }
    virtual ::grpc::Status Put(::grpc::ClientContext* context, const ::g2ssadm::PutRequest& request, ::g2ssadm::PutResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::PutResponse>> AsyncPut(::grpc::ClientContext* context, const ::g2ssadm::PutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::PutResponse>>(AsyncPutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::PutResponse>> PrepareAsyncPut(::grpc::ClientContext* context, const ::g2ssadm::PutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::PutResponse>>(PrepareAsyncPutRaw(context, request, cq));
    }
    virtual ::grpc::Status ReinitializeToken(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest& request, ::g2ssadm::ReinitializeTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ReinitializeTokenResponse>> AsyncReinitializeToken(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ReinitializeTokenResponse>>(AsyncReinitializeTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ReinitializeTokenResponse>> PrepareAsyncReinitializeToken(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ReinitializeTokenResponse>>(PrepareAsyncReinitializeTokenRaw(context, request, cq));
    }
    virtual ::grpc::Status SetupStore(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest& request, ::g2ssadm::SetupStoreResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::SetupStoreResponse>> AsyncSetupStore(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::SetupStoreResponse>>(AsyncSetupStoreRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::SetupStoreResponse>> PrepareAsyncSetupStore(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::SetupStoreResponse>>(PrepareAsyncSetupStoreRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void ClearLastException(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest* request, ::g2ssadm::ClearLastExceptionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ClearLastException(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest* request, ::g2ssadm::ClearLastExceptionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateSaltInStore(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest* request, ::g2ssadm::CreateSaltInStoreResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateSaltInStore(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest* request, ::g2ssadm::CreateSaltInStoreResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Destroy(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest* request, ::g2ssadm::DestroyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Destroy(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest* request, ::g2ssadm::DestroyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetLastException(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest* request, ::g2ssadm::GetLastExceptionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetLastException(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest* request, ::g2ssadm::GetLastExceptionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetLastExceptionCode(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest* request, ::g2ssadm::GetLastExceptionCodeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetLastExceptionCode(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest* request, ::g2ssadm::GetLastExceptionCodeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Init(::grpc::ClientContext* context, const ::g2ssadm::InitRequest* request, ::g2ssadm::InitResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Init(::grpc::ClientContext* context, const ::g2ssadm::InitRequest* request, ::g2ssadm::InitResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void InitializeNewToken(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest* request, ::g2ssadm::InitializeNewTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InitializeNewToken(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest* request, ::g2ssadm::InitializeNewTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void List(::grpc::ClientContext* context, const ::g2ssadm::ListRequest* request, ::g2ssadm::ListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void List(::grpc::ClientContext* context, const ::g2ssadm::ListRequest* request, ::g2ssadm::ListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Put(::grpc::ClientContext* context, const ::g2ssadm::PutRequest* request, ::g2ssadm::PutResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Put(::grpc::ClientContext* context, const ::g2ssadm::PutRequest* request, ::g2ssadm::PutResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ReinitializeToken(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest* request, ::g2ssadm::ReinitializeTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReinitializeToken(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest* request, ::g2ssadm::ReinitializeTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetupStore(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest* request, ::g2ssadm::SetupStoreResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetupStore(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest* request, ::g2ssadm::SetupStoreResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ClearLastExceptionResponse>* AsyncClearLastExceptionRaw(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ClearLastExceptionResponse>* PrepareAsyncClearLastExceptionRaw(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::CreateSaltInStoreResponse>* AsyncCreateSaltInStoreRaw(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::CreateSaltInStoreResponse>* PrepareAsyncCreateSaltInStoreRaw(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::DestroyResponse>* AsyncDestroyRaw(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::DestroyResponse>* PrepareAsyncDestroyRaw(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::GetLastExceptionResponse>* AsyncGetLastExceptionRaw(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::GetLastExceptionResponse>* PrepareAsyncGetLastExceptionRaw(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::GetLastExceptionCodeResponse>* AsyncGetLastExceptionCodeRaw(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::GetLastExceptionCodeResponse>* PrepareAsyncGetLastExceptionCodeRaw(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::InitResponse>* AsyncInitRaw(::grpc::ClientContext* context, const ::g2ssadm::InitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::InitResponse>* PrepareAsyncInitRaw(::grpc::ClientContext* context, const ::g2ssadm::InitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::InitializeNewTokenResponse>* AsyncInitializeNewTokenRaw(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::InitializeNewTokenResponse>* PrepareAsyncInitializeNewTokenRaw(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ListResponse>* AsyncListRaw(::grpc::ClientContext* context, const ::g2ssadm::ListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ListResponse>* PrepareAsyncListRaw(::grpc::ClientContext* context, const ::g2ssadm::ListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::PutResponse>* AsyncPutRaw(::grpc::ClientContext* context, const ::g2ssadm::PutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::PutResponse>* PrepareAsyncPutRaw(::grpc::ClientContext* context, const ::g2ssadm::PutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ReinitializeTokenResponse>* AsyncReinitializeTokenRaw(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::ReinitializeTokenResponse>* PrepareAsyncReinitializeTokenRaw(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::SetupStoreResponse>* AsyncSetupStoreRaw(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::g2ssadm::SetupStoreResponse>* PrepareAsyncSetupStoreRaw(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status ClearLastException(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest& request, ::g2ssadm::ClearLastExceptionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::ClearLastExceptionResponse>> AsyncClearLastException(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::ClearLastExceptionResponse>>(AsyncClearLastExceptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::ClearLastExceptionResponse>> PrepareAsyncClearLastException(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::ClearLastExceptionResponse>>(PrepareAsyncClearLastExceptionRaw(context, request, cq));
    }
    ::grpc::Status CreateSaltInStore(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest& request, ::g2ssadm::CreateSaltInStoreResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::CreateSaltInStoreResponse>> AsyncCreateSaltInStore(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::CreateSaltInStoreResponse>>(AsyncCreateSaltInStoreRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::CreateSaltInStoreResponse>> PrepareAsyncCreateSaltInStore(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::CreateSaltInStoreResponse>>(PrepareAsyncCreateSaltInStoreRaw(context, request, cq));
    }
    ::grpc::Status Destroy(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest& request, ::g2ssadm::DestroyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::DestroyResponse>> AsyncDestroy(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::DestroyResponse>>(AsyncDestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::DestroyResponse>> PrepareAsyncDestroy(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::DestroyResponse>>(PrepareAsyncDestroyRaw(context, request, cq));
    }
    ::grpc::Status GetLastException(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest& request, ::g2ssadm::GetLastExceptionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::GetLastExceptionResponse>> AsyncGetLastException(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::GetLastExceptionResponse>>(AsyncGetLastExceptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::GetLastExceptionResponse>> PrepareAsyncGetLastException(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::GetLastExceptionResponse>>(PrepareAsyncGetLastExceptionRaw(context, request, cq));
    }
    ::grpc::Status GetLastExceptionCode(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest& request, ::g2ssadm::GetLastExceptionCodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::GetLastExceptionCodeResponse>> AsyncGetLastExceptionCode(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::GetLastExceptionCodeResponse>>(AsyncGetLastExceptionCodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::GetLastExceptionCodeResponse>> PrepareAsyncGetLastExceptionCode(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::GetLastExceptionCodeResponse>>(PrepareAsyncGetLastExceptionCodeRaw(context, request, cq));
    }
    ::grpc::Status Init(::grpc::ClientContext* context, const ::g2ssadm::InitRequest& request, ::g2ssadm::InitResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::InitResponse>> AsyncInit(::grpc::ClientContext* context, const ::g2ssadm::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::InitResponse>>(AsyncInitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::InitResponse>> PrepareAsyncInit(::grpc::ClientContext* context, const ::g2ssadm::InitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::InitResponse>>(PrepareAsyncInitRaw(context, request, cq));
    }
    ::grpc::Status InitializeNewToken(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest& request, ::g2ssadm::InitializeNewTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::InitializeNewTokenResponse>> AsyncInitializeNewToken(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::InitializeNewTokenResponse>>(AsyncInitializeNewTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::InitializeNewTokenResponse>> PrepareAsyncInitializeNewToken(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::InitializeNewTokenResponse>>(PrepareAsyncInitializeNewTokenRaw(context, request, cq));
    }
    ::grpc::Status List(::grpc::ClientContext* context, const ::g2ssadm::ListRequest& request, ::g2ssadm::ListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::ListResponse>> AsyncList(::grpc::ClientContext* context, const ::g2ssadm::ListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::ListResponse>>(AsyncListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::ListResponse>> PrepareAsyncList(::grpc::ClientContext* context, const ::g2ssadm::ListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::ListResponse>>(PrepareAsyncListRaw(context, request, cq));
    }
    ::grpc::Status Put(::grpc::ClientContext* context, const ::g2ssadm::PutRequest& request, ::g2ssadm::PutResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::PutResponse>> AsyncPut(::grpc::ClientContext* context, const ::g2ssadm::PutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::PutResponse>>(AsyncPutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::PutResponse>> PrepareAsyncPut(::grpc::ClientContext* context, const ::g2ssadm::PutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::PutResponse>>(PrepareAsyncPutRaw(context, request, cq));
    }
    ::grpc::Status ReinitializeToken(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest& request, ::g2ssadm::ReinitializeTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::ReinitializeTokenResponse>> AsyncReinitializeToken(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::ReinitializeTokenResponse>>(AsyncReinitializeTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::ReinitializeTokenResponse>> PrepareAsyncReinitializeToken(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::ReinitializeTokenResponse>>(PrepareAsyncReinitializeTokenRaw(context, request, cq));
    }
    ::grpc::Status SetupStore(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest& request, ::g2ssadm::SetupStoreResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::SetupStoreResponse>> AsyncSetupStore(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::SetupStoreResponse>>(AsyncSetupStoreRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::SetupStoreResponse>> PrepareAsyncSetupStore(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::g2ssadm::SetupStoreResponse>>(PrepareAsyncSetupStoreRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void ClearLastException(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest* request, ::g2ssadm::ClearLastExceptionResponse* response, std::function<void(::grpc::Status)>) override;
      void ClearLastException(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest* request, ::g2ssadm::ClearLastExceptionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateSaltInStore(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest* request, ::g2ssadm::CreateSaltInStoreResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateSaltInStore(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest* request, ::g2ssadm::CreateSaltInStoreResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Destroy(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest* request, ::g2ssadm::DestroyResponse* response, std::function<void(::grpc::Status)>) override;
      void Destroy(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest* request, ::g2ssadm::DestroyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetLastException(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest* request, ::g2ssadm::GetLastExceptionResponse* response, std::function<void(::grpc::Status)>) override;
      void GetLastException(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest* request, ::g2ssadm::GetLastExceptionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetLastExceptionCode(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest* request, ::g2ssadm::GetLastExceptionCodeResponse* response, std::function<void(::grpc::Status)>) override;
      void GetLastExceptionCode(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest* request, ::g2ssadm::GetLastExceptionCodeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Init(::grpc::ClientContext* context, const ::g2ssadm::InitRequest* request, ::g2ssadm::InitResponse* response, std::function<void(::grpc::Status)>) override;
      void Init(::grpc::ClientContext* context, const ::g2ssadm::InitRequest* request, ::g2ssadm::InitResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void InitializeNewToken(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest* request, ::g2ssadm::InitializeNewTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void InitializeNewToken(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest* request, ::g2ssadm::InitializeNewTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void List(::grpc::ClientContext* context, const ::g2ssadm::ListRequest* request, ::g2ssadm::ListResponse* response, std::function<void(::grpc::Status)>) override;
      void List(::grpc::ClientContext* context, const ::g2ssadm::ListRequest* request, ::g2ssadm::ListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Put(::grpc::ClientContext* context, const ::g2ssadm::PutRequest* request, ::g2ssadm::PutResponse* response, std::function<void(::grpc::Status)>) override;
      void Put(::grpc::ClientContext* context, const ::g2ssadm::PutRequest* request, ::g2ssadm::PutResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ReinitializeToken(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest* request, ::g2ssadm::ReinitializeTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void ReinitializeToken(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest* request, ::g2ssadm::ReinitializeTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetupStore(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest* request, ::g2ssadm::SetupStoreResponse* response, std::function<void(::grpc::Status)>) override;
      void SetupStore(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest* request, ::g2ssadm::SetupStoreResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::ClearLastExceptionResponse>* AsyncClearLastExceptionRaw(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::ClearLastExceptionResponse>* PrepareAsyncClearLastExceptionRaw(::grpc::ClientContext* context, const ::g2ssadm::ClearLastExceptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::CreateSaltInStoreResponse>* AsyncCreateSaltInStoreRaw(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::CreateSaltInStoreResponse>* PrepareAsyncCreateSaltInStoreRaw(::grpc::ClientContext* context, const ::g2ssadm::CreateSaltInStoreRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::DestroyResponse>* AsyncDestroyRaw(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::DestroyResponse>* PrepareAsyncDestroyRaw(::grpc::ClientContext* context, const ::g2ssadm::DestroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::GetLastExceptionResponse>* AsyncGetLastExceptionRaw(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::GetLastExceptionResponse>* PrepareAsyncGetLastExceptionRaw(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::GetLastExceptionCodeResponse>* AsyncGetLastExceptionCodeRaw(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::GetLastExceptionCodeResponse>* PrepareAsyncGetLastExceptionCodeRaw(::grpc::ClientContext* context, const ::g2ssadm::GetLastExceptionCodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::InitResponse>* AsyncInitRaw(::grpc::ClientContext* context, const ::g2ssadm::InitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::InitResponse>* PrepareAsyncInitRaw(::grpc::ClientContext* context, const ::g2ssadm::InitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::InitializeNewTokenResponse>* AsyncInitializeNewTokenRaw(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::InitializeNewTokenResponse>* PrepareAsyncInitializeNewTokenRaw(::grpc::ClientContext* context, const ::g2ssadm::InitializeNewTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::ListResponse>* AsyncListRaw(::grpc::ClientContext* context, const ::g2ssadm::ListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::ListResponse>* PrepareAsyncListRaw(::grpc::ClientContext* context, const ::g2ssadm::ListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::PutResponse>* AsyncPutRaw(::grpc::ClientContext* context, const ::g2ssadm::PutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::PutResponse>* PrepareAsyncPutRaw(::grpc::ClientContext* context, const ::g2ssadm::PutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::ReinitializeTokenResponse>* AsyncReinitializeTokenRaw(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::ReinitializeTokenResponse>* PrepareAsyncReinitializeTokenRaw(::grpc::ClientContext* context, const ::g2ssadm::ReinitializeTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::SetupStoreResponse>* AsyncSetupStoreRaw(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::g2ssadm::SetupStoreResponse>* PrepareAsyncSetupStoreRaw(::grpc::ClientContext* context, const ::g2ssadm::SetupStoreRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ClearLastException_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateSaltInStore_;
    const ::grpc::internal::RpcMethod rpcmethod_Destroy_;
    const ::grpc::internal::RpcMethod rpcmethod_GetLastException_;
    const ::grpc::internal::RpcMethod rpcmethod_GetLastExceptionCode_;
    const ::grpc::internal::RpcMethod rpcmethod_Init_;
    const ::grpc::internal::RpcMethod rpcmethod_InitializeNewToken_;
    const ::grpc::internal::RpcMethod rpcmethod_List_;
    const ::grpc::internal::RpcMethod rpcmethod_Put_;
    const ::grpc::internal::RpcMethod rpcmethod_ReinitializeToken_;
    const ::grpc::internal::RpcMethod rpcmethod_SetupStore_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status ClearLastException(::grpc::ServerContext* context, const ::g2ssadm::ClearLastExceptionRequest* request, ::g2ssadm::ClearLastExceptionResponse* response);
    virtual ::grpc::Status CreateSaltInStore(::grpc::ServerContext* context, const ::g2ssadm::CreateSaltInStoreRequest* request, ::g2ssadm::CreateSaltInStoreResponse* response);
    virtual ::grpc::Status Destroy(::grpc::ServerContext* context, const ::g2ssadm::DestroyRequest* request, ::g2ssadm::DestroyResponse* response);
    virtual ::grpc::Status GetLastException(::grpc::ServerContext* context, const ::g2ssadm::GetLastExceptionRequest* request, ::g2ssadm::GetLastExceptionResponse* response);
    virtual ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* context, const ::g2ssadm::GetLastExceptionCodeRequest* request, ::g2ssadm::GetLastExceptionCodeResponse* response);
    virtual ::grpc::Status Init(::grpc::ServerContext* context, const ::g2ssadm::InitRequest* request, ::g2ssadm::InitResponse* response);
    virtual ::grpc::Status InitializeNewToken(::grpc::ServerContext* context, const ::g2ssadm::InitializeNewTokenRequest* request, ::g2ssadm::InitializeNewTokenResponse* response);
    virtual ::grpc::Status List(::grpc::ServerContext* context, const ::g2ssadm::ListRequest* request, ::g2ssadm::ListResponse* response);
    virtual ::grpc::Status Put(::grpc::ServerContext* context, const ::g2ssadm::PutRequest* request, ::g2ssadm::PutResponse* response);
    virtual ::grpc::Status ReinitializeToken(::grpc::ServerContext* context, const ::g2ssadm::ReinitializeTokenRequest* request, ::g2ssadm::ReinitializeTokenResponse* response);
    virtual ::grpc::Status SetupStore(::grpc::ServerContext* context, const ::g2ssadm::SetupStoreRequest* request, ::g2ssadm::SetupStoreResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ClearLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ClearLastException() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ClearLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearLastException(::grpc::ServerContext* /*context*/, const ::g2ssadm::ClearLastExceptionRequest* /*request*/, ::g2ssadm::ClearLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearLastException(::grpc::ServerContext* context, ::g2ssadm::ClearLastExceptionRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2ssadm::ClearLastExceptionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSaltInStore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateSaltInStore() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_CreateSaltInStore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSaltInStore(::grpc::ServerContext* /*context*/, const ::g2ssadm::CreateSaltInStoreRequest* /*request*/, ::g2ssadm::CreateSaltInStoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSaltInStore(::grpc::ServerContext* context, ::g2ssadm::CreateSaltInStoreRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2ssadm::CreateSaltInStoreResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Destroy() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2ssadm::DestroyRequest* /*request*/, ::g2ssadm::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroy(::grpc::ServerContext* context, ::g2ssadm::DestroyRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2ssadm::DestroyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetLastException() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastException(::grpc::ServerContext* /*context*/, const ::g2ssadm::GetLastExceptionRequest* /*request*/, ::g2ssadm::GetLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLastException(::grpc::ServerContext* context, ::g2ssadm::GetLastExceptionRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2ssadm::GetLastExceptionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetLastExceptionCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetLastExceptionCode() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetLastExceptionCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* /*context*/, const ::g2ssadm::GetLastExceptionCodeRequest* /*request*/, ::g2ssadm::GetLastExceptionCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLastExceptionCode(::grpc::ServerContext* context, ::g2ssadm::GetLastExceptionCodeRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2ssadm::GetLastExceptionCodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Init() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2ssadm::InitRequest* /*request*/, ::g2ssadm::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInit(::grpc::ServerContext* context, ::g2ssadm::InitRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2ssadm::InitResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InitializeNewToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InitializeNewToken() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_InitializeNewToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitializeNewToken(::grpc::ServerContext* /*context*/, const ::g2ssadm::InitializeNewTokenRequest* /*request*/, ::g2ssadm::InitializeNewTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInitializeNewToken(::grpc::ServerContext* context, ::g2ssadm::InitializeNewTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2ssadm::InitializeNewTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_List() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::g2ssadm::ListRequest* /*request*/, ::g2ssadm::ListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestList(::grpc::ServerContext* context, ::g2ssadm::ListRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2ssadm::ListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Put : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Put() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_Put() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Put(::grpc::ServerContext* /*context*/, const ::g2ssadm::PutRequest* /*request*/, ::g2ssadm::PutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPut(::grpc::ServerContext* context, ::g2ssadm::PutRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2ssadm::PutResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReinitializeToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReinitializeToken() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ReinitializeToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReinitializeToken(::grpc::ServerContext* /*context*/, const ::g2ssadm::ReinitializeTokenRequest* /*request*/, ::g2ssadm::ReinitializeTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReinitializeToken(::grpc::ServerContext* context, ::g2ssadm::ReinitializeTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2ssadm::ReinitializeTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetupStore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetupStore() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_SetupStore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupStore(::grpc::ServerContext* /*context*/, const ::g2ssadm::SetupStoreRequest* /*request*/, ::g2ssadm::SetupStoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetupStore(::grpc::ServerContext* context, ::g2ssadm::SetupStoreRequest* request, ::grpc::ServerAsyncResponseWriter< ::g2ssadm::SetupStoreResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ClearLastException<WithAsyncMethod_CreateSaltInStore<WithAsyncMethod_Destroy<WithAsyncMethod_GetLastException<WithAsyncMethod_GetLastExceptionCode<WithAsyncMethod_Init<WithAsyncMethod_InitializeNewToken<WithAsyncMethod_List<WithAsyncMethod_Put<WithAsyncMethod_ReinitializeToken<WithAsyncMethod_SetupStore<Service > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_ClearLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ClearLastException() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::g2ssadm::ClearLastExceptionRequest, ::g2ssadm::ClearLastExceptionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2ssadm::ClearLastExceptionRequest* request, ::g2ssadm::ClearLastExceptionResponse* response) { return this->ClearLastException(context, request, response); }));}
    void SetMessageAllocatorFor_ClearLastException(
        ::grpc::MessageAllocator< ::g2ssadm::ClearLastExceptionRequest, ::g2ssadm::ClearLastExceptionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2ssadm::ClearLastExceptionRequest, ::g2ssadm::ClearLastExceptionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ClearLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearLastException(::grpc::ServerContext* /*context*/, const ::g2ssadm::ClearLastExceptionRequest* /*request*/, ::g2ssadm::ClearLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearLastException(
      ::grpc::CallbackServerContext* /*context*/, const ::g2ssadm::ClearLastExceptionRequest* /*request*/, ::g2ssadm::ClearLastExceptionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateSaltInStore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateSaltInStore() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::g2ssadm::CreateSaltInStoreRequest, ::g2ssadm::CreateSaltInStoreResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2ssadm::CreateSaltInStoreRequest* request, ::g2ssadm::CreateSaltInStoreResponse* response) { return this->CreateSaltInStore(context, request, response); }));}
    void SetMessageAllocatorFor_CreateSaltInStore(
        ::grpc::MessageAllocator< ::g2ssadm::CreateSaltInStoreRequest, ::g2ssadm::CreateSaltInStoreResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2ssadm::CreateSaltInStoreRequest, ::g2ssadm::CreateSaltInStoreResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateSaltInStore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSaltInStore(::grpc::ServerContext* /*context*/, const ::g2ssadm::CreateSaltInStoreRequest* /*request*/, ::g2ssadm::CreateSaltInStoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSaltInStore(
      ::grpc::CallbackServerContext* /*context*/, const ::g2ssadm::CreateSaltInStoreRequest* /*request*/, ::g2ssadm::CreateSaltInStoreResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Destroy() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::g2ssadm::DestroyRequest, ::g2ssadm::DestroyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2ssadm::DestroyRequest* request, ::g2ssadm::DestroyResponse* response) { return this->Destroy(context, request, response); }));}
    void SetMessageAllocatorFor_Destroy(
        ::grpc::MessageAllocator< ::g2ssadm::DestroyRequest, ::g2ssadm::DestroyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2ssadm::DestroyRequest, ::g2ssadm::DestroyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2ssadm::DestroyRequest* /*request*/, ::g2ssadm::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::g2ssadm::DestroyRequest* /*request*/, ::g2ssadm::DestroyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetLastException() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::g2ssadm::GetLastExceptionRequest, ::g2ssadm::GetLastExceptionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2ssadm::GetLastExceptionRequest* request, ::g2ssadm::GetLastExceptionResponse* response) { return this->GetLastException(context, request, response); }));}
    void SetMessageAllocatorFor_GetLastException(
        ::grpc::MessageAllocator< ::g2ssadm::GetLastExceptionRequest, ::g2ssadm::GetLastExceptionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2ssadm::GetLastExceptionRequest, ::g2ssadm::GetLastExceptionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastException(::grpc::ServerContext* /*context*/, const ::g2ssadm::GetLastExceptionRequest* /*request*/, ::g2ssadm::GetLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLastException(
      ::grpc::CallbackServerContext* /*context*/, const ::g2ssadm::GetLastExceptionRequest* /*request*/, ::g2ssadm::GetLastExceptionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetLastExceptionCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetLastExceptionCode() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::g2ssadm::GetLastExceptionCodeRequest, ::g2ssadm::GetLastExceptionCodeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2ssadm::GetLastExceptionCodeRequest* request, ::g2ssadm::GetLastExceptionCodeResponse* response) { return this->GetLastExceptionCode(context, request, response); }));}
    void SetMessageAllocatorFor_GetLastExceptionCode(
        ::grpc::MessageAllocator< ::g2ssadm::GetLastExceptionCodeRequest, ::g2ssadm::GetLastExceptionCodeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2ssadm::GetLastExceptionCodeRequest, ::g2ssadm::GetLastExceptionCodeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetLastExceptionCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* /*context*/, const ::g2ssadm::GetLastExceptionCodeRequest* /*request*/, ::g2ssadm::GetLastExceptionCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLastExceptionCode(
      ::grpc::CallbackServerContext* /*context*/, const ::g2ssadm::GetLastExceptionCodeRequest* /*request*/, ::g2ssadm::GetLastExceptionCodeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Init() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::g2ssadm::InitRequest, ::g2ssadm::InitResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2ssadm::InitRequest* request, ::g2ssadm::InitResponse* response) { return this->Init(context, request, response); }));}
    void SetMessageAllocatorFor_Init(
        ::grpc::MessageAllocator< ::g2ssadm::InitRequest, ::g2ssadm::InitResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2ssadm::InitRequest, ::g2ssadm::InitResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2ssadm::InitRequest* /*request*/, ::g2ssadm::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Init(
      ::grpc::CallbackServerContext* /*context*/, const ::g2ssadm::InitRequest* /*request*/, ::g2ssadm::InitResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_InitializeNewToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_InitializeNewToken() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::g2ssadm::InitializeNewTokenRequest, ::g2ssadm::InitializeNewTokenResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2ssadm::InitializeNewTokenRequest* request, ::g2ssadm::InitializeNewTokenResponse* response) { return this->InitializeNewToken(context, request, response); }));}
    void SetMessageAllocatorFor_InitializeNewToken(
        ::grpc::MessageAllocator< ::g2ssadm::InitializeNewTokenRequest, ::g2ssadm::InitializeNewTokenResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2ssadm::InitializeNewTokenRequest, ::g2ssadm::InitializeNewTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_InitializeNewToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitializeNewToken(::grpc::ServerContext* /*context*/, const ::g2ssadm::InitializeNewTokenRequest* /*request*/, ::g2ssadm::InitializeNewTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InitializeNewToken(
      ::grpc::CallbackServerContext* /*context*/, const ::g2ssadm::InitializeNewTokenRequest* /*request*/, ::g2ssadm::InitializeNewTokenResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_List() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::g2ssadm::ListRequest, ::g2ssadm::ListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2ssadm::ListRequest* request, ::g2ssadm::ListResponse* response) { return this->List(context, request, response); }));}
    void SetMessageAllocatorFor_List(
        ::grpc::MessageAllocator< ::g2ssadm::ListRequest, ::g2ssadm::ListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2ssadm::ListRequest, ::g2ssadm::ListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::g2ssadm::ListRequest* /*request*/, ::g2ssadm::ListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* List(
      ::grpc::CallbackServerContext* /*context*/, const ::g2ssadm::ListRequest* /*request*/, ::g2ssadm::ListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Put : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Put() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::g2ssadm::PutRequest, ::g2ssadm::PutResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2ssadm::PutRequest* request, ::g2ssadm::PutResponse* response) { return this->Put(context, request, response); }));}
    void SetMessageAllocatorFor_Put(
        ::grpc::MessageAllocator< ::g2ssadm::PutRequest, ::g2ssadm::PutResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2ssadm::PutRequest, ::g2ssadm::PutResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Put() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Put(::grpc::ServerContext* /*context*/, const ::g2ssadm::PutRequest* /*request*/, ::g2ssadm::PutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Put(
      ::grpc::CallbackServerContext* /*context*/, const ::g2ssadm::PutRequest* /*request*/, ::g2ssadm::PutResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ReinitializeToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ReinitializeToken() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::g2ssadm::ReinitializeTokenRequest, ::g2ssadm::ReinitializeTokenResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2ssadm::ReinitializeTokenRequest* request, ::g2ssadm::ReinitializeTokenResponse* response) { return this->ReinitializeToken(context, request, response); }));}
    void SetMessageAllocatorFor_ReinitializeToken(
        ::grpc::MessageAllocator< ::g2ssadm::ReinitializeTokenRequest, ::g2ssadm::ReinitializeTokenResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2ssadm::ReinitializeTokenRequest, ::g2ssadm::ReinitializeTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ReinitializeToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReinitializeToken(::grpc::ServerContext* /*context*/, const ::g2ssadm::ReinitializeTokenRequest* /*request*/, ::g2ssadm::ReinitializeTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReinitializeToken(
      ::grpc::CallbackServerContext* /*context*/, const ::g2ssadm::ReinitializeTokenRequest* /*request*/, ::g2ssadm::ReinitializeTokenResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetupStore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetupStore() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::g2ssadm::SetupStoreRequest, ::g2ssadm::SetupStoreResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::g2ssadm::SetupStoreRequest* request, ::g2ssadm::SetupStoreResponse* response) { return this->SetupStore(context, request, response); }));}
    void SetMessageAllocatorFor_SetupStore(
        ::grpc::MessageAllocator< ::g2ssadm::SetupStoreRequest, ::g2ssadm::SetupStoreResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::g2ssadm::SetupStoreRequest, ::g2ssadm::SetupStoreResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetupStore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupStore(::grpc::ServerContext* /*context*/, const ::g2ssadm::SetupStoreRequest* /*request*/, ::g2ssadm::SetupStoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetupStore(
      ::grpc::CallbackServerContext* /*context*/, const ::g2ssadm::SetupStoreRequest* /*request*/, ::g2ssadm::SetupStoreResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_ClearLastException<WithCallbackMethod_CreateSaltInStore<WithCallbackMethod_Destroy<WithCallbackMethod_GetLastException<WithCallbackMethod_GetLastExceptionCode<WithCallbackMethod_Init<WithCallbackMethod_InitializeNewToken<WithCallbackMethod_List<WithCallbackMethod_Put<WithCallbackMethod_ReinitializeToken<WithCallbackMethod_SetupStore<Service > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ClearLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ClearLastException() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ClearLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearLastException(::grpc::ServerContext* /*context*/, const ::g2ssadm::ClearLastExceptionRequest* /*request*/, ::g2ssadm::ClearLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateSaltInStore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateSaltInStore() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_CreateSaltInStore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSaltInStore(::grpc::ServerContext* /*context*/, const ::g2ssadm::CreateSaltInStoreRequest* /*request*/, ::g2ssadm::CreateSaltInStoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Destroy() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2ssadm::DestroyRequest* /*request*/, ::g2ssadm::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetLastException() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastException(::grpc::ServerContext* /*context*/, const ::g2ssadm::GetLastExceptionRequest* /*request*/, ::g2ssadm::GetLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetLastExceptionCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetLastExceptionCode() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetLastExceptionCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* /*context*/, const ::g2ssadm::GetLastExceptionCodeRequest* /*request*/, ::g2ssadm::GetLastExceptionCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Init() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2ssadm::InitRequest* /*request*/, ::g2ssadm::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InitializeNewToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InitializeNewToken() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_InitializeNewToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitializeNewToken(::grpc::ServerContext* /*context*/, const ::g2ssadm::InitializeNewTokenRequest* /*request*/, ::g2ssadm::InitializeNewTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_List() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::g2ssadm::ListRequest* /*request*/, ::g2ssadm::ListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Put : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Put() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_Put() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Put(::grpc::ServerContext* /*context*/, const ::g2ssadm::PutRequest* /*request*/, ::g2ssadm::PutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReinitializeToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReinitializeToken() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ReinitializeToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReinitializeToken(::grpc::ServerContext* /*context*/, const ::g2ssadm::ReinitializeTokenRequest* /*request*/, ::g2ssadm::ReinitializeTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetupStore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetupStore() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_SetupStore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupStore(::grpc::ServerContext* /*context*/, const ::g2ssadm::SetupStoreRequest* /*request*/, ::g2ssadm::SetupStoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ClearLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ClearLastException() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ClearLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearLastException(::grpc::ServerContext* /*context*/, const ::g2ssadm::ClearLastExceptionRequest* /*request*/, ::g2ssadm::ClearLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearLastException(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateSaltInStore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateSaltInStore() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_CreateSaltInStore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSaltInStore(::grpc::ServerContext* /*context*/, const ::g2ssadm::CreateSaltInStoreRequest* /*request*/, ::g2ssadm::CreateSaltInStoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSaltInStore(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Destroy() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2ssadm::DestroyRequest* /*request*/, ::g2ssadm::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetLastException() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastException(::grpc::ServerContext* /*context*/, const ::g2ssadm::GetLastExceptionRequest* /*request*/, ::g2ssadm::GetLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLastException(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetLastExceptionCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetLastExceptionCode() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetLastExceptionCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* /*context*/, const ::g2ssadm::GetLastExceptionCodeRequest* /*request*/, ::g2ssadm::GetLastExceptionCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLastExceptionCode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Init() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2ssadm::InitRequest* /*request*/, ::g2ssadm::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInit(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InitializeNewToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InitializeNewToken() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_InitializeNewToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitializeNewToken(::grpc::ServerContext* /*context*/, const ::g2ssadm::InitializeNewTokenRequest* /*request*/, ::g2ssadm::InitializeNewTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInitializeNewToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_List() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::g2ssadm::ListRequest* /*request*/, ::g2ssadm::ListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Put : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Put() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_Put() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Put(::grpc::ServerContext* /*context*/, const ::g2ssadm::PutRequest* /*request*/, ::g2ssadm::PutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPut(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReinitializeToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReinitializeToken() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ReinitializeToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReinitializeToken(::grpc::ServerContext* /*context*/, const ::g2ssadm::ReinitializeTokenRequest* /*request*/, ::g2ssadm::ReinitializeTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReinitializeToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetupStore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetupStore() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_SetupStore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupStore(::grpc::ServerContext* /*context*/, const ::g2ssadm::SetupStoreRequest* /*request*/, ::g2ssadm::SetupStoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetupStore(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ClearLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ClearLastException() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ClearLastException(context, request, response); }));
    }
    ~WithRawCallbackMethod_ClearLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearLastException(::grpc::ServerContext* /*context*/, const ::g2ssadm::ClearLastExceptionRequest* /*request*/, ::g2ssadm::ClearLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearLastException(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateSaltInStore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateSaltInStore() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateSaltInStore(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateSaltInStore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSaltInStore(::grpc::ServerContext* /*context*/, const ::g2ssadm::CreateSaltInStoreRequest* /*request*/, ::g2ssadm::CreateSaltInStoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSaltInStore(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Destroy() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Destroy(context, request, response); }));
    }
    ~WithRawCallbackMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2ssadm::DestroyRequest* /*request*/, ::g2ssadm::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetLastException() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetLastException(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastException(::grpc::ServerContext* /*context*/, const ::g2ssadm::GetLastExceptionRequest* /*request*/, ::g2ssadm::GetLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLastException(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetLastExceptionCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetLastExceptionCode() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetLastExceptionCode(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetLastExceptionCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* /*context*/, const ::g2ssadm::GetLastExceptionCodeRequest* /*request*/, ::g2ssadm::GetLastExceptionCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLastExceptionCode(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Init() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Init(context, request, response); }));
    }
    ~WithRawCallbackMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2ssadm::InitRequest* /*request*/, ::g2ssadm::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Init(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_InitializeNewToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_InitializeNewToken() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InitializeNewToken(context, request, response); }));
    }
    ~WithRawCallbackMethod_InitializeNewToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InitializeNewToken(::grpc::ServerContext* /*context*/, const ::g2ssadm::InitializeNewTokenRequest* /*request*/, ::g2ssadm::InitializeNewTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InitializeNewToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_List() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->List(context, request, response); }));
    }
    ~WithRawCallbackMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::g2ssadm::ListRequest* /*request*/, ::g2ssadm::ListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* List(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Put : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Put() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Put(context, request, response); }));
    }
    ~WithRawCallbackMethod_Put() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Put(::grpc::ServerContext* /*context*/, const ::g2ssadm::PutRequest* /*request*/, ::g2ssadm::PutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Put(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ReinitializeToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ReinitializeToken() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReinitializeToken(context, request, response); }));
    }
    ~WithRawCallbackMethod_ReinitializeToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReinitializeToken(::grpc::ServerContext* /*context*/, const ::g2ssadm::ReinitializeTokenRequest* /*request*/, ::g2ssadm::ReinitializeTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReinitializeToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetupStore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetupStore() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetupStore(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetupStore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupStore(::grpc::ServerContext* /*context*/, const ::g2ssadm::SetupStoreRequest* /*request*/, ::g2ssadm::SetupStoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetupStore(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ClearLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ClearLastException() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2ssadm::ClearLastExceptionRequest, ::g2ssadm::ClearLastExceptionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2ssadm::ClearLastExceptionRequest, ::g2ssadm::ClearLastExceptionResponse>* streamer) {
                       return this->StreamedClearLastException(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ClearLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ClearLastException(::grpc::ServerContext* /*context*/, const ::g2ssadm::ClearLastExceptionRequest* /*request*/, ::g2ssadm::ClearLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClearLastException(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2ssadm::ClearLastExceptionRequest,::g2ssadm::ClearLastExceptionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateSaltInStore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateSaltInStore() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2ssadm::CreateSaltInStoreRequest, ::g2ssadm::CreateSaltInStoreResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2ssadm::CreateSaltInStoreRequest, ::g2ssadm::CreateSaltInStoreResponse>* streamer) {
                       return this->StreamedCreateSaltInStore(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateSaltInStore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateSaltInStore(::grpc::ServerContext* /*context*/, const ::g2ssadm::CreateSaltInStoreRequest* /*request*/, ::g2ssadm::CreateSaltInStoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateSaltInStore(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2ssadm::CreateSaltInStoreRequest,::g2ssadm::CreateSaltInStoreResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Destroy() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2ssadm::DestroyRequest, ::g2ssadm::DestroyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2ssadm::DestroyRequest, ::g2ssadm::DestroyResponse>* streamer) {
                       return this->StreamedDestroy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Destroy(::grpc::ServerContext* /*context*/, const ::g2ssadm::DestroyRequest* /*request*/, ::g2ssadm::DestroyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDestroy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2ssadm::DestroyRequest,::g2ssadm::DestroyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetLastException : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetLastException() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2ssadm::GetLastExceptionRequest, ::g2ssadm::GetLastExceptionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2ssadm::GetLastExceptionRequest, ::g2ssadm::GetLastExceptionResponse>* streamer) {
                       return this->StreamedGetLastException(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetLastException() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetLastException(::grpc::ServerContext* /*context*/, const ::g2ssadm::GetLastExceptionRequest* /*request*/, ::g2ssadm::GetLastExceptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetLastException(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2ssadm::GetLastExceptionRequest,::g2ssadm::GetLastExceptionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetLastExceptionCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetLastExceptionCode() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2ssadm::GetLastExceptionCodeRequest, ::g2ssadm::GetLastExceptionCodeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2ssadm::GetLastExceptionCodeRequest, ::g2ssadm::GetLastExceptionCodeResponse>* streamer) {
                       return this->StreamedGetLastExceptionCode(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetLastExceptionCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetLastExceptionCode(::grpc::ServerContext* /*context*/, const ::g2ssadm::GetLastExceptionCodeRequest* /*request*/, ::g2ssadm::GetLastExceptionCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetLastExceptionCode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2ssadm::GetLastExceptionCodeRequest,::g2ssadm::GetLastExceptionCodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Init() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2ssadm::InitRequest, ::g2ssadm::InitResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2ssadm::InitRequest, ::g2ssadm::InitResponse>* streamer) {
                       return this->StreamedInit(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Init(::grpc::ServerContext* /*context*/, const ::g2ssadm::InitRequest* /*request*/, ::g2ssadm::InitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInit(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2ssadm::InitRequest,::g2ssadm::InitResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InitializeNewToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InitializeNewToken() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2ssadm::InitializeNewTokenRequest, ::g2ssadm::InitializeNewTokenResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2ssadm::InitializeNewTokenRequest, ::g2ssadm::InitializeNewTokenResponse>* streamer) {
                       return this->StreamedInitializeNewToken(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InitializeNewToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InitializeNewToken(::grpc::ServerContext* /*context*/, const ::g2ssadm::InitializeNewTokenRequest* /*request*/, ::g2ssadm::InitializeNewTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInitializeNewToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2ssadm::InitializeNewTokenRequest,::g2ssadm::InitializeNewTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_List : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_List() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2ssadm::ListRequest, ::g2ssadm::ListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2ssadm::ListRequest, ::g2ssadm::ListResponse>* streamer) {
                       return this->StreamedList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_List() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status List(::grpc::ServerContext* /*context*/, const ::g2ssadm::ListRequest* /*request*/, ::g2ssadm::ListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2ssadm::ListRequest,::g2ssadm::ListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Put : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Put() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2ssadm::PutRequest, ::g2ssadm::PutResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2ssadm::PutRequest, ::g2ssadm::PutResponse>* streamer) {
                       return this->StreamedPut(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Put() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Put(::grpc::ServerContext* /*context*/, const ::g2ssadm::PutRequest* /*request*/, ::g2ssadm::PutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPut(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2ssadm::PutRequest,::g2ssadm::PutResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReinitializeToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReinitializeToken() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2ssadm::ReinitializeTokenRequest, ::g2ssadm::ReinitializeTokenResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2ssadm::ReinitializeTokenRequest, ::g2ssadm::ReinitializeTokenResponse>* streamer) {
                       return this->StreamedReinitializeToken(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReinitializeToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReinitializeToken(::grpc::ServerContext* /*context*/, const ::g2ssadm::ReinitializeTokenRequest* /*request*/, ::g2ssadm::ReinitializeTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReinitializeToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2ssadm::ReinitializeTokenRequest,::g2ssadm::ReinitializeTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetupStore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetupStore() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::g2ssadm::SetupStoreRequest, ::g2ssadm::SetupStoreResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::g2ssadm::SetupStoreRequest, ::g2ssadm::SetupStoreResponse>* streamer) {
                       return this->StreamedSetupStore(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetupStore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetupStore(::grpc::ServerContext* /*context*/, const ::g2ssadm::SetupStoreRequest* /*request*/, ::g2ssadm::SetupStoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetupStore(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::g2ssadm::SetupStoreRequest,::g2ssadm::SetupStoreResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ClearLastException<WithStreamedUnaryMethod_CreateSaltInStore<WithStreamedUnaryMethod_Destroy<WithStreamedUnaryMethod_GetLastException<WithStreamedUnaryMethod_GetLastExceptionCode<WithStreamedUnaryMethod_Init<WithStreamedUnaryMethod_InitializeNewToken<WithStreamedUnaryMethod_List<WithStreamedUnaryMethod_Put<WithStreamedUnaryMethod_ReinitializeToken<WithStreamedUnaryMethod_SetupStore<Service > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ClearLastException<WithStreamedUnaryMethod_CreateSaltInStore<WithStreamedUnaryMethod_Destroy<WithStreamedUnaryMethod_GetLastException<WithStreamedUnaryMethod_GetLastExceptionCode<WithStreamedUnaryMethod_Init<WithStreamedUnaryMethod_InitializeNewToken<WithStreamedUnaryMethod_List<WithStreamedUnaryMethod_Put<WithStreamedUnaryMethod_ReinitializeToken<WithStreamedUnaryMethod_SetupStore<Service > > > > > > > > > > > StreamedService;
};

}  // namespace g2ssadm


#endif  // GRPC_g2ssadm_2eproto__INCLUDED
